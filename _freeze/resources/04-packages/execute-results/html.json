{
  "hash": "a0858ab46cfd5bdebf8d1a2a5bc134dd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Installing the tidycensus, DeclareDesign, and dataverse packages\"\nauthor: \"Paul Testa\"\ndate: \"2/22/2022\"\nformat:\n  html:\n    toc: true\n    toc-location: right\n    toc-float: true\n    toc-depth: 2\n    number-sections: true\n---\n\n::: {.cell}\n\n:::\n\n\n# Overview {-}\n\nThis document provides instructions for installing the following packages:\n\n- [`dataverse`](https://cran.r-project.org/web/packages/dataverse/vignettes/A-introduction.html#:~:text=The%20dataverse%20package%20is%20the,into%20the%20reproducible%20research%20workflow.){target=\"_blank\"} a package to download and read files from dataverses like [Harvard's Dataverse](https://dataverse.harvard.edu/)\n\n\n- [`DeclareDesign`](https://declaredesign.org/){target=\"_blank\"} a set of packages useful for describing the properities of experimetnal and observational design\n\n- [`tidycensus`](https://walker-data.com/tidycensus/index.html){target=\"_blank\"} set of functions of that allow us to download data from the US Census' API\n\n- [`easystats`](https://easystats.github.io/easystats/){target=\"_blank\"} a set of packages like the `tidyverse` but for statistics.\n\n\nThese are useful packages, but in the past, I've found they don't play nicely with the simple `the_packages` `ipak(the_packages)` approach we take in class. \n\nAdditionally, for `tidycensus`, each of you will need to [request an API key from the Census]{.blue} and [install it locally]{.blue} to your computers.\n\n\n# Install the packages\n\nIn your console, please run each line of code separately\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"dataverse\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidycensus\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"easystats\", repos = \"https://easystats.r-universe.dev\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"DeclareDesign\")\n```\n:::\n\n\n\n- `R` will typically install and or/update a package's dependencies (other packages your package needs). \n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(\"images/pack1.png\")\n```\n\n::: {.cell-output-display}\n![](images/pack1.png){width=360}\n:::\n:::\n\n\n\n-  Sometimes R will ask you where and how you want to install/update these dependencies. Type the number 1 into your console and hit enter (this should try to install everything). If you get an error try again typing 2, then, 3, then 4. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(\"images/pack_dep.png\")\n```\n\n::: {.cell-output-display}\n![](images/pack_dep.png){width=360}\n:::\n:::\n\n\n\n\n- `R` may tell you need to restart `R` Try saying yes. If it doesn't start downloading, say no, see what happens. After the downloads are complete you may need to restart `R`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(\"images/pack2.png\")\n```\n\n::: {.cell-output-display}\n![](images/pack2.png){width=152}\n:::\n:::\n\n\n\n- `R` may then ask if you want to compile some packages from source. Type `Y` into your console. If this doesn't work, try again, but this time type `N` when asked\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(\"images/pack3.png\")\n```\n\n::: {.cell-output-display}\n![](images/pack3.png){width=360}\n:::\n:::\n\n\nAgain, this is a pain and sort of cryptic, but you only have to do it once. Sometimes you'll need to close and restart R for changes to take effect. Try working through these steps once or twice and if it still doesn't work, shoot me an email.\n\n# Check your installation\n\nIf the installations went smoothly, you should see something like this when you run the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(dataverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: dataverse\n```\n\n\n:::\n\n```{.r .cell-code}\nrequire(tidycensus)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: tidycensus\n```\n\n\n:::\n\n```{.r .cell-code}\nrequire(DeclareDesign)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: DeclareDesign\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: randomizr\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: fabricatr\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: estimatr\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'DeclareDesign'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:tidycensus':\n\n    get_estimates\n```\n\n\n:::\n\n```{.r .cell-code}\nrequire(easystats)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: easystats\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n# Attaching packages: easystats 0.7.0 (red = needs update)\n✔ bayestestR  0.13.2   ✔ correlation 0.8.4 \n✔ datawizard  0.9.1    ✔ effectsize  0.8.6 \n✔ insight     0.19.8   ✖ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.5\n✔ report      0.5.8    ✖ see         0.8.1 \n\nRestart the R-Session and update packages with `easystats::easystats_update()`.\n```\n\n\n:::\n:::\n\n\n\nIf not, don't worry. These packages aren't strictly necessary for Thursday; You should be able to follow along with the slides, but just won't be able to download the data and run the code on your machine. \n\nWe'll go over this in class on Thursday, and I can troubleshoot installation problems after class. \n\n\n\n# Install a Census API `tidycensus` package\n\nTo use the `tidycensus` package, you will need to do the following:\n\n1. Install the `tidycensus` package\n2. Load the installed package\n3. Request an API key from the Census\n4. Check your email\n5. Activate your key\n6. Install your API key in R\n7. Check that everything worked\n\nSteps 1 and 2 should be done. So let's walk through Steps 3-7:\n\n\n## Request an API key from the Census\n\nClick on this link: [https://api.census.gov/data/key_signup.html](https://api.census.gov/data/key_signup.html){target=\"_blank\"}\n\nAnd fill in the following information\n\n- Organization: \"Brown University\"\n- Email: `firstname_lastname@brown.edu`\n- Agree to terms of service\n- Submit request\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(\"images/census1.png\")\n```\n\n::: {.cell-output-display}\n![](images/census1.png){width=288}\n:::\n:::\n\n\n## Check Email\n\nYou should receive an email like this:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/census2.png){width=360}\n:::\n:::\n\n\n- Click on the link to activate your API key\n\n## Activate API key\n\n- Clicking the link should take you to a page that looks like this\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/census3.png){width=288}\n:::\n:::\n\n\n\n## Save API key in R\n\nGo back to the email from the census\n\n- Copy the string of letters and digits from the email (blocked out in red in the image above)\n- This is your unique census API key\n- Paste that string in between the quotation marks below and run `census_api_key()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncensus_api_key(\"YOUR API KEY GOES HERE\")\n```\n:::\n\n\n## Check that everything worked\n\n- `census_api_key()` should save your unique API to your .Renviron file which `tidycensus` will use whenever you make ask the Census to Download data.\n\n- If everything worked as planned, running `Sys.getenv(\"CENSUS_API_KEY\")` should display your long API key\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSys.getenv(\"CENSUS_API_KEY\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"cad56d0c712406cfe825878e3bd0de256d19f2aa\"\n```\n\n\n:::\n:::\n\n\nAnd you should be able to use functions from `tidycensus` to download census data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nage10 <- tidycensus::get_decennial(geography = \"state\", \n                       variables = \"P013001\", \n                       year = 2010)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2010 decennial Census\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nUsing Census Summary File 1\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(age10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  GEOID NAME       variable value\n  <chr> <chr>      <chr>    <dbl>\n1 01    Alabama    P013001   37.9\n2 02    Alaska     P013001   33.8\n3 04    Arizona    P013001   35.9\n4 05    Arkansas   P013001   37.4\n5 06    California P013001   35.2\n6 22    Louisiana  P013001   35.8\n```\n\n\n:::\n:::\n\n\nYou can read more about what `tidycensus` can do [here](https://walker-data.com/tidycensus/articles/basic-usage.html){target=\"_blank\"}\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}