{
  "hash": "09557f559e64d36b284d17f4111e3aae",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"POLS 1600\"\nsubtitle: \"Multiple Regression\"\ndate: last-modified\ndate-format: \"[Updated ]MMM D, YYYY\"\nformat: \n  revealjs:\n    theme: brownslides.scss\n    logo: images/pols1600_hex.png\n    footer: \"POLS 1600\"\n    multiplex: false\n    transition: fade\n    slide-number: c\n    incremental: true\n    center: false\n    menu: true\n    scrollable: true\n    highlight-style: github\n    progress: true\n    code-overflow: wrap\n    chalkboard: true\n    html-math-method: mathjax\n    # include-after-body: title-slide.html\n    title-slide-attributes:\n      align: left\n      data-background-image: images/pols1600_hex.png\n      data-background-position: 90% 50%\n      data-background-size: 40%\nfilters:\n  - openlinksinnewpage\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  message: false\n  cache: true\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n\n# {{< fa map-location>}} Overview {.inverse}\n\n## Class Plan\n\n- Announcements (20)\n  - [Assignment 1: Research Questions](https://pols1600.paultesta.org/assignments/a1) graded by Thursday, March 6\n  - [Assignment 2  Data:](https://pols1600.paultesta.org/assignments/a2) now due Sunday March 16\n  - [Assignment 3  Data:](https://pols1600.paultesta.org/assignments/a2) now due Sunday March 30 ? (Or should it be right before spring break?)\n- Review: Simple Linear Regression and Lab 5 (15-20 min)\n- Preview: Setup for Lab 6 (10-15 min)\n- Estimating and Interpreting Multiple Regression (25-30 min)\n- Difference-in-Differences (15-20 min)\n\n\n## Annoucements\n\n\n## Assignment 2\n\n- Prompt posted on website [here]{https://pols1600.paultesta.org/assignments/a2}\n\n- Uploaded to Canvas by [Sunday, March 16]{.blue}\n\n- Revised Research Question\n\n- Implied Linear Model\n\n- Code to load possible data \n\n## Feedback\n\n- Not a lot\n\n- So let's try to get those numbers up and will summarize the results of the [survey](https://brown.co1.qualtrics.com/jfe/form/SV_aVqL4lh92U7igGG){target=\"_blank\"} next week\n\n\n\n## Packages for today\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Pacakges for today\nthe_packages <- c(\n  ## R Markdown\n  \"kableExtra\",\"DT\",\"texreg\",\n  ## Tidyverse\n  \"tidyverse\", \"lubridate\", \"forcats\", \"haven\", \"labelled\",\n  ## Extensions for ggplot\n  \"ggmap\",\"ggrepel\", \"ggridges\", \"ggthemes\", \"ggpubr\", \n  \"GGally\", \"scales\", \"dagitty\", \"ggdag\", \"ggforce\",\n  # Data \n  \"COVID19\",\"maps\",\"mapdata\",\"qss\",\"tidycensus\", \"dataverse\", \n  # Analysis\n  \"DeclareDesign\", \"easystats\", \"zoo\"\n)\n\n## Define a function to load (and if needed install) packages\n\n#| label = \"ipak\"\nipak <- function(pkg){\n    new.pkg <- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n    if (length(new.pkg)) \n        install.packages(new.pkg, dependencies = TRUE)\n    sapply(pkg, require, character.only = TRUE)\n}\n\n## Install (if needed) and load libraries in the_packages\nipak(the_packages)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   kableExtra            DT        texreg     tidyverse     lubridate \n         TRUE          TRUE          TRUE          TRUE          TRUE \n      forcats         haven      labelled         ggmap       ggrepel \n         TRUE          TRUE          TRUE          TRUE          TRUE \n     ggridges      ggthemes        ggpubr        GGally        scales \n         TRUE          TRUE          TRUE          TRUE          TRUE \n      dagitty         ggdag       ggforce       COVID19          maps \n         TRUE          TRUE          TRUE          TRUE          TRUE \n      mapdata           qss    tidycensus     dataverse DeclareDesign \n         TRUE          TRUE          TRUE          TRUE          TRUE \n    easystats           zoo \n         TRUE          TRUE \n```\n\n\n:::\n:::\n\n\n\n  \n\n# {{< fa magnifying-glass>}} Lab 5 & Simple Linear Regression {.inverse}\n\n## Review: Key Concepts from the Lab\n\n## Review: Simple Linear Regression\n\nLet's pick up where we left off on Thursday. First we'll need to run some code to get to recreate our data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ---- Load data ----\n## Covid-19 Data\nload(url(\"https://pols1600.paultesta.org/files/data/covid.rda\"))\n## Presidential Election Data\nload(url(\"https://pols1600.paultesta.org/files/data/pres_df.rda\"))\n\n# ---- Recode Covid Data ----\nterritories <- c(\n  \"American Samoa\",\n  \"Guam\",\n  \"Northern Mariana Islands\",\n  \"Puerto Rico\",\n  \"Virgin Islands\"\n  )\n\n# Filter out Territories and create state variable\ncovid_us <- covid %>%\n  filter(!administrative_area_level_2 %in% territories)%>%\n  mutate(\n    state = administrative_area_level_2\n  )\n\n# Calculate new cases, new cases per capita, and 7-day average\n\ncovid_us %>%\n  dplyr::group_by(state) %>%\n  mutate(\n    new_cases = confirmed - lag(confirmed),\n    new_cases_pc = new_cases / population *100000,\n    new_cases_pc_7day = zoo::rollmean(new_cases_pc, \n                                     k = 7, \n                                     align = \"right\",\n                                     fill=NA )\n    ) -> covid_us\n\n# Recode facemask policy\n\ncovid_us %>%\nmutate(\n  # Recode facial_coverings to create face_masks\n    face_masks = case_when(\n      facial_coverings == 0 ~ \"No policy\",\n      abs(facial_coverings) == 1 ~ \"Recommended\",\n      abs(facial_coverings) == 2 ~ \"Some requirements\",\n      abs(facial_coverings) == 3 ~ \"Required shared places\",\n      abs(facial_coverings) == 4 ~ \"Required all times\",\n    ),\n    # Turn face_masks into a factor with ordered policy levels\n    face_masks = factor(face_masks,\n      levels = c(\"No policy\",\"Recommended\",\n                 \"Some requirements\",\n                 \"Required shared places\",\n                 \"Required all times\")\n    ) \n    ) -> covid_us\n\n# Create year-month and percent vaccinated variables\n\ncovid_us %>%\n  mutate(\n    year = year(date),\n    month = month(date),\n    year_month = paste(year, \n                       str_pad(month, width = 2, pad=0), \n                       sep = \"-\"),\n    percent_vaccinated = people_fully_vaccinated/population*100  \n    ) -> covid_us\n\n# Recode Deaths\ncovid_us %>%\n  dplyr::group_by(state) %>%\n  mutate(\n    new_deaths = deaths - lag(deaths),\n    new_deaths_pc = new_deaths / population *100000,\n    new_deaths_pc_7day = zoo::rollmean(new_deaths_pc, \n                                     k = 7, \n                                     align = \"right\",\n                                     fill=NA ),\n    new_deaths_pc_14day = zoo::rollmean(new_deaths_pc, \n                                     k = 14, \n                                     align = \"right\",\n                                     fill=NA )\n    ) -> covid_us\n\n# ---- Recode Presidential Election Data ----\n\n# Transform Presidential Election data\npres_df %>%\n  mutate(\n    year_election = year,\n    state = str_to_title(state),\n    # Fix DC\n    state = ifelse(state == \"District Of Columbia\", \"District of Columbia\", state)\n  ) %>%\n  filter(party_simplified %in% c(\"DEMOCRAT\",\"REPUBLICAN\"))%>%\n  filter(year == 2020) %>%\n  select(state, state_po, year_election, party_simplified, candidatevotes, totalvotes\n         ) %>%\n  pivot_wider(names_from = party_simplified,\n              values_from = candidatevotes) %>%\n  mutate(\n    dem_voteshare = DEMOCRAT/totalvotes*100,\n    rep_voteshare = REPUBLICAN/totalvotes*100,\n    winner = forcats::fct_rev(factor(ifelse(rep_voteshare > dem_voteshare,\"Trump\",\"Biden\")))\n  ) -> pres2020_df\n\n# ---- Merge Data ----\n\ndim(covid_us)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 53678    60\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(pres2020_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 51  9\n```\n\n\n:::\n\n```{.r .cell-code}\ncovid_df <- covid_us %>% left_join(\n  pres2020_df,\n  by = c(\"state\" = \"state\")\n)\ndim(covid_us) # Same number of rows as covid_us w/ 8 additional columns\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 53678    60\n```\n\n\n:::\n:::\n\n\n\n## {.smaller}\n### Calculating Conditional Means\n\n::: panel-tabset\n\n## Q6\nNow let's revisit question 6, which asked you to calculate some conditional means:\n\n- Overall\n- Before the vaccine was widely available\n- After the vaccine was widely available\n\n\n\n## Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ---- Deaths: Overall ----\ncovid_df %>%\n  group_by(winner)%>%\n  summarise(\n    new_deaths = mean(new_deaths, na.rm=T),\n    new_deaths_pc_7day = mean(new_deaths_pc_7day, na.rm=T),\n  ) %>% \n  mutate(\n    comparison = \"Overall\"\n  ) -> deaths_overall\n\n# ---- Deaths: Pre Vaccine ----\ncovid_df %>%\n  filter(date < \"2021-04-19\") %>%\n  group_by(winner)%>%\n  summarise(\n    new_deaths = mean(new_deaths, na.rm=T),\n    new_deaths_pc_7day = mean(new_deaths_pc_7day, na.rm=T),\n  ) %>% \n  mutate(\n    comparison = \"Pre Vaccine\"\n  ) -> deaths_pre_vax\n\n# ---- Deaths: Post Vaccine ----\ncovid_df %>%\n  filter(date >= \"2021-04-19\") %>%\n  group_by(winner)%>%\n  summarise(\n    new_deaths = mean(new_deaths, na.rm=T),\n    new_deaths_pc_7day = mean(new_deaths_pc_7day, na.rm=T),\n  ) %>% \n  mutate(\n    comparison = \"Post Vaccine\"\n  ) -> deaths_post_vax\n\n# ---- Tidy outputs for display ----\n\ndeaths_tab <- deaths_overall %>% \n  bind_rows(\n  deaths_pre_vax,\n  deaths_post_vax\n) %>% \n  mutate(\n    comparison = factor(\n      comparison,\n      levels = c(\"Overall\",\"Pre Vaccine\", \"Post Vaccine\")\n      )\n  )\n```\n:::\n\n\n\n## Table\n\n\n\n::: {.cell lable='q6_tab'}\n\n```{.r .cell-code}\nknitr::kable(deaths_tab) %>% \n  kableExtra::kable_styling()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> winner </th>\n   <th style=\"text-align:right;\"> new_deaths </th>\n   <th style=\"text-align:right;\"> new_deaths_pc_7day </th>\n   <th style=\"text-align:left;\"> comparison </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Trump </td>\n   <td style=\"text-align:right;\"> 19.34867 </td>\n   <td style=\"text-align:right;\"> 0.3402479 </td>\n   <td style=\"text-align:left;\"> Overall </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Biden </td>\n   <td style=\"text-align:right;\"> 22.04853 </td>\n   <td style=\"text-align:right;\"> 0.2871843 </td>\n   <td style=\"text-align:left;\"> Overall </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Trump </td>\n   <td style=\"text-align:right;\"> 22.82048 </td>\n   <td style=\"text-align:right;\"> 0.4000294 </td>\n   <td style=\"text-align:left;\"> Pre Vaccine </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Biden </td>\n   <td style=\"text-align:right;\"> 30.61051 </td>\n   <td style=\"text-align:right;\"> 0.3801906 </td>\n   <td style=\"text-align:left;\"> Pre Vaccine </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Trump </td>\n   <td style=\"text-align:right;\"> 17.07402 </td>\n   <td style=\"text-align:right;\"> 0.3016571 </td>\n   <td style=\"text-align:left;\"> Post Vaccine </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Biden </td>\n   <td style=\"text-align:right;\"> 16.30683 </td>\n   <td style=\"text-align:right;\"> 0.2257111 </td>\n   <td style=\"text-align:left;\"> Post Vaccine </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n## {{< fa code >}}-Fig \n\n\n\n::: {.cell lable='q6fig_code'}\n\n```{.r .cell-code}\n# 1. Data\ndeaths_tab %>% \n  # 2. Aesthetics\n  ggplot(\n    aes(winner, new_deaths_pc_7day,\n        fill = winner)\n  ) +\n  # 3. Geometries\n  geom_bar(stat = \"identity\") +\n  # 4. Facets\n  facet_grid(~ comparison) +\n  # 5. Labels and Themes\n  guides(fill = \"none\") +\n  labs(\n    x = \"State's won by\",\n    y = \"Average # of Deaths per 100k\\n(7-day rolling average)\",\n    title = \"Red States have more Covid-19 deaths per capita after vaccine\"\n  )+\n  theme_minimal()+\n  theme(title = element_text(size = 10,face = \"bold\")) -> fig_q6\n```\n:::\n\n\n\n## {{< fa chart-line >}}-Fig \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/fig_q6-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n## {.smaller}  \n#### Using OLS to estimate conditional means \n\n:::: panel-tabset\n\n## Q7\nQuestion 7 asked you estimate the following OLS models:\n\n$$ \\text{New Deaths} = \\beta_0 + \\beta_1 \\text{Election Winner} + \\epsilon $$\n\n$$ \\text{7-day average of New Deaths (per 100k)} = \\beta_0 + \\beta_1 \\text{Election Winner} + \\epsilon $$\n\n::: {.callout-note}\nRecall `winner` is a [factor]{.blue} whose levels we set to be `c(\"Trump\",\"Biden\")`. \n\n`lm()` converts factors into [binary indicators]{.blue}. Here `0=\"Trump\"` and `1=\"Biden\"`\n:::\n\n\n## {{< fa code >}}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1_lab <- lm(new_deaths ~ winner, covid_df)\nm2_lab <- lm(new_deaths_pc_7day ~ winner, covid_df)\n```\n:::\n\n\n\n## Output\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1_lab\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = new_deaths ~ winner, data = covid_us)\n\nCoefficients:\n(Intercept)  winnerBiden  \n      19.35         2.70  \n```\n\n\n:::\n\n```{.r .cell-code}\n# Just the coefficients\ncoef(m2_lab)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(Intercept) winnerBiden \n 0.34024787 -0.05306357 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Coefficients with summary stats (for later)\nsummary(m2_lab)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = new_deaths_pc_7day ~ winner, data = covid_us)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.0016 -0.2205 -0.1340  0.0966  5.8550 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.340248   0.002487  136.83   <2e-16 ***\nwinnerBiden -0.053064   0.003475  -15.27   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.3978 on 52447 degrees of freedom\n  (1229 observations deleted due to missingness)\nMultiple R-squared:  0.004427,\tAdjusted R-squared:  0.004408 \nF-statistic: 233.2 on 1 and 52447 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n\n## Table\n\n\n\n\n```{.r .cell-code}\ntexreg::htmlreg(list(m1_lab,m2_lab),\n                custom.header = list(\n                  \"DV:\" = 1:2\n                ),\n                custom.model.names = c(\n                  \"new_deaths\",\n                  \"new_deaths_pc_7day\"\n                ))\n```\n\n<table class=\"texreg\" style=\"margin: 10px auto;border-collapse: collapse;border-spacing: 0px;caption-side: bottom;color: #000000;border-top: 2px solid #000000;\">\n<caption>Statistical models</caption>\n<thead>\n<tr>\n<th>&nbsp;</th>\n<th style=\"padding-left: 5px;padding-right: 5px;border-bottom: 1px solid #000000;\" colspan=\"2\">DV:</th>\n</tr>\n<tr>\n<th style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">new_deaths</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">new_deaths_pc_7day</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">(Intercept)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">19.35<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.34<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.39)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.00)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">winnerBiden</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">2.70<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">-0.05<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.55)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.00)</td>\n</tr>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.00</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.00</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">Adj. R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.00</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.00</td>\n</tr>\n<tr style=\"border-bottom: 2px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">Num. obs.</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">52755</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">52449</td>\n</tr>\n</tbody>\n<tfoot>\n<tr>\n<td style=\"font-size: 0.8em;\" colspan=\"3\"><sup>&#42;&#42;&#42;</sup>p &lt; 0.001; <sup>&#42;&#42;</sup>p &lt; 0.01; <sup>&#42;</sup>p &lt; 0.05</td>\n</tr>\n</tfoot>\n</table>\n\n\n\n::::\n\n\n## {.smaller} \n### Q7: When the CEF is Linear, OLS = CEF\n\n\n::: panel-tabset\n\n## {{< fa lightbulb >}}\n\nIf the [CEF]{.blue} is linear, then [OLS = CEF]{.blue}\n\nIn a [saturated]{.blue} linear model, every [group]{.blue} in the data can be represented by a [coefficient]{.blue} or combination of coefficients in the model. \n\n## {{< fa code >}} -CEF\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_df %>%\n  mutate(\n    biden01 = ifelse(winner == \"Biden\",1,0)\n  ) %>% \n  ggplot(aes(biden01, new_deaths_pc_7day))+\n  geom_jitter(size=.25,alpha=.15)+\n  stat_summary(col=\"red\")+\n  stat_summary(aes(label=round(..y..,2)),\n               geom = \"text\", \n               position = position_nudge(y = 1),\n               col = \"red\",\n               fun = mean) +\n  theme_minimal()-> fig_q7cef\n```\n:::\n\n\n\n## {{< fa chart-line >}}-CEF\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/fig_q7cef-1.png){width=960}\n:::\n:::\n\n\n\n\n## {{< fa code >}}-OLS\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_q7cef +\n  stat_smooth(method = \"lm\",se = F)+\n  stat_summary(aes(label=round(..y..,2)),\n               geom = \"text\", \n               position = position_nudge(y = .05),\n               col = \"red\",\n               fun = mean)+\n  coord_cartesian(ylim=c(0,.45))+\n  geom_segment(aes(\n    x = 0,\n    xend = 0,\n    y = coef(m2_lab)[1],\n    yend = coef(m2_lab)[1] + coef(m2_lab)[2]\n  ),\n  col = \"blue\",\n  linetype = \"dashed\")+\n  geom_segment(aes(\n    x = 0,\n    xend = 1,\n    y = coef(m2_lab)[1] + coef(m2_lab)[2],\n    yend = coef(m2_lab)[1] + coef(m2_lab)[2]\n  ),\n  col = \"blue\",\n  linetype = \"dashed\")+\n  annotate(\"text\",\n           label = expression(paste(beta[0],\" = \" )),\n           x = 0, \n           y = coef(m2_lab)[1] + 0.075,\n           hjust = \"center\",\n           col = \"blue\"\n           )+\n    annotate(\"text\",\n           label = expression(paste(beta[1],\" = 0.29 - 0.34 = -0.05\" )),\n           x = 0, \n           y = coef(m2_lab)[1] +coef(m2_lab)[2] - 0.05,\n           hjust = \"left\",\n           col = \"blue\"\n           )+\n  annotate(\"text\",\n           label = expression(\n             paste(beta[0],\" + \", beta[1], \" = \" )),\n           x = 1, \n           y = coef(m2_lab)[1] + 0.05,\n           hjust = \"center\",\n           col = \"blue\"\n           ) -> fig_q7ols\n```\n:::\n\n\n\n## {{< fa chart-line >}}-OLS\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/fig_q7ols-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n## {.smaller}\n#### Q8: Vote shares, vaccinations, and deaths\n\n::: panel-tabset\n\n## Q9\n\nQ9 asked you to fit [three]{.blue} models exploring the relationship between:\n\n$$ \\text{m3} =\\text{14-day average of New Deaths (per 100k)} = \\beta_0 + \\beta_1 \\text{Percent Vaccinated} $$\n$$ \\text{m4} =\\text{Percent Vaccinated} = \\beta_0 + \\beta_1 \\text{Republican Vote Share} $$\n$$ \\text{m5} =\\text{14-day average of New Deaths (per 100k)} = \\beta_0 + \\beta_1 \\text{Republican Vote Share} $$\n\nOn September 23, 2021, when Leonhardt was writing\n\n## {{< fa code >}}-OLS\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Deaths modeled by percent vaccinated on 2021-09-23\nm3_lab <- lm(new_deaths_pc_14day ~ percent_vaccinated, \n         covid_df,\n         subset = date == \"2021-09-23\")\n\n#  Percent vaccinated modeled by Republican vote share on 2021-09-23\nm4_lab <- lm(percent_vaccinated ~ rep_voteshare, \n         covid_df,\n         subset = date == \"2021-09-23\")\n\n# Deaths modeled by Republican vote share on 2021-09-23\nm5_lab <- lm(new_deaths_pc_14day ~ rep_voteshare, \n         covid_df,\n         subset = date == \"2021-09-23\")\n```\n:::\n\n\n\n## Results\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoef(m3_lab)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       (Intercept) percent_vaccinated \n         2.4232235         -0.0330773 \n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(m4_lab)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  (Intercept) rep_voteshare \n   84.3326265    -0.5731175 \n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(m5_lab)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  (Intercept) rep_voteshare \n  -0.36296799    0.01888996 \n```\n\n\n:::\n:::\n\n\n\n\n:::\n\n## {.smaller}\n#### Q9: Visualizing Vote Shares and Deaths\n\n::: panel-tabset\n\n## Q9\n\nQ9 asks you to visualize the results of the model `m5`\n\nLet's take a basic figure, and make it fetch!\n\n## {{< fa code >}}-Basic\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_df %>%\n  # Only use observations from September 23, 2021\n  filter(date == \"2021-09-23\") %>%\n  # Exclude DC\n  filter(state != \"District of Columbia\") %>%\n  # Set aesthetics\n  ggplot(aes(x = rep_voteshare,\n             y = new_deaths_pc_14day))+\n  # Set geometries\n  geom_point(aes(col=rep_voteshare),size=2,alpha=.5)+\n  # Include the linear regression of lm(new_deaths_pc_14day ~ rep_voteshare)\n  geom_smooth(method = \"lm\", se=F,\n              col = \"grey\", linetype =2) -> fig_m5_lab\n```\n:::\n\n\n\n\n## {{< fa chart-line >}}-Basic\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_m5_lab\n```\n\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/q9_basic_fig-1.png){width=960}\n:::\n:::\n\n\n\n\n## {{< fa code >}}-Fetch\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_m5_lab +\n  # two way gradient, blue states -> blue, red states -> red, swing -> grey\n  scale_color_gradient2(\n    midpoint = 50,\n    low = \"blue\", mid = \"grey\", high = \"red\",\n    guide = \"none\")+\n  # Vertical line at 50% threshold\n  geom_vline(xintercept = 50, \n             col = \"grey\",linetype = 3)+\n  # Add labels\n  ggrepel::geom_text_repel(aes(label = state_po), size=2)+\n  # theme with minimal lines\n  theme_classic()+\n  # Labels\n  labs(\n    x = \"Republican Vote Share\\n 2020 Presidential Election\",\n    y = \"New Covid-19 Deaths per 100kresidents\\n (14-day average)\",\n    title = \"Partisan Gaps in Covid-19 Deaths at the State Level\",\n    subtitle = \"Data from Sept. 23, 2021\"\n  ) -> fig_m5_lab_fetch\n```\n:::\n\n\n\n\n## {{< fa chart-line >}}-Fetch\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_m5_lab_fetch\n```\n\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/q9_fetch_fig-1.png){width=960}\n:::\n:::\n\n\n\n\n:::\n\n## Q10: Alternative Explanations\n\n- Finally Q10 asked you to consider some possible [alternative explanations]{.blue} or [omitted variables]{.blue} that might explain the [positive  relationship]{.blue}, between Republican Vote Share and Covid-19 deaths.\n\n- In this week's lab, we'll see how we can use [multiple regression]{.blue} to evaluate these claims.\n\n\n# {{< fa code >}}Previewing Lab 6\n\n## Red Covid\n\nThe core thesis of Red Covid is something like the following:\n\n> Since Covid-19 vaccines became widely available to the general public in the spring of 2021, Republicans have been less likely to get the vaccine. Lower rates of vaccination among Republicans have in turn led to higher rates of death from Covid-19 in Red States compared to Blue States.\n\n## {.smaller}\n#### Testing Alternative Explanations of Red Covid \n\n- A skeptic might argue that this relationship is [spurious]{.blue}. \n\n- There are lots of ways that Red States differ from Blue States -- demographics, economics, geography, culture -- that might explain the differences in Covid-19 deaths.\n\n## {.smaller}\n#### Testing Alternative Explanations of Red Covid \n\n- In Lab 6, we use multiple regression to try and [control for]{.blue} the following [alternative explanations]{.blue}:\n\n  - Differences in [median age]{.blue}\n  - Differences in [median income]{.blue}\n\n- To do this, we need to merge in some additional state level data from the census.\n\n## Loading data from the Census\n\nIf you worked through the instructions [here]() and  installed `tidycensus` and a Census API key on your machine, you should be able to run the following:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacs_df <- tidycensus::get_acs(geography = \"state\", \n              variables = c(med_income = \"B19013_001\",\n                            med_age = \"B01002_001\"), \n              year = 2019)\n```\n:::\n\n\n\nIf not, no worries, just uncomment the code below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Uncomment if get_acs() doesn't work:\n# load(url(\"https://pols1600.paultesta.org/files/data/acs_df.rda\"))\n```\n:::\n\n\n\n## Tidy Census Data{.smaller}\n\n::: panel-tabset\n\n## Task\n\n`get_acs()` returns data whose [unit of analysis]{.blue} is roughly a [state-variable]{.blue}\n\nWe need to [reshape]{.blue} `acs_df` using `pivot_wider()` so that the [unit of analysis]{.blue} is just a [state]{.blue}, and each column variable is a [column]{.blue}\n\n## {{< fa table >}}-Old\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacs_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 104 × 5\n   GEOID NAME       variable   estimate    moe\n   <chr> <chr>      <chr>         <dbl>  <dbl>\n 1 01    Alabama    med_age        39      0.2\n 2 01    Alabama    med_income  50536    304  \n 3 02    Alaska     med_age        34.3    0.1\n 4 02    Alaska     med_income  77640   1015  \n 5 04    Arizona    med_age        37.7    0.2\n 6 04    Arizona    med_income  58945    266  \n 7 05    Arkansas   med_age        38.1    0.1\n 8 05    Arkansas   med_income  47597    328  \n 9 06    California med_age        36.5    0.1\n10 06    California med_income  75235    232  \n# ℹ 94 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## {{< fa code >}}-Tidy\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacs_df %>%\n  mutate(\n    state = NAME,\n  ) %>%\n  select(state, variable, estimate) %>%\n  pivot_wider(names_from = variable,\n              values_from = estimate) -> acs_df\n```\n:::\n\n\n\n## {{< fa table >}}-New\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacs_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 52 × 3\n   state                med_age med_income\n   <chr>                  <dbl>      <dbl>\n 1 Alabama                 39        50536\n 2 Alaska                  34.3      77640\n 3 Arizona                 37.7      58945\n 4 Arkansas                38.1      47597\n 5 California              36.5      75235\n 6 Colorado                36.7      72331\n 7 Connecticut             41        78444\n 8 Delaware                40.6      68287\n 9 District of Columbia    34        86420\n10 Florida                 42        55660\n# ℹ 42 more rows\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Merge Census data into Covid data{.smaller}\n\n::::: panel-tabset\n\n\n## Task\n\n::::{.nonincremental}\n\nNow we can [merge]{.blue} `acs_df` into `covid_us` using the `left_join()` function\n\n::: {.callout-note}\n- In the code, we'll save the output of joining `acs_df` to `covid_us` to a [new dataframe]{.blue} called `covid_df` to avoid potentially [duplicating columns]{.blue}  \n:::\n\n::::\n\n## {{< fa code >}}-Merge\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(acs_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 52  3\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(acs_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 52  3\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(covid_us)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 53678    60\n```\n\n\n:::\n\n```{.r .cell-code}\n# Merge tmp with acs_df and save as final covid_df file\ncovid_df <- covid_df %>% left_join(\n  acs_df,\n  by = c(\"state\" = \"state\")\n)\ndim(covid_df)  # Same number of rows as tmp w/ 2 additional columns\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 53678    70\n```\n\n\n:::\n:::\n\n\n\n:::::\n\n## Subset Data{.smaller}\n\n::::: panel-tabset\n\n## Task\n\n::::{.nonincremental}\nNext, we'll [subset]{.blue} the data to include just the values from variables we'll use in the lab on from September 23, 2021 using:\n\n- `filter()`\n- `select()`\n\n::: {.callout-note}\n- Again, we'll save this output to a new object called `covid_lab`  \n:::\n\n::::\n\n## {{< fa code >}}-Subset\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthe_vars <- c(\n  # Covid variables\n  \"state\",\"state_po\",\"date\",\"new_deaths_pc_14day\", \"percent_vaccinated\",\n  # Election variables\n  \"winner\",\"rep_voteshare\",\n  # Demographic variables\n  \"med_age\",\"med_income\",\"population\")\n\n\ncovid_lab <- covid_df %>%\n  filter( date == \"2021-09-23\") %>%\n  select(all_of(the_vars)) %>%\n  ungroup()\n\nlength(the_vars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(covid_lab)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 51 10\n```\n\n\n:::\n:::\n\n\n\n## {{< fa table >}}-Subsetted Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_lab\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 51 × 10\n   state       state_po date       new_deaths_pc_14day percent_vaccinated winner\n   <chr>       <I<chr>> <date>                   <dbl>              <dbl> <fct> \n 1 Minnesota   MN       2021-09-23               0.222               61.0 Biden \n 2 California  CA       2021-09-23               0.295               60.8 Biden \n 3 Florida     FL       2021-09-23               1.61                58.4 Trump \n 4 Wyoming     WY       2021-09-23               0.938               43.9 Trump \n 5 South Dako… SD       2021-09-23               0.291               52.4 Trump \n 6 Kansas      KS       2021-09-23               0.559               53.9 Trump \n 7 Nevada      NV       2021-09-23               0.700               51.8 Biden \n 8 Virginia    VA       2021-09-23               0.379               62.5 Biden \n 9 Washington  WA       2021-09-23               0.532               63.2 Biden \n10 Oregon      OR       2021-09-23               0.439               62.3 Biden \n# ℹ 41 more rows\n# ℹ 4 more variables: rep_voteshare <dbl>, med_age <dbl>, med_income <dbl>,\n#   population <int>\n```\n\n\n:::\n:::\n\n\n\n:::::\n\n\n## Standardized Variables{.smaller}\n\n::::{.nonincremental}\n\nWhen numeric [variables]{.blue} are measured on [different scales]{.blue}, it can be useful to construct [standardized]{.blue} measures, sometimes called [z-scores]{.blue}\n\n$$z\\text{-scores of x} = \\frac{x_i - \\mu_{x}}{\\sigma_x}$$\n\n- The *z-score* of Age is\n\n$$z\\text{-scores of Age} = \\frac{\\text{Age}_i - \\text{Average Age}}{\\text{Standard Deviation of Age}}$$\n\n::: {.callout-note}\n- Standardized variables [all]{.blue} have a [mean of 0]{.blue} and a [standard deviation of 1]{.blue}\n- Standardizing variables helps us [interpret coefficients]{.blue} in [multiple regressions]{.blue} with predictors [measured on different scales]{.blue} \n:::\n\n::::\n\n## Standardizing variables for the lab{.smaller}\n\n\n::::: panel-tabset\n\n## Task\n\n::::{.nonincremental}\n\nCreate [standardized versions]{.blue} of\n\n- `rep_voteshare`\n- `med_age`\n- `med_income`\n- `percent_vaccinated`\n\n::: {.callout-note}\n- We'll use the suffix `_std` to distinguish the [standardized]{.blue} variables from the [original]{.blue} variables\n:::\n\n::::\n## {{< fa code >}}-Standardize\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_lab %>%\n  mutate(\n    rep_voteshare_std = (rep_voteshare - mean(rep_voteshare)) / sd(rep_voteshare),\n    med_age_std = ( med_age - mean( med_age)) / sd( med_age),\n    med_income_std = (med_income - mean(med_income)) / sd(med_income),\n    percent_vaccinated_std = (percent_vaccinated - mean(percent_vaccinated)) / sd(percent_vaccinated)\n  ) -> covid_lab\n```\n:::\n\n\n\n## {{< fa table >}}-Compare\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_lab %>%\n  summarise(\n    mn_rep_vote = mean(rep_voteshare),\n    mn_rep_vote_std = round(mean(rep_voteshare_std),2),\n    sd_rep_vote = sd(rep_voteshare),\n    sd_rep_vote_std = sd(rep_voteshare_std)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  mn_rep_vote mn_rep_vote_std sd_rep_vote sd_rep_vote_std\n        <dbl>           <dbl>       <dbl>           <dbl>\n1        49.2               0        12.0               1\n```\n\n\n:::\n:::\n\n\n\n\n## {{< fa chart-line >}}-Compare\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_lab %>% \n  ggplot(aes(rep_voteshare_std,rep_voteshare))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-31-1.png){width=960}\n:::\n:::\n\n\n\n\n:::::\n\n## Save Data\n\nFinally, I'll save the data for Thursday's lab\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Don't run this code\nsave(covid_lab, file = \"../files/data/06_lab.rda\")\n```\n:::\n\n\n\nAnd on Thursday, we'll be able to load the `covid_lab` just by running:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(url(\"https://pols1600.paultesta.org/files/data/06_lab.rda\"))\n```\n:::\n\n\n\n# {{< fa lightbulb >}} Multiple Regression     {.inverse}\n\n## Conceptual: Multiple Regression\n\n:::{.nonincremental}\n\n- Multiple linear regression generalizes simple regression to models with multiple predictors\n\n$$y = \\beta_0 + \\beta_1x_{1} +\\beta_2x_{2} \\dots \\beta_kx_k + \\epsilon$$\nMore compactly written in matrix notation:\n\n$$y = X\\beta + \\epsilon$$\nWhere:\n\n$$\n\\overbrace{\\begin{bmatrix}\ny_1 \\\\\ny_2 \\\\\n\\vdots \\\\\ny_n\n\\end{bmatrix}}^{y}\n=\n\\overbrace{\n\\begin{bmatrix}\n\t 1  & x_{1,1}&\\dots & x_{1,k}\\\\\n 1  & x_{2,1}&\\dots & x_{2,k}\\\\\n \\vdots&\\vdots&  & \\vdots \\\\\n 1  & x_{n,1}&\\dots & x_{n,k}\\\\\n\\end{bmatrix}}^{X}\n\\overbrace{\\begin{bmatrix}\n\\beta_0\\\\\n\\beta_1\\\\\n\\vdots \\\\\n\\beta_k\\\\\n\\end{bmatrix}}^{\\beta}\n+\n\\overbrace{\\begin{bmatrix}\n\\epsilon_1 \\\\\n\\epsilon_2 \\\\\n\\vdots \\\\\n\\epsilon_n\n\\end{bmatrix}}^{\\epsilon}\n$$\n\n:::\n\n## Conceptual: Multiple Regression\n\n- Regression models [partition variance]{.blue}\n\n- Separate variation in the outcome ($y$) into variation [explained by the predictors]{.blue} in the model and the [residual]{.blue} variation [not explained]{.blue} by these predictors\n\n- [Regression coefficients]{.blue} tell us how the outcome \n$y$ is expected to change if $x$ changes by one unit, [holding constant]{.blue} or [controlling for]{.blue} other predictors in the model.\n\n\n\n## Practical: Multiple Regression\n\n:::{.nonincremental}\n\n- We estimate linear models in R using the `lm()` function using the `+` to [add predictors]{.blue}\n\n- We use the `*` to include the main effects $(\\beta_1 x, \\beta_2z)$ and [interactions]{.blue} $(\\beta_3 (x\\cdot z))$of two predictors\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm(y ~ x + z, data = df)\nlm(y ~ x*z, data = df) # Is a shortcut for:\nlm(y ~ x + z + x:z, data = df)\n```\n:::\n\n\n\n:::\n\n## Technical: Simple Linear Regression {.smaller}\n\n:::{.nonincremental}\n\n\n- Simple linear regression chooses a $\\hat{\\beta_0}$ and $\\hat{\\beta_1}$ to minimize the Sum of Squared Residuals (SSR):\n\n$$\n\\textrm{Find }\\hat{\\beta_0},\\,\\hat{\\beta_1} \\text{ arg min}_{\\beta_0, \\beta_1} \\sum (y_i-(\\hat{\\beta_0}+\\hat{\\beta_1}x_i))^2\n$$\nWhich yields:\n\n$$\\begin{aligned} \n\\beta_0 &= \\bar{y} - \\beta_1 \\bar{x}\\\\\n\\beta_1 &= \\frac{Cov(x,y)}{Var(x)}\n\\end{aligned}$$\n\n:::\n\n## Technical: Multiple Regression {.smaller}\n\n:::{.nonincremental}\n\n\n- Multiple linear regression chooses a vector of coefficients $\\hat{\\beta}$ to minimize the Sum of Squared Residuals (SSR):\n\n$$\n\\textrm{Find }\\widehat{\\beta} \\text{ argmin }_{\\widehat{\\beta}} \\sum \\epsilon^2=\\epsilon^\\prime\\epsilon=(y-X\\widehat{\\beta})^\\prime(y-X\\widehat{\\beta})\n$$\nWhich yields\n\n$$\n\\hat{\\beta} = (X'X)^{-1}X'y\n$$\n\n:::\n\n## Theoretical: Multiple Regression {.smaller}\n\n:::{.nonincremental}\n\n\n- Multiple Linear regression [still]{.blue} provides a [linear estimate]{.blue} of the conditional expectation function (CEF): $E[Y|X]$ where $Y$ is now a function of [multiple predictors]{.blue}, $X$\n\n:::\n\n# {{< fa lightbulb >}} Estimating and Interpretting Multiple Regression{.inverse}\n\n\n## {.smaller}\n\n#### Estimating and Interpretting Multiple Regressions \n\n:::: panel-tabset\n\n\n## Task\n\n:::{.nonincremental}\n\nLet's [load, inspect, and recode]{.blue} some data from the [2016 NES](https://electionstudies.org/data-center/2016-time-series-study/) and explore the relationship between political interest and evaluations of presidential candidates:\n\n-   Political Interest: \"How interested are you in in politics?\n    -   Very Interested\n    -   Somewhat interested\n    -   Not very Interested\n    -   Not at all Interested\n-   Feeling Thermometer: \"... On the feeling thermometer scale of 0 to 100, how would you rate\"\n    -   Donald Trump\n    -   Hillary Clinton\n\n:::\n\n## {{< fa table >}} NES\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load data from 2016 NES\nload(url(\"https://pols1600.paultesta.org/files/data/nes.rda\"))\n```\n:::\n\n\n\n## {{< fa table >}} HLO\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Take a quick look at the data\ndim(nes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1200   14\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(nes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  caseid    state age gender educ faminc pid7 ideo5 pol_interest church_atd\n1    745  Alabama  19      2    3     97    5     3            1          2\n2   1115  Alabama  46      1    3      3    1     1            3          6\n3    258  Alabama  59      2    2      6    2     3            2          1\n4    126  Alabama  55      2    4      6    1     2            3          5\n5    414  Alabama  66      1    3      8    7     4            3          3\n6    523  Alabama  61      1    2     97    1     2            3          6\n  bornagain01 ft_trump ft_hrc vote_choice\n1           0        3     19       Other\n2           0        0     36         HRC\n3           1       22      2        <NA>\n4           0        1     80         HRC\n5           1      100      3        <NA>\n6           1        0    100        <NA>\n```\n\n\n:::\n\n```{.r .cell-code}\ntable(nes$pol_interest)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  0   1   2   3 \n 78 178 348 568 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(nes$ft_trump)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n   0.00    2.00   30.00   38.38   72.00  100.00       3 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(nes$ft_hrc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n   0.00    3.00   44.00   42.99   76.00  100.00       1 \n```\n\n\n:::\n:::\n\n\n\n## {{< fa code >}} Wrangle\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnes %>%\n  mutate(\n    income = ifelse(faminc > 16, NA, faminc),\n    interested = ifelse(pol_interest==3,T,F),\n    pol_interest_f = factor(case_when(\n      pol_interest == 0 ~ \"Not at all Interested\",\n      pol_interest == 1 ~ \"Not very Interested\",\n      pol_interest == 2 ~ \"Somewhat Interested\",\n      pol_interest == 3 ~ \"Very Interested\"\n    )),\n    tc_diff = abs(ft_trump - ft_hrc)\n  ) -> nes\n```\n:::\n\n\n\n::::\n\n## {.smaller}  \n\n#### Estimating and Interpreting Models\n\n:::: panel-tabset\n\n\n## Models\n\nLet's estimate the following models:\n\n\n\n$$\\text{m1: tc_diff} = \\beta_0 + \\beta_1\\text{interested}+\\epsilon $$ \n\n$$\\text{m2: tc_diff} = \\beta_0 + \\beta_1\\text{pol_interest}+\\epsilon$$ \n\n$$\\text{m3: tc_diff} = \\beta_0 + \\beta_1\\text{pol_interest_f} +\\epsilon$$ \n\n$$\\text{m4: tc_diff} = \\beta_0 + \\beta_1\\text{interested} + \\beta_2\\text{age} +\\epsilon$$ \n\n$$\\text{m5: tc_diff} = \\beta_0 + \\beta_1\\text{interested} + \\beta_2\\text{age} + \\beta_3\\text{interested} \\times \\text{age}+\\epsilon$$ \n\n$$\\text{m6: tc_diff} = \\beta_0 + \\beta_1\\text{age} + \\beta_2\\text{income} +\\epsilon$$\n\n$$\\text{m7: tc_diff} = \\beta_0 + \\beta_1\\text{age} + \\beta_2\\text{income} + \\beta_4\\text{age}\\times \\text{income}+\\epsilon $$\n\n## Skills\n\n:::{.nonincremental}\n\nWe'll use:\n\n- `lm()` to [estimate models]{.blue}\n- `coef()` and `summary()` to [examine]{.blue} our results\n- `htmlreg()`to [format]{.blue} our results\n- `data.frame()` to create [prediction dataframes]{.blue}\n- `predict()` to produce [predicted values]{.blue} and `cbind()` to combine these predicted back into the [prediction dataframes]{.blue} for plotting\n- `ggplot()` to display and interpret our models' [predictions]{.blue}\n\n:::\n\n::::\n\n## Regression Tables\n\n- Academic articles are littered with regression tables.\n\n- Below we'll see how to:\n\n  - produce regression tables in R\n  - use some heuristics to interpret regression tables\n\n- We'll cover the [why]{.blue} with greater depth and care later in the course, for now, let's focus on the [what and how]{.blue}\n\n## Making Regression Tables in R\n\n:::: panel-tabset\n\n## Task\nWe can make a very simple regression table using the `htmlreg` function from the `texreg` package\n\n:::{.callout-note}\nTo properly display your results you need to add `#| results: asis` the following to the code chunk header\n\n:::\n\n## {{< fa code >}}\n```{{r}}\n#| echo: false\n#| results: asis\ntexreg::htmlreg(\n  list(m1_lab,m2_lab, m3_lab,m4_lab,m5_lab)\n)\n```\n\n## {{< fa table >}}\n\n\n\n<table class=\"texreg\" style=\"margin: 10px auto;border-collapse: collapse;border-spacing: 0px;caption-side: bottom;color: #000000;border-top: 2px solid #000000;\">\n<caption>Statistical models</caption>\n<thead>\n<tr>\n<th style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 1</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 2</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 3</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 4</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 5</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">(Intercept)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">19.35<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.34<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">2.42<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">84.33<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">-0.36</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.39)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.00)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.30)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(2.66)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.20)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">winnerBiden</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">2.70<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">-0.05<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.55)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.00)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">percent_vaccinated</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">-0.03<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.01)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">rep_voteshare</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">-0.57<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.02<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.05)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.00)</td>\n</tr>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.00</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.00</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.44</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.71</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.31</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">Adj. R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.00</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.00</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.43</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.70</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.29</td>\n</tr>\n<tr style=\"border-bottom: 2px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">Num. obs.</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">52755</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">52449</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">51</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">51</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">51</td>\n</tr>\n</tbody>\n<tfoot>\n<tr>\n<td style=\"font-size: 0.8em;\" colspan=\"6\"><sup>&#42;&#42;&#42;</sup>p &lt; 0.001; <sup>&#42;&#42;</sup>p &lt; 0.01; <sup>&#42;</sup>p &lt; 0.05</td>\n</tr>\n</tfoot>\n</table>\n\n\n\n::::\n\n## Interpreting Regression Tables (Stargazing){.smaller}\n\n:::{.nonincremental}\n- Each column is a model\n- Each row is a coefficient from that model with its [standard error]{.blue} (more to come) in parentheses below\n- We interpret coefficients by looking at their [sign, size, and significance]{.blue}\n  - Coefficients with asterisks `*` are [statistically significant]{.blue} (more to come)\n  - It is unlikely that we would see a coefficient this big or bigger if the true coefficient were 0\n- Rule of thumb:\n\n$$\\text{If }\\frac{\\beta}{se} > 2 \\to \\text{Statistically Significant}$$\n:::\n\n## `m1`: A binary indicator {.smaller}\n\n::: panel-tabset\n\n## m1\n\n$$\\text{m1: tc_diff} = \\beta_0 + \\beta_1\\text{interested}+\\epsilon $$ \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 <- lm(tc_diff ~ interested, nes)\ncoef(m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   (Intercept) interestedTRUE \n      47.84500       12.74655 \n```\n\n\n:::\n\n```{.r .cell-code}\nmean(nes$tc_diff[nes$interested == F], na.rm=T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 47.845\n```\n\n\n:::\n\n```{.r .cell-code}\nmean(nes$tc_diff[nes$interested == T], na.rm=T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 60.59155\n```\n\n\n:::\n\n```{.r .cell-code}\nmean(nes$tc_diff[nes$interested == T], na.rm=T) -\n  mean(nes$tc_diff[nes$interested == F], na.rm=T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 12.74655\n```\n\n\n:::\n:::\n\n\n\n## {{< fa table >}}-Table\n\n\n\n\n```{.r .cell-code}\nhtmlreg(m1)\n```\n\n<table class=\"texreg\" style=\"margin: 10px auto;border-collapse: collapse;border-spacing: 0px;caption-side: bottom;color: #000000;border-top: 2px solid #000000;\">\n<caption>Statistical models</caption>\n<thead>\n<tr>\n<th style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 1</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">(Intercept)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">47.84<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(1.26)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">interestedTRUE</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">12.75<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(1.81)</td>\n</tr>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">Adj. R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n</tr>\n<tr style=\"border-bottom: 2px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">Num. obs.</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1168</td>\n</tr>\n</tbody>\n<tfoot>\n<tr>\n<td style=\"font-size: 0.8em;\" colspan=\"2\"><sup>&#42;&#42;&#42;</sup>p &lt; 0.001; <sup>&#42;&#42;</sup>p &lt; 0.01; <sup>&#42;</sup>p &lt; 0.05</td>\n</tr>\n</tfoot>\n</table>\n\n\n\n\n## {{< fa code >}}-Figure\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create Prediction Data Frame\n\npred_df1 <- expand_grid(\n  interested = c(F,T)\n)\n\npred_df1  <- cbind(\n  pred_df1 ,\n  fit = predict(m1, pred_df1 )\n)\n\n# Produce figure\n\npred_df1 %>% \n  ggplot(aes(interested, fit))+\n  # Add raw data\n  geom_point(\n    data = nes %>% \n      filter(!is.na(interested)),\n    aes(x= interested,\n        y= tc_diff),\n    alpha = .1,\n    size = .2\n  ) +\n  geom_point(col=\"red\") -> fig_tc_m1\n```\n:::\n\n\n\n## {{< fa chart-line >}}-m1\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/m1fig-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n## `m2`: A numerical predictor {.smaller}\n\n::: panel-tabset\n\n## m2\n\n$$\\text{m2: tc_diff} = \\beta_0 + \\beta_1\\text{pol_interest}+\\epsilon$$ \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm2 <- lm(tc_diff ~ pol_interest, nes)\nround(coef(m2),2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n (Intercept) pol_interest \n       40.80         6.01 \n```\n\n\n:::\n:::\n\n\n\n## {{< fa table >}}-Table\n\n\n\n\n```{.r .cell-code}\nhtmlreg(list(m1,m2))\n```\n\n<table class=\"texreg\" style=\"margin: 10px auto;border-collapse: collapse;border-spacing: 0px;caption-side: bottom;color: #000000;border-top: 2px solid #000000;\">\n<caption>Statistical models</caption>\n<thead>\n<tr>\n<th style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 1</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 2</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">(Intercept)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">47.84<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">40.80<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(1.26)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(2.35)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">interestedTRUE</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">12.75<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(1.81)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">pol_interest</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">6.01<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.98)</td>\n</tr>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.03</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">Adj. R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.03</td>\n</tr>\n<tr style=\"border-bottom: 2px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">Num. obs.</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1168</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1168</td>\n</tr>\n</tbody>\n<tfoot>\n<tr>\n<td style=\"font-size: 0.8em;\" colspan=\"3\"><sup>&#42;&#42;&#42;</sup>p &lt; 0.001; <sup>&#42;&#42;</sup>p &lt; 0.01; <sup>&#42;</sup>p &lt; 0.05</td>\n</tr>\n</tfoot>\n</table>\n\n\n\n\n## {{< fa code >}}-Figure\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create Prediction Data Frame\n\npred_df2 <- expand_grid(\n  pol_interest = na.omit(sort(unique(nes$pol_interest)))\n)\n\npred_df2  <- cbind(\n  pred_df2 ,\n  fit = predict(m2, pred_df2 )\n)\n\n# Produce figure\n\npred_df2 %>% \n  ggplot(aes(pol_interest, fit,\n             ))+\n  # Add raw data\n  geom_point(\n    data = nes %>% \n      filter(!is.na(pol_interest)),\n    aes(x= pol_interest,\n        y= tc_diff),\n    alpha = .1,\n    size = .2\n  ) +\n  geom_line(col=\"red\") +\n  geom_point(col=\"red\") -> fig_tc_m2\n```\n:::\n\n\n\n## {{< fa chart-line >}}-m2\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/m2fig-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n\n## `m3`: A categorical indicator {.smaller}\n\n::: panel-tabset\n\n## m3\n\n$$\\text{m3: tc_diff} = \\beta_0 + \\beta_1\\text{pol_interest_f} +\\epsilon$$ \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm3 <- lm(tc_diff ~ pol_interest_f, nes)\nround(coef(m3),2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                      (Intercept) pol_interest_fNot very Interested \n                            46.10                              1.73 \npol_interest_fSomewhat Interested     pol_interest_fVery Interested \n                             2.14                             14.49 \n```\n\n\n:::\n\n```{.r .cell-code}\nnes %>% \n  group_by(pol_interest_f) %>%\n  filter(!is.na(pol_interest_f)) %>% \n  summarise(\n    mean = mean(tc_diff,na.rm = T),\n    beta = round(mean - coef(m3)[1],3)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n  pol_interest_f         mean  beta\n  <fct>                 <dbl> <dbl>\n1 Not at all Interested  46.1  0   \n2 Not very Interested    47.8  1.73\n3 Somewhat Interested    48.2  2.14\n4 Very Interested        60.6 14.5 \n```\n\n\n:::\n:::\n\n\n\n\n## {{<fa eye >}} lm()\n\n`lm()` converts the factor `pol_interest_f` into binary indicators for every value of `pol_interest_f` excluding \"Not at all Interested\", the first level of the factor. \n\n\"Not at all Interested\" is the [reference category]{.blue} because all the other coefficients describe how the means for other levels of `pol_interest_f` differ from \"Not at all Interested\"\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbind(\nm3$model[26:30,],\nmodel.matrix(m3)[26:30,]\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   tc_diff        pol_interest_f (Intercept) pol_interest_fNot very Interested\n26      96 Not at all Interested           1                                 0\n27      93   Somewhat Interested           1                                 0\n28      95       Very Interested           1                                 0\n29      75   Somewhat Interested           1                                 0\n30       1   Not very Interested           1                                 1\n   pol_interest_fSomewhat Interested pol_interest_fVery Interested\n26                                 0                             0\n27                                 1                             0\n28                                 0                             1\n29                                 1                             0\n30                                 0                             0\n```\n\n\n:::\n:::\n\n\n\n## {{< fa table >}}-Table\n\n\n\n\n```{.r .cell-code}\nhtmlreg(list(m1,m2,m3))\n```\n\n<table class=\"texreg\" style=\"margin: 10px auto;border-collapse: collapse;border-spacing: 0px;caption-side: bottom;color: #000000;border-top: 2px solid #000000;\">\n<caption>Statistical models</caption>\n<thead>\n<tr>\n<th style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 1</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 2</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 3</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">(Intercept)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">47.84<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">40.80<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">46.10<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(1.26)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(2.35)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(3.53)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">interestedTRUE</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">12.75<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(1.81)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">pol_interest</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">6.01<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.98)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">pol_interest_fNot very Interested</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1.73</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(4.23)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">pol_interest_fSomewhat Interested</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">2.14</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(3.90)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">pol_interest_fVery Interested</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">14.49<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(3.76)</td>\n</tr>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.03</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">Adj. R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.03</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n</tr>\n<tr style=\"border-bottom: 2px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">Num. obs.</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1168</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1168</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1168</td>\n</tr>\n</tbody>\n<tfoot>\n<tr>\n<td style=\"font-size: 0.8em;\" colspan=\"4\"><sup>&#42;&#42;&#42;</sup>p &lt; 0.001; <sup>&#42;&#42;</sup>p &lt; 0.01; <sup>&#42;</sup>p &lt; 0.05</td>\n</tr>\n</tfoot>\n</table>\n\n\n\n\n## {{< fa code >}}-Figure\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create Prediction Data Frame\n\npred_df3 <- expand_grid(\n  pol_interest_f = na.omit(sort(unique(nes$pol_interest_f)))\n)\n\npred_df3  <- cbind(\n  pred_df3 ,\n  fit = predict(m3, pred_df3 )\n)\n\n# Produce figure\n\npred_df3 %>% \n  ggplot(aes(pol_interest_f, fit,\n             col = pol_interest_f))+\n  # Add raw data\n  geom_point(\n    data = nes %>% \n      filter(!is.na(pol_interest_f)),\n    aes(x= pol_interest_f,\n        y= tc_diff),\n    alpha = .1,\n    size = .2\n  ) +\n  geom_point() -> fig_tc_m3\n```\n:::\n\n\n\n## {{< fa chart-line >}}-m3\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/m3fig-1.png){width=960}\n:::\n:::\n\n\n\n## {{< fa chart-line >}}-m2 vs m3\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/m3figm2-1.png){width=960}\n:::\n:::\n\n\n\n\n:::\n\n## `m4`: A binary and numerical predictor {.smaller}\n\n::: panel-tabset\n\n## m4\n\n$$\\text{m4: tc_diff} = \\beta_0 + \\beta_1\\text{interested} + \\beta_2\\text{age} +\\epsilon$$ \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm4 <- lm(tc_diff ~ interested + age, nes)\ncoef(m4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   (Intercept) interestedTRUE            age \n    32.1757944      9.7739375      0.3533876 \n```\n\n\n:::\n:::\n\n\n\n## {{< fa table >}}-Table\n\n\n\n\n```{.r .cell-code}\nhtmlreg(list(m1, m4))\n```\n\n<table class=\"texreg\" style=\"margin: 10px auto;border-collapse: collapse;border-spacing: 0px;caption-side: bottom;color: #000000;border-top: 2px solid #000000;\">\n<caption>Statistical models</caption>\n<thead>\n<tr>\n<th style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 1</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 2</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">(Intercept)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">47.84<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">32.18<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(1.26)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(2.71)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">interestedTRUE</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">12.75<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">9.77<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(1.81)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(1.84)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">age</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.35<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.05)</td>\n</tr>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.07</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">Adj. R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.07</td>\n</tr>\n<tr style=\"border-bottom: 2px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">Num. obs.</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1168</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1168</td>\n</tr>\n</tbody>\n<tfoot>\n<tr>\n<td style=\"font-size: 0.8em;\" colspan=\"3\"><sup>&#42;&#42;&#42;</sup>p &lt; 0.001; <sup>&#42;&#42;</sup>p &lt; 0.01; <sup>&#42;</sup>p &lt; 0.05</td>\n</tr>\n</tfoot>\n</table>\n\n\n\n\n## {{< fa code >}}-Figure\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create Prediction Data Frame\n\npred_df4 <- expand_grid(\n  interested = c(F,T),\n  age = seq(min(nes$age, na.rm = T),\n            max(nes$age, na.rm=T),\n            length.out = 10)\n)\n\npred_df4  <- cbind(\n  pred_df4 ,\n  fit = predict(m4, pred_df4 )\n)\n\n# Produce figure\n\npred_df4 %>% \n  ggplot(aes(age, fit,\n             col = interested,\n             group = interested))+\n  # Add raw data\n  geom_point(\n    data = nes %>% \n      filter(!is.na(interested)) %>%\n      filter(!is.na(age))\n      ,\n    aes(x= age,\n        y= tc_diff),\n    alpha = .1,\n    size = .2\n  ) +\n  geom_point()+\n  geom_line() -> fig_tc_m4\n```\n:::\n\n\n\n## {{< fa chart-line >}}-m4\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/m4fig-1.png){width=960}\n:::\n:::\n\n\n\n## {{< fa chart-line >}}-m4 in 3d\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-cae0b3f7b23eac7b6ba9\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-cae0b3f7b23eac7b6ba9\">{\"x\":{\"visdat\":{\"54293a801d9f\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"54293a801d9f\",\"attrs\":{\"54293a801d9f\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"markers\",\"showscale\":false,\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"},\"54293a801d9f.1\":{\"x\":[0,1],\"y\":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],\"z\":[[38.890158522637201,48.664096042934247],[39.243546110536286,49.017483630833333],[39.596933698435365,49.370871218732411],[39.950321286334443,49.724258806631489],[40.303708874233529,50.077646394530575],[40.657096462132607,50.431033982429653],[41.010484050031693,50.784421570328739],[41.363871637930771,51.137809158227817],[41.717259225829849,51.491196746126896],[42.070646813728935,51.844584334025981],[42.424034401628013,52.19797192192506],[42.777421989527092,52.551359509824138],[43.130809577426177,52.904747097723224],[43.484197165325256,53.258134685622302],[43.837584753224341,53.611522273521388],[44.19097234112342,53.964909861420466],[44.544359929022498,54.318297449319545],[44.897747516921584,54.67168503721863],[45.251135104820662,55.025072625117708],[45.604522692719748,55.378460213016794],[45.957910280618826,55.731847800915872],[46.311297868517904,56.085235388814951],[46.66468545641699,56.438622976714036],[47.018073044316068,56.792010564613115],[47.371460632215147,57.145398152512193],[47.724848220114232,57.498785740411279],[48.078235808013311,57.852173328310357],[48.431623395912396,58.205560916209443],[48.785010983811475,58.558948504108521],[49.138398571710553,58.9123360920076],[49.491786159609639,59.265723679906685],[49.845173747508717,59.619111267805764],[50.198561335407803,59.972498855704849],[50.551948923306881,60.325886443603927],[50.905336511205959,60.679274031503006],[51.258724099105045,61.032661619402091],[51.612111687004123,61.38604920730117],[51.965499274903202,61.739436795200248],[52.318886862802287,62.092824383099334],[52.672274450701366,62.446211970998412],[53.025662038600451,62.799599558897498],[53.37904962649953,63.152987146796576],[53.732437214398608,63.506374734695655],[54.085824802297694,63.85976232259474],[54.439212390196772,64.213149910493826],[54.792599978095851,64.566537498392904],[55.145987565994936,64.919925086291983],[55.499375153894015,65.273312674191061],[55.8527627417931,65.626700262090139],[56.206150329692179,65.980087849989232],[56.559537917591257,66.33347543788831],[56.912925505490342,66.686863025787389],[57.266313093389421,67.040250613686467],[57.619700681288506,67.393638201585546],[57.973088269187585,67.747025789484624],[58.326475857086663,68.100413377383717],[58.679863444985749,68.453800965282795],[59.033251032884827,68.807188553181874],[59.386638620783906,69.160576141080952],[59.740026208682991,69.513963728980031],[60.09341379658207,69.867351316879123],[60.446801384481155,70.220738904778202],[60.800188972380234,70.57412649267728],[61.153576560279312,70.927514080576358],[61.506964148178398,71.280901668475437],[61.860351736077476,71.634289256374529],[62.213739323976561,71.987676844273608],[62.56712691187564,72.341064432172686],[62.920514499774718,72.694452020071765],[63.273902087673804,73.047839607970843],[63.627289675572882,73.401227195869936],[63.980677263471961,73.754614783769014],[64.334064851371039,74.108002371668093],[64.687452439270132,74.461389959567171],[65.04084002716921,74.81477754746625],[65.394227615068289,75.168165135365328],[65.747615202967367,75.521552723264421]],\"mode\":\"markers\",\"showscale\":false,\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"surface\",\"alpha\":0.65000000000000002,\"name\":\"pred_surface\",\"surfacecolor\":[[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1]],\"cauto\":false,\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"interest01\"},\"yaxis\":{\"title\":\"age\"},\"zaxis\":{\"title\":\"tc_diff\"}},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"y\":[46,55,66,61,42,65,45,57,48,61,63,43,60,80,40,52,65,44,48,52,67,60,32,89,32,40,33,22,56,71,34,28,44,63,63,39,60,76,60,41,55,57,60,72,21,64,63,49,56,80,61,62,69,52,67,33,47,59,44,60,60,76,43,81,80,41,50,65,48,62,61,65,32,60,71,82,33,59,35,22,61,69,43,64,78,71,21,43,70,56,57,66,74,57,41,61,28,56,62,66,58,76,28,37,71,39,27,20,64,73,50,55,90,68,80,65,27,64,73,68,76,23,74,43,77,62,29,67,72,70,28,57,52,71,44,39,85,62,62,35,74,28,74,56,42,56,80,36,52,44,45,66,73,29,55,51,29,76,58,73,57,60,49,41,70,53,58,32,78,56,95,56,33,28,55,36,69,34,73,51,72,34,42,60,43,43,63,58,63,38,34,44,63,78,60,53,29,33,45,53,62,47,74,56,35,70,21,31,40,56,46,56,78,46,22,58,65,36,27,55,52,59,62,79,33,43,38,62,80,42,42,72,34,46,43,53,77,67,55,42,25,57,38,38,32,36,24,66,51,71,60,29,27,36,66,63,69,58,35,43,35,39,78,60,79,44,61,48,64,69,42,51,45,67,61,54,20,76,78,44,72,60,51,54,23,65,24,67,32,27,62,79,36,26,40,59,69,77,40,24,68,70,37,63,48,29,58,65,36,70,67,38,59,44,68,79,46,36,33,64,22,63,54,26,55,32,53,37,31,66,73,44,36,69,58,30,80,27,58,24,50,42,73,26,59,62,73,70,23,22,71,61,65,60,57,68,73,21,25,63,66,63,60,39,37,45,50,59,38,67,41,73,52,56,26,65,38,62,42,53,71,26,70,31,54,60,60,59,22,52,65,72,36,61,26,58,29,61,37,52,23,62,67,22,45,59,51,29,36,23,20,55,52,71,64,40,27,71,23,71,58,76,27,52,62,70,62,63,62,62,25,34,58,75,48,55,28,61,41,55,62,67,34,49,79,83,55,56,32,69,35,59,38,61,78,31,30,57,48,83,84,79,57,33,61,62,50,75,69,58,74,47,44,80,56,56,74,41,55,69,58,60,30,62,33,62,83,29,62,24,48,56,42,40,84,64,55,91,71,52,28,58,66,73,58,55,24,61,42,66,64,54,43,38,41,34,60,34,23,24,23,63,63,56,39,54,31,44,53,28,63,34,44,26,21,62,20,56,23,41,66,65,46,76,30,47,27,49,60,62,63,80,63,57,70,70,70,56,52,66,23,64,75,68,33,68,49,41],\"z\":[36,79,97,100,85,14,0,86,81,89,97,85,79,95,89,100,58,99,51,6,94,65,7,92,61,90,64,92,75,88,13,60,3,27,90,81,90,50,90,40,86,100,40,40,92,47,86,75,90,94,81,80,99,11,95,0,17,63,97,39,41,75,30,85,20,19,56,58,34,79,20,100,63,81,100,90,99,98,87,37,44,25,69,88,40,92,81,46,30,29,0,44,96,97,60,100,100,89,5,92,75,75,68,2,92,71,75,39,78,1,84,89,91,63,31,46,92,91,99,64,92,72,99,35,91,66,97,40,80,24,30,83,71,80,40,51,95,89,10,80,86,18,61,71,79,79,82,46,60,36,90,40,95,66,89,36,85,1,50,89,44,74,53,7,94,40,0,33,81,88,78,16,81,31,80,35,99,71,72,24,73,13,99,78,67,87,61,60,94,84,19,33,89,86,68,29,6,0,100,67,11,91,91,80,78,65,83,67,41,44,68,62,79,59,2,20,93,84,13,100,100,84,59,85,81,89,55,60,46,95,73,38,45,66,20,99,75,40,85,65,6,88,45,66,35,60,98,85,93,89,98,65,6,27,28,95,93,48,17,95,0,27,60,18,91,70,50,100,85,100,12,1,31,87,41,99,16,69,100,44,100,87,68,88,0,94,12,99,54,1,72,97,8,70,69,90,77,11,70,52,29,81,12,99,52,44,100,74,76,88,72,17,44,5,2,93,88,44,99,23,56,83,13,2,80,68,70,64,59,92,70,60,69,87,31,44,77,43,48,39,91,95,53,30,96,28,93,84,55,9,85,37,69,66,15,98,85,65,35,16,87,76,89,60,1,50,78,55,63,75,80,20,32,45,0,51,51,87,49,4,100,1,71,54,45,50,0,56,100,96,94,42,49,96,31,25,38,96,41,92,94,35,93,74,0,52,36,31,39,59,56,61,100,69,87,40,40,20,67,60,86,98,20,89,73,16,81,95,74,32,100,63,98,80,63,85,32,99,0,39,70,4,38,94,80,89,31,16,9,55,1,99,51,90,48,70,44,87,92,15,93,92,85,28,11,88,94,97,98,10,90,100,45,100,1,78,60,75,95,93,64,1,1,72,70,94,74,82,64,54,90,60,78,96,30,75,2,71,19,100,27,69,20,78,71,53,50,81,60,20,66,0,96,68,68,10,94,14,72,3,48,98,52,23,70,29,28,70,15,0,31,28,54,34,5,60,66,78,86,46,52,85,71,88,54,89,7,48,72,89,25,10,65,11,99,93,97,82,10,27,23,75,91,70,94,97,5,64],\"mode\":\"markers\",\"showscale\":false,\"type\":\"scatter3d\",\"name\":\"Interested\",\"marker\":{\"color\":\"rgba(102,194,165,1)\",\"line\":{\"color\":\"rgba(102,194,165,1)\"}},\"textfont\":{\"color\":\"rgba(102,194,165,1)\"},\"error_y\":{\"color\":\"rgba(102,194,165,1)\"},\"error_x\":{\"color\":\"rgba(102,194,165,1)\"},\"line\":{\"color\":\"rgba(102,194,165,1)\"},\"frame\":null},{\"x\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"y\":[19,59,39,43,36,38,55,38,71,38,41,40,61,21,34,53,59,47,46,62,26,24,42,46,56,56,60,64,54,57,20,62,19,39,38,59,61,28,39,39,49,26,79,33,56,43,24,21,48,83,29,25,61,91,40,38,75,27,26,30,26,36,47,37,27,40,59,19,58,49,36,35,26,26,19,37,43,85,31,30,25,26,53,67,22,27,62,37,48,23,23,25,48,37,77,40,20,32,43,19,21,60,34,51,54,38,29,20,28,41,76,54,19,78,28,31,57,53,24,25,65,43,60,57,35,41,59,45,37,65,67,65,75,27,51,38,59,44,43,41,20,59,27,29,35,36,61,41,57,68,61,36,26,28,35,43,57,59,67,29,39,57,59,30,24,20,53,37,29,48,19,21,42,71,66,39,75,26,36,24,35,59,63,57,31,46,54,49,45,64,43,46,58,25,26,42,61,62,55,31,73,26,21,40,74,44,27,39,66,19,39,48,19,75,52,54,42,34,52,31,59,58,28,29,25,40,40,30,31,60,55,44,63,29,82,34,55,61,38,27,50,84,19,77,56,27,33,35,51,43,43,38,33,20,30,38,25,40,24,60,52,23,42,34,59,76,30,44,64,66,44,22,63,60,36,27,43,31,57,43,44,49,23,49,45,37,42,40,62,23,41,55,69,55,61,56,62,55,51,59,61,50,32,31,34,31,63,44,38,54,40,60,26,29,62,20,30,62,41,30,57,32,67,22,33,28,54,63,55,29,31,25,51,64,52,71,31,78,22,26,19,37,23,20,43,23,30,59,39,69,52,46,41,33,61,64,73,52,39,43,42,26,65,28,23,68,36,52,25,22,24,55,51,30,25,36,33,19,64,27,28,62,64,60,28,92,29,40,39,60,61,33,30,50,20,64,28,35,62,63,39,19,59,53,52,51,53,69,33,35,76,24,69,62,20,32,38,69,62,35,49,35,55,39,26,48,47,35,24,34,30,43,43,57,33,48,55,30,54,63,64,42,67,41,74,21,30,27,29,25,52,48,20,65,41,54,28,37,39,51,27,76,57,34,71,86,61,60,25,38,55,40,27,63,62,51,37,53,57,27,22,43,24,64,64,75,64,54,45,35,27,46,69,53,41,56,25,44,24,60,61,28,38,64,44,49,46,57,29,26,27,48,59,53,34,38,22,54,54,30,22,34,78,28,65,43,67,36,44,22,61,72,32,55,61,36,21,44,43,60,53,41,26,39,39,54,26,41,20,25,26,39,25,24,43,43,32,48,27,74,47,58,24,58,40,40,43,32,49,57,61,38,30,54,35,72,49,21,41,65,66,24,64,77,60,43,63,73,59,66,65,57,37,54,66,58,23,55,36,50],\"z\":[16,20,86,95,91,50,49,0,0,8,15,9,96,93,75,1,12,20,59,33,33,6,49,59,54,0,9,100,0,1,66,42,36,19,74,93,73,76,75,71,82,66,70,84,53,1,15,40,35,47,68,72,53,59,32,30,5,85,73,68,2,27,2,50,16,91,84,53,91,29,91,8,31,60,1,35,71,71,1,12,76,60,61,54,38,34,88,2,30,32,56,60,19,39,25,38,42,51,49,80,42,19,9,17,19,7,4,54,70,52,78,18,11,94,3,10,61,5,94,9,49,34,66,57,30,83,31,78,70,79,30,40,97,73,53,52,21,2,45,2,16,24,70,30,84,43,67,99,84,72,79,11,50,40,34,99,99,10,0,49,67,25,5,63,11,50,73,49,62,1,58,16,79,97,9,1,1,4,2,48,56,75,80,23,31,60,15,69,81,86,9,47,95,71,100,60,44,5,46,81,98,39,81,1,69,5,89,25,8,58,50,21,0,93,0,83,98,22,95,4,78,1,97,68,8,100,9,85,98,39,96,66,89,52,52,90,0,1,64,83,10,80,62,80,70,6,87,21,90,15,100,5,50,18,5,89,37,17,53,84,65,30,23,0,99,5,84,92,98,6,52,13,31,80,47,0,50,28,33,89,20,32,75,58,88,1,88,100,94,50,81,97,70,14,92,100,90,83,76,15,18,29,56,91,100,84,98,78,18,80,61,77,55,17,45,76,38,1,82,46,7,35,58,0,51,76,49,50,96,14,26,86,64,69,36,42,34,1,47,11,85,14,36,50,14,5,3,94,93,69,69,84,61,96,58,55,36,42,9,2,60,5,94,4,65,58,49,5,64,44,55,37,15,57,61,21,0,70,28,41,43,28,21,37,20,88,86,95,64,88,69,65,30,63,83,40,58,29,18,92,1,12,29,38,54,8,81,100,9,63,80,68,94,17,3,92,1,61,99,28,24,15,76,51,32,8,60,99,63,86,58,46,40,69,1,1,85,91,73,55,54,55,89,37,34,23,45,6,22,41,40,18,72,71,29,100,52,48,0,85,57,45,46,35,9,34,5,10,70,58,45,86,100,44,9,26,31,12,11,65,79,94,53,98,72,84,53,30,2,75,15,50,70,40,78,52,63,47,3,16,43,48,69,50,1,1,1,31,19,84,30,95,88,78,3,76,9,2,98,61,74,49,100,60,50,34,38,82,45,44,80,87,22,32,42,94,34,33,23,92,10,96,3,94,65,23,52,97,26,47,57,19,47,5,3,80,50,84,4,1,77,39,91,12,72,2,35,75,19,84,90,3,4,55,19,55,69,94,60,0,100,0,9,97,51,9,20,7,61,0,11,69,68,28,49,30,15,0,28,56],\"mode\":\"markers\",\"showscale\":false,\"type\":\"scatter3d\",\"name\":\"Not Interested\",\"marker\":{\"color\":\"rgba(141,160,203,1)\",\"line\":{\"color\":\"rgba(141,160,203,1)\"}},\"textfont\":{\"color\":\"rgba(141,160,203,1)\"},\"error_y\":{\"color\":\"rgba(141,160,203,1)\"},\"error_x\":{\"color\":\"rgba(141,160,203,1)\"},\"line\":{\"color\":\"rgba(141,160,203,1)\"},\"frame\":null},{\"x\":[0,1],\"y\":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],\"z\":[[38.890158522637201,48.664096042934247],[39.243546110536286,49.017483630833333],[39.596933698435365,49.370871218732411],[39.950321286334443,49.724258806631489],[40.303708874233529,50.077646394530575],[40.657096462132607,50.431033982429653],[41.010484050031693,50.784421570328739],[41.363871637930771,51.137809158227817],[41.717259225829849,51.491196746126896],[42.070646813728935,51.844584334025981],[42.424034401628013,52.19797192192506],[42.777421989527092,52.551359509824138],[43.130809577426177,52.904747097723224],[43.484197165325256,53.258134685622302],[43.837584753224341,53.611522273521388],[44.19097234112342,53.964909861420466],[44.544359929022498,54.318297449319545],[44.897747516921584,54.67168503721863],[45.251135104820662,55.025072625117708],[45.604522692719748,55.378460213016794],[45.957910280618826,55.731847800915872],[46.311297868517904,56.085235388814951],[46.66468545641699,56.438622976714036],[47.018073044316068,56.792010564613115],[47.371460632215147,57.145398152512193],[47.724848220114232,57.498785740411279],[48.078235808013311,57.852173328310357],[48.431623395912396,58.205560916209443],[48.785010983811475,58.558948504108521],[49.138398571710553,58.9123360920076],[49.491786159609639,59.265723679906685],[49.845173747508717,59.619111267805764],[50.198561335407803,59.972498855704849],[50.551948923306881,60.325886443603927],[50.905336511205959,60.679274031503006],[51.258724099105045,61.032661619402091],[51.612111687004123,61.38604920730117],[51.965499274903202,61.739436795200248],[52.318886862802287,62.092824383099334],[52.672274450701366,62.446211970998412],[53.025662038600451,62.799599558897498],[53.37904962649953,63.152987146796576],[53.732437214398608,63.506374734695655],[54.085824802297694,63.85976232259474],[54.439212390196772,64.213149910493826],[54.792599978095851,64.566537498392904],[55.145987565994936,64.919925086291983],[55.499375153894015,65.273312674191061],[55.8527627417931,65.626700262090139],[56.206150329692179,65.980087849989232],[56.559537917591257,66.33347543788831],[56.912925505490342,66.686863025787389],[57.266313093389421,67.040250613686467],[57.619700681288506,67.393638201585546],[57.973088269187585,67.747025789484624],[58.326475857086663,68.100413377383717],[58.679863444985749,68.453800965282795],[59.033251032884827,68.807188553181874],[59.386638620783906,69.160576141080952],[59.740026208682991,69.513963728980031],[60.09341379658207,69.867351316879123],[60.446801384481155,70.220738904778202],[60.800188972380234,70.57412649267728],[61.153576560279312,70.927514080576358],[61.506964148178398,71.280901668475437],[61.860351736077476,71.634289256374529],[62.213739323976561,71.987676844273608],[62.56712691187564,72.341064432172686],[62.920514499774718,72.694452020071765],[63.273902087673804,73.047839607970843],[63.627289675572882,73.401227195869936],[63.980677263471961,73.754614783769014],[64.334064851371039,74.108002371668093],[64.687452439270132,74.461389959567171],[65.04084002716921,74.81477754746625],[65.394227615068289,75.168165135365328],[65.747615202967367,75.521552723264421]],\"mode\":\"markers\",\"showscale\":false,\"type\":\"surface\",\"name\":\"pred_surface\",\"surfacecolor\":[[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1]],\"cauto\":false,\"frame\":null},{\"x\":[0,1],\"y\":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],\"z\":[[38.890158522637201,48.664096042934247],[39.243546110536286,49.017483630833333],[39.596933698435365,49.370871218732411],[39.950321286334443,49.724258806631489],[40.303708874233529,50.077646394530575],[40.657096462132607,50.431033982429653],[41.010484050031693,50.784421570328739],[41.363871637930771,51.137809158227817],[41.717259225829849,51.491196746126896],[42.070646813728935,51.844584334025981],[42.424034401628013,52.19797192192506],[42.777421989527092,52.551359509824138],[43.130809577426177,52.904747097723224],[43.484197165325256,53.258134685622302],[43.837584753224341,53.611522273521388],[44.19097234112342,53.964909861420466],[44.544359929022498,54.318297449319545],[44.897747516921584,54.67168503721863],[45.251135104820662,55.025072625117708],[45.604522692719748,55.378460213016794],[45.957910280618826,55.731847800915872],[46.311297868517904,56.085235388814951],[46.66468545641699,56.438622976714036],[47.018073044316068,56.792010564613115],[47.371460632215147,57.145398152512193],[47.724848220114232,57.498785740411279],[48.078235808013311,57.852173328310357],[48.431623395912396,58.205560916209443],[48.785010983811475,58.558948504108521],[49.138398571710553,58.9123360920076],[49.491786159609639,59.265723679906685],[49.845173747508717,59.619111267805764],[50.198561335407803,59.972498855704849],[50.551948923306881,60.325886443603927],[50.905336511205959,60.679274031503006],[51.258724099105045,61.032661619402091],[51.612111687004123,61.38604920730117],[51.965499274903202,61.739436795200248],[52.318886862802287,62.092824383099334],[52.672274450701366,62.446211970998412],[53.025662038600451,62.799599558897498],[53.37904962649953,63.152987146796576],[53.732437214398608,63.506374734695655],[54.085824802297694,63.85976232259474],[54.439212390196772,64.213149910493826],[54.792599978095851,64.566537498392904],[55.145987565994936,64.919925086291983],[55.499375153894015,65.273312674191061],[55.8527627417931,65.626700262090139],[56.206150329692179,65.980087849989232],[56.559537917591257,66.33347543788831],[56.912925505490342,66.686863025787389],[57.266313093389421,67.040250613686467],[57.619700681288506,67.393638201585546],[57.973088269187585,67.747025789484624],[58.326475857086663,68.100413377383717],[58.679863444985749,68.453800965282795],[59.033251032884827,68.807188553181874],[59.386638620783906,69.160576141080952],[59.740026208682991,69.513963728980031],[60.09341379658207,69.867351316879123],[60.446801384481155,70.220738904778202],[60.800188972380234,70.57412649267728],[61.153576560279312,70.927514080576358],[61.506964148178398,71.280901668475437],[61.860351736077476,71.634289256374529],[62.213739323976561,71.987676844273608],[62.56712691187564,72.341064432172686],[62.920514499774718,72.694452020071765],[63.273902087673804,73.047839607970843],[63.627289675572882,73.401227195869936],[63.980677263471961,73.754614783769014],[64.334064851371039,74.108002371668093],[64.687452439270132,74.461389959567171],[65.04084002716921,74.81477754746625],[65.394227615068289,75.168165135365328],[65.747615202967367,75.521552723264421]],\"mode\":\"markers\",\"showscale\":false,\"type\":\"surface\",\"name\":\"pred_surface\",\"surfacecolor\":[[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1]],\"cauto\":false,\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n:::\n\n## {.smaller}\n\n#### `m5`: An interaction between a binary and numerical predictor \n\n::: panel-tabset\n\n## m5\n\n$$\\text{m5: tc_diff} = \\beta_0 + \\beta_1\\text{interested} + \\beta_2\\text{age} + \\beta_3\\text{interested} \\times \\text{age}+\\epsilon$$ \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm5 <- lm(tc_diff ~ interested*age, nes)\ncoef(m5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       (Intercept)     interestedTRUE                age interestedTRUE:age \n        39.7626421         -6.7040163          0.1822814          0.3396523 \n```\n\n\n:::\n:::\n\n\n\n## {{< fa table >}}-Table\n\n\n\n\n```{.r .cell-code}\nhtmlreg(list(m1, m4, m5))\n```\n\n<table class=\"texreg\" style=\"margin: 10px auto;border-collapse: collapse;border-spacing: 0px;caption-side: bottom;color: #000000;border-top: 2px solid #000000;\">\n<caption>Statistical models</caption>\n<thead>\n<tr>\n<th style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 1</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 2</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 3</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">(Intercept)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">47.84<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">32.18<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">39.76<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(1.26)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(2.71)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(3.62)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">interestedTRUE</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">12.75<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">9.77<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">-6.70</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(1.81)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(1.84)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(5.55)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">age</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.35<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.18<sup>&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.05)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.08)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">interestedTRUE:age</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.34<sup>&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.11)</td>\n</tr>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.07</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.08</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">Adj. R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.07</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.08</td>\n</tr>\n<tr style=\"border-bottom: 2px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">Num. obs.</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1168</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1168</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1168</td>\n</tr>\n</tbody>\n<tfoot>\n<tr>\n<td style=\"font-size: 0.8em;\" colspan=\"4\"><sup>&#42;&#42;&#42;</sup>p &lt; 0.001; <sup>&#42;&#42;</sup>p &lt; 0.01; <sup>&#42;</sup>p &lt; 0.05</td>\n</tr>\n</tfoot>\n</table>\n\n\n\n\n## {{< fa code >}}-Figure\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create Prediction Data Frame\n\npred_df5 <- expand_grid(\n  interested = c(F,T),\n  age = seq(min(nes$age, na.rm = T),\n            max(nes$age, na.rm=T),\n            length.out = 10)\n)\n\npred_df5  <- cbind(\n  pred_df5 ,\n  fit = predict(m5, pred_df5 )\n)\n\n# Produce figure\n\npred_df5 %>% \n  ggplot(aes(age, fit,\n             col = interested,\n             group = interested))+\n  # Add raw data\n  geom_point(\n    data = nes %>% \n      filter(!is.na(interested)) %>%\n      filter(!is.na(age))\n      ,\n    aes(x= age,\n        y= tc_diff),\n    alpha = .1,\n    size = .2\n  ) +\n  geom_point()+\n  geom_line() -> fig_tc_m5\n```\n:::\n\n\n\n## {{< fa chart-line >}}-m5\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/m5fig-1.png){width=960}\n:::\n:::\n\n\n\n## {{< fa chart-line >}}-m5 in 3d\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-eb46f96039fb2cee651e\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-eb46f96039fb2cee651e\">{\"x\":{\"visdat\":{\"54296fd9b2b1\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"54296fd9b2b1\",\"attrs\":{\"54296fd9b2b1\":{\"x\":{},\"y\":{},\"z\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\",\"mode\":\"markers\",\"size\":5,\"inherit\":true},\"54296fd9b2b1.1\":{\"x\":[0,1],\"y\":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],\"z\":[[43.225988991872271,42.97536681930923],[43.408270404979135,43.497300554984591],[43.590551818085991,44.019234290659945],[43.772833231192855,44.541168026335313],[43.955114644299712,45.063101762010668],[44.137396057406576,45.585035497686029],[44.319677470513433,46.106969233361383],[44.50195888362029,46.628902969036737],[44.684240296727154,47.150836704712098],[44.866521709834011,47.672770440387453],[45.048803122940875,48.194704176062814],[45.231084536047732,48.716637911738168],[45.413365949154596,49.238571647413529],[45.595647362261452,49.760505383088883],[45.777928775368316,50.282439118764245],[45.960210188475173,50.804372854439599],[46.14249160158203,51.326306590114953],[46.324773014688894,51.848240325790314],[46.507054427795751,52.370174061465669],[46.689335840902615,52.89210779714103],[46.871617254009472,53.414041532816384],[47.053898667116336,53.935975268491745],[47.236180080223193,54.457909004167099],[47.418461493330057,54.979842739842461],[47.600742906436913,55.501776475517815],[47.78302431954377,56.023710211193169],[47.965305732650634,56.54564394686853],[48.147587145757491,57.067577682543885],[48.329868558864355,57.589511418219246],[48.512149971971212,58.1114451538946],[48.694431385078076,58.633378889569961],[48.876712798184933,59.155312625245315],[49.058994211291797,59.677246360920677],[49.241275624398654,60.199180096596031],[49.42355703750551,60.721113832271385],[49.605838450612374,61.243047567946746],[49.788119863719231,61.7649813036221],[49.970401276826095,62.286915039297462],[50.152682689932952,62.808848774972816],[50.334964103039816,63.330782510648177],[50.517245516146673,63.852716246323531],[50.69952692925353,64.374649981998886],[50.881808342360394,64.896583717674247],[51.064089755467251,65.418517453349608],[51.246371168574115,65.940451189024969],[51.428652581680971,66.462384924700316],[51.610933994787835,66.984318660375678],[51.793215407894692,67.506252396051039],[51.975496821001556,68.0281861317264],[52.157778234108413,68.550119867401747],[52.34005964721527,69.072053603077109],[52.522341060322134,69.59398733875247],[52.704622473428991,70.115921074427817],[52.886903886535855,70.637854810103178],[53.069185299642712,71.15978854577854],[53.251466712749576,71.681722281453901],[53.433748125856432,72.203656017129248],[53.616029538963296,72.725589752804609],[53.798310952070153,73.24752348847997],[53.98059236517701,73.769457224155317],[54.162873778283874,74.291390959830679],[54.345155191390731,74.81332469550604],[54.527436604497595,75.335258431181401],[54.709718017604452,75.857192166856748],[54.891999430711316,76.37912590253211],[55.074280843818173,76.901059638207471],[55.256562256925037,77.422993373882832],[55.438843670031893,77.944927109558193],[55.62112508313875,78.466860845233541],[55.803406496245614,78.988794580908902],[55.985687909352471,79.510728316584263],[56.167969322459335,80.032662052259624],[56.350250735566192,80.554595787934971],[56.532532148673056,81.076529523610333],[56.714813561779913,81.598463259285694],[56.89709497488677,82.120396994961041],[57.079376387993634,82.642330730636402]],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"surface\",\"alpha\":0.65000000000000002,\"name\":\"pred_surface\",\"cauto\":true,\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"interest01\"},\"yaxis\":{\"title\":\"age\"},\"zaxis\":{\"title\":\"tc_diff\"}},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\".hideLegend\":true,\"data\":[{\"x\":[0,1,0,1,1,1,1,0,1,0,0,1,1,0,1,0,0,0,1,0,1,1,0,0,1,0,0,1,0,0,1,1,0,0,1,0,1,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,0,1,1,0,1,1,0,1,0,1,0,0,0,0,0,1,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,0,0,0,0,1,1,1,1,0,1,0,1,0,0,0,1,1,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,1,1,1,1,1,0,0,1,1,1,0,1,1,0,1,1,1,0,0,1,1,0,1,0,1,1,1,0,0,1,0,0,1,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,1,0,0,0,1,1,1,1,0,1,0,1,1,0,0,0,1,1,1,1,0,0,1,1,0,0,1,0,0,1,1,1,0,1,1,0,1,1,0,1,0,1,0,1,1,0,0,0,0,1,1,0,1,0,1,0,0,1,0,0,0,1,1,1,1,0,0,1,0,1,0,1,1,0,0,0,0,1,0,0,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,0,0,1,0,0,0,0,1,1,0,0,1,0,0,0,0,1,1,0,0,1,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,0,0,0,0,1,1,0,1,1,0,1,0,0,1,0,0,0,1,0,1,1,0,0,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,1,1,0,0,0,1,0,1,0,0,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,0,0,1,0,1,0,1,0,1,1,1,0,0,1,0,1,1,0,1,0,0,0,0,1,1,1,1,0,0,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,1,1,0,0,1,0,0,0,1,0,1,0,1,1,1,0,1,1,0,0,1,0,1,1,0,0,1,0,1,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,1,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,0,1,0,1,0,0,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,1,0,1,1,0,1,0,0,0,1,0,1,1,1,1,1,0,0,0,1,0,1,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,0,1,0,1,1,0,0,0,1,0,1,1,1,0,1,0,0,0,0,1,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,1,0,1,1,1,1,0,1,1,0,1,1,0,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,1,0,1,0,0,0,0,1,0,0,0,1,0,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,1,1,0,0,1,0,0,1,0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,1,1,0,1,0,0,1,0,1,0,0,1,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,0,0,1,0,0,1,1,0,1,0,0,0,0,0,1,1,0,0,0,0,1,0,1,1,1,1,0,0,1,1,0,0,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,1,1,1,1,1,0,0,1,0,1,1,1,1,1,0,0,1,1,0,0,0,1,1,1,1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,0,1,0,0,0,1,1,1,1,1,0,0,0,1,0,0,0,1,0,1,0,1,0,1,1,0,1,1,1,1,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1,1,1,0,0,0,0,1,0,1,0,0,0,0],\"y\":[19,46,59,55,66,61,42,39,65,43,36,45,57,38,48,55,38,71,61,38,63,43,41,40,60,61,21,80,34,53,40,52,59,47,65,46,44,62,26,24,48,52,42,46,56,67,56,60,64,60,54,32,57,20,62,19,89,39,32,38,59,61,28,39,40,39,33,49,22,56,71,26,34,28,79,44,63,63,39,60,76,60,41,33,56,55,43,24,57,21,48,60,83,29,72,25,21,64,61,91,63,49,56,80,40,61,62,69,52,38,75,67,33,47,59,27,44,60,26,60,76,30,43,26,81,36,47,37,27,40,80,59,41,50,19,58,65,48,62,49,61,65,36,35,26,32,26,19,37,43,60,71,82,33,85,59,31,35,30,25,26,22,61,69,53,67,43,22,27,64,62,37,78,48,71,21,23,23,43,70,56,57,66,25,48,74,57,41,37,61,28,77,56,62,66,40,20,58,76,32,28,43,37,71,39,19,21,27,60,34,20,51,64,73,54,50,55,90,68,80,65,27,64,38,29,20,28,41,73,68,76,76,54,19,78,23,74,43,77,28,62,31,29,67,57,53,24,72,70,28,57,25,65,52,71,43,60,44,57,35,39,85,62,41,62,35,59,74,28,45,74,37,56,65,42,56,67,65,75,27,80,36,51,52,38,44,59,44,45,43,41,20,66,73,29,55,59,27,51,29,29,35,76,58,36,61,41,57,73,68,61,36,26,57,28,60,49,35,41,43,57,70,59,53,58,67,32,29,78,39,57,59,56,30,24,20,53,95,56,37,29,33,48,19,21,42,28,55,71,66,36,39,69,34,73,75,51,72,26,34,36,24,42,60,43,35,59,63,57,31,43,63,46,58,63,54,38,49,45,34,64,43,46,44,58,63,78,25,26,60,53,29,33,45,42,61,53,62,55,62,47,74,56,35,31,73,70,21,26,31,21,40,40,74,56,46,44,27,56,78,46,39,66,22,58,19,39,65,48,19,75,52,54,42,36,34,27,52,55,31,59,58,28,52,59,62,79,29,25,40,33,40,43,30,31,38,62,80,60,42,42,72,34,55,44,63,29,82,34,55,61,38,46,43,53,77,67,55,27,50,42,25,84,19,57,77,38,56,38,27,32,36,24,33,35,66,51,51,71,43,60,43,38,33,20,29,27,36,66,30,38,63,25,69,40,24,58,60,35,52,43,23,35,39,42,78,60,79,34,59,44,76,30,44,61,64,48,66,64,69,42,44,51,45,22,63,67,60,61,54,36,27,20,43,76,31,57,43,44,78,49,23,44,49,72,45,60,37,42,51,40,54,62,23,23,65,41,55,24,69,55,67,61,32,27,62,79,36,56,62,55,51,59,26,61,40,59,69,77,40,24,50,68,32,70,31,34,37,63,31,63,44,38,54,48,29,40,58,60,26,29,62,20,65,36,30,70,67,62,38,41,30,57,59,32,44,68,79,46,36,67,22,33,33,28,64,22,54,63,63,55,29,31,25,51,64,54,52,26,71,31,78,55,22,32,26,19,37,53,37,31,66,23,20,73,44,36,43,23,69,58,30,80,30,59,27,58,24,50,39,69,52,42,46,73,26,41,33,61,59,64,62,73,70,73,23,52,39,43,42,22,71,26,61,65,65,28,23,68,36,60,52,25,22,24,55,57,51,68,30,73,25,36,21,33,25,19,64,27,63,66,28,62,63,60,64,60,39,37,28,92,29,45,40,50,59,38,67,39,41,73,60,52,56,61,26,33,65,38,62,30,42,53,71,50,20,64,28,35,62,26,63,39,70,31,19,54,59,53,60,60,52,59,51,53,69,22,33,35,76,24,69,52,65,62,20,32,72,36,38,69,62,61,26,58,35,29,49,35,55,39,61,26,48,47,37,35,52,23,62,24,67,34,22,45,30,43,43,57,33,48,55,30,59,54,63,51,64,29,42,36,23,20,55,67,41,52,74,21,71,30,64,40,27,29,25,27,52,71,48,20,65,23,41,71,54,58,28,37,39,76,27,51,52,27,76,57,34,62,70,71,86,61,62,63,60,62,25,38,62,55,25,40,27,34,63,58,75,48,55,62,51,37,53,57,28,61,41,55,62,27,22,43,24,64,67,64,34,75,64,54,45,35,27,49,46,69,79,83,53,55,41,56,32,69,35,59,38,61,78,56,25,44,24,31,30,60,61,57,48,83,28,38,84,79,57,33,64,44,49,46,61,57,29,62,50,26,75,27,48,59,53,34,69,58,38,22,54,54,74,30,47,44,80,56,22,34,56,74,78,28,41,55,65,69,43,58,60,30,62,67,33,62,83,29,62,36,24,48,44,56,22,42,61,72,40,32,84,64,55,55,91,61,36,71,21,44,43,60,52,28,53,41,58,66,73,26,39,39,58,55,24,54,26,41,20,25,26,39,25,61,42,24,66,64,54,43,43,43,38,41,34,60,32,48,34,27,23,24,23,63,63,74,47,56,39,58,24,58,54,31,44,53,40,28,63,40,34,44,26,21,43,62,20,32,56,23,49,41,57,61,38,66,65,46,76,30,30,54,35,47,72,49,21,27,41,49,65,60,66,62,63,24,80,63,57,70,70,64,70,77,56,60,52,43,63,66,73,23,59,64,66,75,65,68,33,68,57,37,54,66,49,58,41,23,55,36,50],\"z\":[16,36,20,79,97,100,85,86,14,95,91,0,86,50,81,49,0,0,89,8,97,85,15,9,79,96,93,95,75,1,89,100,12,20,58,59,99,33,33,6,51,6,49,59,54,94,0,9,100,65,0,7,1,66,42,36,92,19,61,74,93,73,76,75,90,71,64,82,92,75,88,66,13,60,70,3,27,90,81,90,50,90,40,84,53,86,1,15,100,40,35,40,47,68,40,72,92,47,53,59,86,75,90,94,32,81,80,99,11,30,5,95,0,17,63,85,97,39,73,41,75,68,30,2,85,27,2,50,16,91,20,84,19,56,53,91,58,34,79,29,20,100,91,8,31,63,60,1,35,71,81,100,90,99,71,98,1,87,12,76,60,37,44,25,61,54,69,38,34,88,88,2,40,30,92,81,32,56,46,30,29,0,44,60,19,96,97,60,39,100,100,25,89,5,92,38,42,75,75,51,68,49,2,92,71,80,42,75,19,9,39,17,78,1,19,84,89,91,63,31,46,92,91,7,4,54,70,52,99,64,78,92,18,11,94,72,99,35,91,3,66,10,97,40,61,5,94,80,24,30,83,9,49,71,80,34,66,40,57,30,51,95,89,83,10,80,31,86,18,78,61,70,71,79,79,79,30,40,97,73,82,46,53,60,52,36,21,2,90,45,2,16,40,95,66,89,24,70,36,30,85,84,1,50,43,67,99,84,89,72,79,11,50,44,40,74,53,34,7,99,99,94,10,40,0,0,33,49,81,67,25,5,88,63,11,50,73,78,16,49,62,81,1,58,16,79,31,80,97,9,35,1,99,71,72,1,24,73,4,13,2,48,99,78,67,56,75,80,23,31,87,61,60,60,94,15,84,69,81,19,86,9,47,33,95,89,86,71,100,68,29,6,0,100,60,44,67,5,46,11,91,91,80,78,81,98,65,83,39,67,81,1,41,69,44,68,5,89,62,79,59,25,8,2,20,58,50,93,21,0,93,0,83,98,84,22,13,95,100,4,78,1,97,100,84,59,85,68,8,100,81,9,89,85,98,55,60,46,39,95,73,38,45,96,66,89,52,52,90,0,1,64,66,20,99,75,40,85,83,10,65,6,80,62,88,80,45,70,66,6,35,60,98,87,21,85,90,93,89,15,98,100,5,50,18,65,6,27,28,5,89,95,37,93,17,53,48,84,17,65,95,30,0,27,23,60,18,91,0,99,70,5,84,92,50,98,100,6,85,100,12,52,1,31,13,31,87,80,41,99,47,0,16,50,69,28,33,89,20,100,32,75,44,58,100,88,87,1,88,68,100,88,94,50,0,94,81,97,12,70,14,99,92,54,1,72,97,8,100,90,83,76,15,70,18,69,90,77,11,70,52,29,29,56,81,91,100,12,99,84,98,78,18,80,52,44,61,100,77,55,17,45,76,74,76,38,88,72,1,17,82,46,7,44,35,5,2,93,88,44,58,0,51,99,76,23,56,49,50,83,96,14,26,86,64,69,13,36,2,42,34,1,80,47,68,11,85,14,70,64,59,92,36,50,70,60,69,14,5,87,31,44,77,3,94,43,48,39,91,93,69,69,95,84,53,30,61,96,58,96,55,28,93,84,36,55,42,9,2,60,9,85,5,37,69,94,4,65,58,49,66,5,64,44,55,37,15,15,98,57,85,61,21,65,0,35,70,28,41,16,87,43,28,76,89,21,37,60,1,20,88,86,50,95,78,55,63,75,64,80,20,88,32,45,69,0,65,51,51,87,30,49,4,100,63,83,40,58,29,18,1,92,1,71,54,12,45,29,38,50,0,54,56,8,81,100,100,9,63,80,68,94,96,94,17,3,92,42,49,1,61,99,96,31,25,28,38,24,15,76,51,96,32,8,60,41,99,92,94,35,63,93,86,74,0,58,46,40,69,1,1,85,91,52,73,55,36,54,31,55,39,59,56,61,89,37,100,34,23,69,45,87,40,6,22,41,40,40,20,18,72,71,67,29,60,100,86,52,48,0,98,20,85,89,57,45,46,35,73,16,9,34,5,81,95,10,74,70,58,32,45,100,86,100,63,44,98,80,63,85,9,26,31,12,11,32,99,0,39,70,65,79,94,53,98,4,72,38,84,53,30,2,75,15,94,50,70,80,89,40,31,78,16,9,55,1,99,51,90,48,52,63,47,3,70,44,16,43,87,92,15,48,69,93,92,85,28,50,1,1,1,11,31,19,88,94,84,97,30,95,88,78,3,98,10,76,9,2,98,90,61,100,45,100,1,74,49,78,60,100,60,75,95,50,93,34,64,1,1,72,38,70,94,74,82,64,82,54,90,45,60,44,78,80,87,96,22,30,75,2,32,71,42,94,19,34,33,23,92,100,27,10,96,69,20,78,3,94,65,71,53,50,23,52,97,26,47,57,19,47,81,60,5,20,66,0,3,80,96,68,68,10,94,50,84,14,4,72,3,48,98,52,1,77,23,70,39,91,12,29,28,70,15,72,0,31,2,28,54,34,5,35,60,66,75,78,86,19,46,84,90,3,52,85,71,88,54,4,55,19,89,55,69,94,7,60,48,0,72,100,89,25,0,10,65,11,99,93,9,97,97,82,51,10,9,20,27,7,23,61,75,0,91,11,70,94,97,69,68,28,49,5,30,64,15,0,28,56],\"type\":\"scatter3d\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"sizesizemode\":\"area\",\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"showscale\":false},\"textfont\":{\"size\":55},\"error_y\":{\"color\":\"rgba(31,119,180,1)\",\"width\":55},\"error_x\":{\"color\":\"rgba(31,119,180,1)\",\"width\":55},\"line\":{\"color\":\"rgba(31,119,180,1)\",\"width\":55},\"frame\":null},{\"colorbar\":{\"title\":\"tc_diff\",\"ticklen\":2},\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"x\":[0,1],\"y\":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],\"z\":[[43.225988991872271,42.97536681930923],[43.408270404979135,43.497300554984591],[43.590551818085991,44.019234290659945],[43.772833231192855,44.541168026335313],[43.955114644299712,45.063101762010668],[44.137396057406576,45.585035497686029],[44.319677470513433,46.106969233361383],[44.50195888362029,46.628902969036737],[44.684240296727154,47.150836704712098],[44.866521709834011,47.672770440387453],[45.048803122940875,48.194704176062814],[45.231084536047732,48.716637911738168],[45.413365949154596,49.238571647413529],[45.595647362261452,49.760505383088883],[45.777928775368316,50.282439118764245],[45.960210188475173,50.804372854439599],[46.14249160158203,51.326306590114953],[46.324773014688894,51.848240325790314],[46.507054427795751,52.370174061465669],[46.689335840902615,52.89210779714103],[46.871617254009472,53.414041532816384],[47.053898667116336,53.935975268491745],[47.236180080223193,54.457909004167099],[47.418461493330057,54.979842739842461],[47.600742906436913,55.501776475517815],[47.78302431954377,56.023710211193169],[47.965305732650634,56.54564394686853],[48.147587145757491,57.067577682543885],[48.329868558864355,57.589511418219246],[48.512149971971212,58.1114451538946],[48.694431385078076,58.633378889569961],[48.876712798184933,59.155312625245315],[49.058994211291797,59.677246360920677],[49.241275624398654,60.199180096596031],[49.42355703750551,60.721113832271385],[49.605838450612374,61.243047567946746],[49.788119863719231,61.7649813036221],[49.970401276826095,62.286915039297462],[50.152682689932952,62.808848774972816],[50.334964103039816,63.330782510648177],[50.517245516146673,63.852716246323531],[50.69952692925353,64.374649981998886],[50.881808342360394,64.896583717674247],[51.064089755467251,65.418517453349608],[51.246371168574115,65.940451189024969],[51.428652581680971,66.462384924700316],[51.610933994787835,66.984318660375678],[51.793215407894692,67.506252396051039],[51.975496821001556,68.0281861317264],[52.157778234108413,68.550119867401747],[52.34005964721527,69.072053603077109],[52.522341060322134,69.59398733875247],[52.704622473428991,70.115921074427817],[52.886903886535855,70.637854810103178],[53.069185299642712,71.15978854577854],[53.251466712749576,71.681722281453901],[53.433748125856432,72.203656017129248],[53.616029538963296,72.725589752804609],[53.798310952070153,73.24752348847997],[53.98059236517701,73.769457224155317],[54.162873778283874,74.291390959830679],[54.345155191390731,74.81332469550604],[54.527436604497595,75.335258431181401],[54.709718017604452,75.857192166856748],[54.891999430711316,76.37912590253211],[55.074280843818173,76.901059638207471],[55.256562256925037,77.422993373882832],[55.438843670031893,77.944927109558193],[55.62112508313875,78.466860845233541],[55.803406496245614,78.988794580908902],[55.985687909352471,79.510728316584263],[56.167969322459335,80.032662052259624],[56.350250735566192,80.554595787934971],[56.532532148673056,81.076529523610333],[56.714813561779913,81.598463259285694],[56.89709497488677,82.120396994961041],[57.079376387993634,82.642330730636402]],\"type\":\"surface\",\"name\":\"pred_surface\",\"cauto\":true,\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n:::\n\n## {.smaller}\n\n#### `m6`: Two numerical predictors \n\n::: panel-tabset\n\n## m6\n\n$$\\text{m6: tc_diff} = \\beta_0 + \\beta_1\\text{age} + \\beta_2\\text{income} +\\epsilon$$\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm6 <- lm(tc_diff ~ age + income, nes)\ncoef(m6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(Intercept)         age      income \n 33.1994121   0.4002682   0.1573334 \n```\n\n\n:::\n:::\n\n\n\n## {{< fa table >}}-Table\n\n\n\n\n```{.r .cell-code}\nhtmlreg(list( m6))\n```\n\n<table class=\"texreg\" style=\"margin: 10px auto;border-collapse: collapse;border-spacing: 0px;caption-side: bottom;color: #000000;border-top: 2px solid #000000;\">\n<caption>Statistical models</caption>\n<thead>\n<tr>\n<th style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 1</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">(Intercept)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">33.20<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(3.35)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">age</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.40<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.06)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">income</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.16</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.29)</td>\n</tr>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">Adj. R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n</tr>\n<tr style=\"border-bottom: 2px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">Num. obs.</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1049</td>\n</tr>\n</tbody>\n<tfoot>\n<tr>\n<td style=\"font-size: 0.8em;\" colspan=\"2\"><sup>&#42;&#42;&#42;</sup>p &lt; 0.001; <sup>&#42;&#42;</sup>p &lt; 0.01; <sup>&#42;</sup>p &lt; 0.05</td>\n</tr>\n</tfoot>\n</table>\n\n\n\n\n## {{< fa code >}}-Figure\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create Prediction Data Frame\n\npred_df6_age <- expand_grid(\n  age = seq(min(nes$age, na.rm = T),\n            max(nes$age, na.rm=T),\n            length.out = 10),\n  # Hold income constant at mean value\n  income = mean(nes$income,na.rm=T)\n)\n\npred_df6_income <- expand_grid(\n  income = seq(min(nes$income, na.rm = T),\n            max(nes$income, na.rm=T),\n            length.out = 16),\n  # Hold income constant at mean value\n  age = mean(nes$age,na.rm=T)\n)\n\npred_df6_age  <- cbind(\n  pred_df6_age ,\n  fit = predict(m6, pred_df6_age )\n)\n\npred_df6_income  <- cbind(\n  pred_df6_income ,\n  fit = predict(m6, pred_df6_income )\n)\n# Produce figure\n\npred_df6_age %>% \n  ggplot(aes(age, fit,\n             ))+\n  # Add raw data\n  geom_point(\n    data = nes %>% \n      filter(!is.na(income)) %>%\n      filter(!is.na(age))\n      ,\n    aes(x= age,\n        y= tc_diff),\n    alpha = .1,\n    size = .2\n  ) +\n  geom_point()+\n  geom_line() +\n  labs(title =\"Age holding income constant\") -> fig_tc_m6_age\n\npred_df6_income %>% \n  ggplot(aes(income, fit,\n             ))+\n  # Add raw data\n  geom_point(\n    data = nes %>% \n      filter(!is.na(income)) %>%\n      filter(!is.na(age))\n      ,\n    aes(x= income,\n        y= tc_diff),\n    alpha = .1,\n    size = .2\n  ) +\n  geom_point()+\n  geom_line() +\n  labs(title = \"Income holding age constant\") -> fig_tc_m6_income\n\n\nfig_tc_m6 <- ggpubr::ggarrange(fig_tc_m6_age, fig_tc_m6_income)\n```\n:::\n\n\n\n## {{< fa chart-line >}}-m6\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/m6fig-1.png){width=960}\n:::\n:::\n\n\n\n## {{< fa chart-line >}}-m6 in 3d\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-5eaa000e2042ac17d208\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-5eaa000e2042ac17d208\">{\"x\":{\"visdat\":{\"542968e1f0c0\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"542968e1f0c0\",\"attrs\":{\"542968e1f0c0\":{\"x\":{},\"y\":{},\"z\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\",\"mode\":\"markers\",\"size\":5,\"inherit\":true},\"542968e1f0c0.1\":{\"x\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],\"y\":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],\"z\":[[40.96184186632938,41.119175289309283,41.276508712289186,41.433842135269089,41.591175558248992,41.748508981228895,41.905842404208798,42.063175827188701,42.220509250168604,42.377842673148507,42.53517609612841,42.692509519108313,42.849842942088216,43.007176365068119,43.164509788048022,43.321843211027925],[41.3621100962527,41.519443519232603,41.676776942212506,41.834110365192409,41.991443788172312,42.148777211152215,42.306110634132118,42.463444057112021,42.620777480091924,42.778110903071827,42.93544432605173,43.092777749031633,43.250111172011536,43.407444594991439,43.564778017971342,43.722111440951245],[41.762378326176027,41.91971174915593,42.077045172135833,42.234378595115736,42.391712018095639,42.549045441075542,42.706378864055445,42.863712287035348,43.021045710015251,43.178379132995154,43.335712555975057,43.49304597895496,43.650379401934863,43.807712824914766,43.965046247894669,44.122379670874572],[42.162646556099354,42.319979979079257,42.47731340205916,42.634646825039063,42.791980248018966,42.949313670998869,43.106647093978772,43.263980516958675,43.421313939938578,43.578647362918481,43.735980785898384,43.893314208878287,44.05064763185819,44.207981054838093,44.365314477817996,44.522647900797899],[42.562914786022681,42.720248209002584,42.877581631982487,43.03491505496239,43.192248477942293,43.349581900922196,43.506915323902099,43.664248746882002,43.821582169861905,43.978915592841808,44.136249015821711,44.293582438801614,44.450915861781517,44.60824928476142,44.765582707741324,44.922916130721227],[42.963183015946008,43.120516438925911,43.277849861905814,43.435183284885717,43.59251670786562,43.749850130845523,43.907183553825426,44.064516976805329,44.221850399785232,44.379183822765135,44.536517245745038,44.693850668724941,44.851184091704845,45.008517514684748,45.165850937664651,45.323184360644554],[43.363451245869335,43.520784668849238,43.678118091829141,43.835451514809044,43.992784937788947,44.15011836076885,44.307451783748753,44.464785206728656,44.622118629708559,44.779452052688463,44.936785475668366,45.094118898648269,45.251452321628172,45.408785744608075,45.566119167587978,45.723452590567881],[43.763719475792662,43.921052898772565,44.078386321752468,44.235719744732371,44.393053167712274,44.550386590692177,44.70772001367208,44.865053436651984,45.022386859631887,45.17972028261179,45.337053705591693,45.494387128571596,45.651720551551499,45.809053974531402,45.966387397511305,46.123720820491208],[44.163987705715989,44.321321128695892,44.478654551675795,44.635987974655698,44.793321397635601,44.950654820615505,45.107988243595408,45.265321666575311,45.422655089555214,45.579988512535117,45.73732193551502,45.894655358494923,46.051988781474826,46.209322204454729,46.366655627434632,46.523989050414535],[44.564255935639316,44.721589358619219,44.878922781599123,45.036256204579026,45.193589627558929,45.350923050538832,45.508256473518735,45.665589896498638,45.822923319478541,45.980256742458444,46.137590165438347,46.29492358841825,46.452257011398153,46.609590434378056,46.766923857357959,46.924257280337862],[44.964524165562644,45.121857588542547,45.27919101152245,45.436524434502353,45.593857857482256,45.751191280462159,45.908524703442062,46.065858126421965,46.223191549401868,46.380524972381771,46.537858395361674,46.695191818341577,46.85252524132148,47.009858664301383,47.167192087281286,47.324525510261189],[45.364792395485971,45.522125818465874,45.679459241445777,45.83679266442568,45.994126087405583,46.151459510385486,46.308792933365389,46.466126356345292,46.623459779325195,46.780793202305098,46.938126625285001,47.095460048264904,47.252793471244807,47.41012689422471,47.567460317204613,47.724793740184516],[45.765060625409298,45.922394048389201,46.079727471369104,46.237060894349007,46.39439431732891,46.551727740308813,46.709061163288716,46.866394586268619,47.023728009248522,47.181061432228425,47.338394855208328,47.495728278188231,47.653061701168134,47.810395124148037,47.96772854712794,48.125061970107843],[46.165328855332618,46.322662278312521,46.479995701292424,46.637329124272327,46.79466254725223,46.951995970232133,47.109329393212036,47.266662816191939,47.423996239171842,47.581329662151745,47.738663085131648,47.895996508111551,48.053329931091454,48.210663354071357,48.36799677705126,48.525330200031163],[46.565597085255945,46.722930508235848,46.880263931215751,47.037597354195654,47.194930777175557,47.35226420015546,47.509597623135363,47.666931046115266,47.824264469095169,47.981597892075072,48.138931315054975,48.296264738034878,48.453598161014781,48.610931583994685,48.768265006974588,48.925598429954491],[46.965865315179272,47.123198738159175,47.280532161139078,47.437865584118981,47.595199007098884,47.752532430078787,47.90986585305869,48.067199276038593,48.224532699018496,48.381866121998399,48.539199544978302,48.696532967958206,48.853866390938109,49.011199813918012,49.168533236897915,49.325866659877818],[47.366133545102599,47.523466968082502,47.680800391062405,47.838133814042308,47.995467237022211,48.152800660002114,48.310134082982017,48.46746750596192,48.624800928941823,48.782134351921727,48.93946777490163,49.096801197881533,49.254134620861436,49.411468043841339,49.568801466821242,49.726134889801145],[47.766401775025926,47.923735198005829,48.081068620985732,48.238402043965635,48.395735466945538,48.553068889925441,48.710402312905345,48.867735735885248,49.025069158865151,49.182402581845054,49.339736004824957,49.49706942780486,49.654402850784763,49.811736273764666,49.969069696744569,50.126403119724472],[48.166670004949253,48.324003427929156,48.481336850909059,48.638670273888962,48.796003696868866,48.953337119848769,49.110670542828672,49.268003965808575,49.425337388788478,49.582670811768381,49.740004234748284,49.897337657728187,50.05467108070809,50.212004503687993,50.369337926667896,50.526671349647799],[48.56693823487258,48.724271657852483,48.881605080832387,49.03893850381229,49.196271926792193,49.353605349772096,49.510938772751999,49.668272195731902,49.825605618711805,49.982939041691708,50.140272464671611,50.297605887651514,50.454939310631417,50.61227273361132,50.769606156591223,50.926939579571126],[48.967206464795908,49.124539887775811,49.281873310755714,49.439206733735617,49.59654015671552,49.753873579695423,49.911207002675326,50.068540425655229,50.225873848635132,50.383207271615035,50.540540694594938,50.697874117574841,50.855207540554744,51.012540963534647,51.16987438651455,51.327207809494453],[49.367474694719235,49.524808117699138,49.682141540679041,49.839474963658944,49.996808386638847,50.15414180961875,50.311475232598653,50.468808655578556,50.626142078558459,50.783475501538362,50.940808924518265,51.098142347498168,51.255475770478071,51.412809193457974,51.570142616437877,51.72747603941778],[49.767742924642562,49.925076347622465,50.082409770602368,50.239743193582271,50.397076616562174,50.554410039542077,50.71174346252198,50.869076885501883,51.026410308481786,51.183743731461689,51.341077154441592,51.498410577421495,51.655744000401398,51.813077423381301,51.970410846361204,52.127744269341107],[50.168011154565889,50.325344577545792,50.482678000525695,50.640011423505598,50.797344846485501,50.954678269465404,51.112011692445307,51.26934511542521,51.426678538405113,51.584011961385016,51.741345384364919,51.898678807344822,52.056012230324725,52.213345653304629,52.370679076284532,52.528012499264435],[50.568279384489216,50.725612807469119,50.882946230449022,51.040279653428925,51.197613076408828,51.354946499388731,51.512279922368634,51.669613345348537,51.82694676832844,51.984280191308343,52.141613614288246,52.29894703726815,52.456280460248053,52.613613883227956,52.770947306207859,52.928280729187762],[50.968547614412543,51.125881037392446,51.283214460372349,51.440547883352252,51.597881306332155,51.755214729312058,51.912548152291961,52.069881575271864,52.227214998251767,52.384548421231671,52.541881844211574,52.699215267191477,52.85654869017138,53.013882113151283,53.171215536131186,53.328548959111089],[51.368815844335863,51.526149267315766,51.683482690295669,51.840816113275572,51.998149536255475,52.155482959235378,52.312816382215281,52.470149805195184,52.627483228175088,52.784816651154991,52.942150074134894,53.099483497114797,53.2568169200947,53.414150343074603,53.571483766054506,53.728817189034409],[51.76908407425919,51.926417497239093,52.083750920218996,52.241084343198899,52.398417766178802,52.555751189158705,52.713084612138609,52.870418035118512,53.027751458098415,53.185084881078318,53.342418304058221,53.499751727038124,53.657085150018027,53.81441857299793,53.971751995977833,54.129085418957736],[52.169352304182517,52.32668572716242,52.484019150142323,52.641352573122226,52.79868599610213,52.956019419082033,53.113352842061936,53.270686265041839,53.428019688021742,53.585353111001645,53.742686533981548,53.900019956961451,54.057353379941354,54.214686802921257,54.37202022590116,54.529353648881063],[52.569620534105844,52.726953957085748,52.884287380065651,53.041620803045554,53.198954226025457,53.35628764900536,53.513621071985263,53.670954494965166,53.828287917945069,53.985621340924972,54.142954763904875,54.300288186884778,54.457621609864681,54.614955032844584,54.772288455824487,54.92962187880439],[52.969888764029172,53.127222187009075,53.284555609988978,53.441889032968881,53.599222455948784,53.756555878928687,53.91388930190859,54.071222724888493,54.228556147868396,54.385889570848299,54.543222993828202,54.700556416808105,54.857889839788008,55.015223262767911,55.172556685747814,55.329890108727717],[53.370156993952499,53.527490416932402,53.684823839912305,53.842157262892208,53.999490685872111,54.156824108852014,54.314157531831917,54.47149095481182,54.628824377791723,54.786157800771626,54.943491223751529,55.100824646731432,55.258158069711335,55.415491492691238,55.572824915671141,55.730158338651044],[53.770425223875826,53.927758646855729,54.085092069835632,54.242425492815535,54.399758915795438,54.557092338775341,54.714425761755244,54.871759184735147,55.02909260771505,55.186426030694953,55.343759453674856,55.501092876654759,55.658426299634662,55.815759722614565,55.973093145594468,56.130426568574372],[54.170693453799153,54.328026876779056,54.485360299758959,54.642693722738862,54.800027145718765,54.957360568698668,55.114693991678571,55.272027414658474,55.429360837638377,55.58669426061828,55.744027683598183,55.901361106578086,56.058694529557989,56.216027952537893,56.373361375517796,56.530694798497699],[54.57096168372248,54.728295106702383,54.885628529682286,55.042961952662189,55.200295375642092,55.357628798621995,55.514962221601898,55.672295644581801,55.829629067561704,55.986962490541607,56.14429591352151,56.301629336501414,56.458962759481317,56.61629618246122,56.773629605441123,56.930963028421026],[54.971229913645807,55.12856333662571,55.285896759605613,55.443230182585516,55.600563605565419,55.757897028545322,55.915230451525225,56.072563874505128,56.229897297485032,56.387230720464935,56.544564143444838,56.701897566424741,56.859230989404644,57.016564412384547,57.17389783536445,57.331231258344353],[55.371498143569134,55.528831566549037,55.68616498952894,55.843498412508843,56.000831835488746,56.158165258468649,56.315498681448553,56.472832104428456,56.630165527408359,56.787498950388262,56.944832373368165,57.102165796348068,57.259499219327971,57.416832642307874,57.574166065287777,57.73149948826768],[55.771766373492461,55.929099796472364,56.086433219452267,56.24376664243217,56.401100065412074,56.558433488391977,56.71576691137188,56.873100334351783,57.030433757331686,57.187767180311589,57.345100603291492,57.502434026271395,57.659767449251298,57.817100872231201,57.974434295211104,58.131767718191007],[56.172034603415788,56.329368026395692,56.486701449375595,56.644034872355498,56.801368295335401,56.958701718315304,57.116035141295207,57.27336856427511,57.430701987255013,57.588035410234916,57.745368833214819,57.902702256194722,58.060035679174625,58.217369102154528,58.374702525134431,58.532035948114334],[56.572302833339108,56.729636256319012,56.886969679298915,57.044303102278818,57.201636525258721,57.358969948238624,57.516303371218527,57.67363679419843,57.830970217178333,57.988303640158236,58.145637063138139,58.302970486118042,58.460303909097945,58.617637332077848,58.774970755057751,58.932304178037654],[56.972571063262436,57.129904486242339,57.287237909222242,57.444571332202145,57.601904755182048,57.759238178161951,57.916571601141854,58.073905024121757,58.23123844710166,58.388571870081563,58.545905293061466,58.703238716041369,58.860572139021272,59.017905562001175,59.175238984981078,59.332572407960981],[57.372839293185763,57.530172716165666,57.687506139145569,57.844839562125472,58.002172985105375,58.159506408085278,58.316839831065181,58.474173254045084,58.631506677024987,58.78884010000489,58.946173522984793,59.103506945964696,59.260840368944599,59.418173791924502,59.575507214904405,59.732840637884308],[57.77310752310909,57.930440946088993,58.087774369068896,58.245107792048799,58.402441215028702,58.559774638008605,58.717108060988508,58.874441483968411,59.031774906948314,59.189108329928217,59.34644175290812,59.503775175888023,59.661108598867926,59.818442021847829,59.975775444827732,60.133108867807636],[58.173375753032417,58.33070917601232,58.488042598992223,58.645376021972126,58.802709444952029,58.960042867931932,59.117376290911835,59.274709713891738,59.432043136871641,59.589376559851544,59.746709982831447,59.90404340581135,60.061376828791254,60.218710251771157,60.37604367475106,60.533377097730963],[58.573643982955744,58.730977405935647,58.88831082891555,59.045644251895453,59.202977674875356,59.360311097855259,59.517644520835162,59.674977943815065,59.832311366794968,59.989644789774871,60.146978212754775,60.304311635734678,60.461645058714581,60.618978481694484,60.776311904674387,60.93364532765429],[58.973912212879071,59.131245635858974,59.288579058838877,59.44591248181878,59.603245904798683,59.760579327778586,59.917912750758489,60.075246173738392,60.232579596718296,60.389913019698199,60.547246442678102,60.704579865658005,60.861913288637908,61.019246711617811,61.176580134597714,61.333913557577617],[59.374180442802398,59.531513865782301,59.688847288762204,59.846180711742107,60.00351413472201,60.160847557701914,60.318180980681817,60.47551440366172,60.632847826641623,60.790181249621526,60.947514672601429,61.104848095581332,61.262181518561235,61.419514941541138,61.576848364521041,61.734181787500944],[59.774448672725725,59.931782095705628,60.089115518685531,60.246448941665435,60.403782364645338,60.561115787625241,60.718449210605144,60.875782633585047,61.03311605656495,61.190449479544853,61.347782902524756,61.505116325504659,61.662449748484562,61.819783171464465,61.977116594444368,62.134450017424271],[60.174716902649052,60.332050325628956,60.489383748608859,60.646717171588762,60.804050594568665,60.961384017548568,61.118717440528471,61.276050863508374,61.433384286488277,61.59071770946818,61.748051132448083,61.905384555427986,62.062717978407889,62.220051401387792,62.377384824367695,62.534718247347598],[60.57498513257238,60.732318555552283,60.889651978532186,61.046985401512089,61.204318824491992,61.361652247471895,61.518985670451798,61.676319093431701,61.833652516411604,61.990985939391507,62.14831936237141,62.305652785351313,62.462986208331216,62.620319631311119,62.777653054291022,62.934986477270925],[60.975253362495707,61.13258678547561,61.289920208455513,61.447253631435416,61.604587054415319,61.761920477395222,61.919253900375125,62.076587323355028,62.233920746334931,62.391254169314834,62.548587592294737,62.70592101527464,62.863254438254543,63.020587861234446,63.177921284214349,63.335254707194252],[61.375521592419034,61.532855015398937,61.69018843837884,61.847521861358743,62.004855284338646,62.162188707318549,62.319522130298452,62.476855553278355,62.634188976258258,62.791522399238161,62.948855822218064,63.106189245197967,63.26352266817787,63.420856091157773,63.578189514137676,63.73552293711758],[61.775789822342354,61.933123245322257,62.09045666830216,62.247790091282063,62.405123514261966,62.562456937241869,62.719790360221772,62.877123783201675,63.034457206181578,63.191790629161481,63.349124052141384,63.506457475121287,63.66379089810119,63.821124321081093,63.978457744060997,64.135791167040892],[62.176058052265681,62.333391475245584,62.490724898225487,62.64805832120539,62.805391744185293,62.962725167165196,63.120058590145099,63.277392013125002,63.434725436104905,63.592058859084808,63.749392282064711,63.906725705044614,64.06405912802451,64.221392551004413,64.378725973984317,64.53605939696422],[62.576326282189008,62.733659705168911,62.890993128148814,63.048326551128717,63.20565997410862,63.362993397088523,63.520326820068426,63.677660243048329,63.834993666028232,63.992327089008135,64.149660511988031,64.306993934967934,64.464327357947838,64.621660780927741,64.778994203907644,64.936327626887547],[62.976594512112335,63.133927935092238,63.291261358072141,63.448594781052044,63.605928204031947,63.76326162701185,63.920595049991753,64.077928472971649,64.235261895951552,64.392595318931455,64.549928741911359,64.707262164891262,64.864595587871165,65.021929010851068,65.179262433830971,65.336595856810874],[63.376862742035662,63.534196165015565,63.691529587995468,63.848863010975371,64.006196433955267,64.16352985693517,64.320863279915073,64.478196702894977,64.63553012587488,64.792863548854783,64.950196971834686,65.107530394814589,65.264863817794492,65.422197240774395,65.579530663754298,65.736864086734201],[63.777130971958989,63.934464394938892,64.091797817918788,64.249131240898691,64.406464663878594,64.563798086858498,64.721131509838401,64.878464932818304,65.035798355798207,65.19313177877811,65.350465201758013,65.507798624737916,65.665132047717819,65.822465470697722,65.979798893677625,66.137132316657528],[64.177399201882309,64.334732624862212,64.492066047842115,64.649399470822019,64.806732893801922,64.964066316781825,65.121399739761728,65.278733162741631,65.436066585721534,65.593400008701437,65.75073343168134,65.908066854661243,66.065400277641146,66.222733700621049,66.380067123600952,66.537400546580855],[64.577667431805637,64.73500085478554,64.892334277765443,65.049667700745346,65.207001123725249,65.364334546705152,65.521667969685055,65.679001392664958,65.836334815644861,65.993668238624764,66.151001661604667,66.30833508458457,66.465668507564473,66.623001930544376,66.780335353524279,66.937668776504182],[64.977935661728964,65.135269084708867,65.29260250768877,65.449935930668673,65.607269353648576,65.764602776628479,65.921936199608382,66.079269622588285,66.236603045568188,66.393936468548091,66.551269891527994,66.708603314507897,66.8659367374878,67.023270160467703,67.180603583447606,67.337937006427509],[65.378203891652291,65.535537314632194,65.692870737612097,65.850204160592,66.007537583571903,66.164871006551806,66.322204429531709,66.479537852511612,66.636871275491515,66.794204698471418,66.951538121451321,67.108871544431224,67.266204967411127,67.42353839039103,67.580871813370933,67.738205236350836],[65.778472121575618,65.935805544555521,66.093138967535424,66.250472390515327,66.40780581349523,66.565139236475133,66.722472659455036,66.879806082434939,67.037139505414842,67.194472928394745,67.351806351374648,67.509139774354551,67.666473197334454,67.823806620314357,67.981140043294261,68.138473466274164],[66.178740351498945,66.336073774478848,66.493407197458751,66.650740620438654,66.808074043418557,66.96540746639846,67.122740889378363,67.280074312358266,67.437407735338169,67.594741158318072,67.752074581297975,67.909408004277878,68.066741427257782,68.224074850237685,68.381408273217588,68.538741696197491],[66.579008581422272,66.736342004402175,66.893675427382078,67.051008850361981,67.208342273341884,67.365675696321787,67.52300911930169,67.680342542281593,67.837675965261496,67.9950093882414,68.152342811221303,68.309676234201206,68.467009657181109,68.624343080161012,68.781676503140915,68.939009926120818],[66.979276811345599,67.136610234325502,67.293943657305405,67.451277080285308,67.608610503265211,67.765943926245114,67.923277349225017,68.080610772204921,68.237944195184824,68.395277618164727,68.55261104114463,68.709944464124533,68.867277887104436,69.024611310084339,69.181944733064242,69.339278156044145],[67.379545041268926,67.536878464248829,67.694211887228732,67.851545310208635,68.008878733188538,68.166212156168442,68.323545579148345,68.480879002128248,68.638212425108151,68.795545848088054,68.952879271067957,69.11021269404786,69.267546117027763,69.424879540007666,69.582212962987569,69.739546385967472],[67.779813271192253,67.937146694172156,68.09448011715206,68.251813540131963,68.409146963111866,68.566480386091769,68.723813809071672,68.881147232051575,69.038480655031478,69.195814078011381,69.353147500991284,69.510480923971187,69.66781434695109,69.825147769930993,69.982481192910896,70.139814615890799],[68.180081501115581,68.337414924095484,68.494748347075387,68.65208177005529,68.809415193035193,68.966748616015096,69.124082038994999,69.281415461974902,69.438748884954805,69.596082307934708,69.753415730914611,69.910749153894514,70.068082576874417,70.22541599985432,70.382749422834223,70.540082845814126],[68.580349731038908,68.737683154018811,68.895016576998714,69.052349999978617,69.20968342295852,69.367016845938423,69.524350268918326,69.681683691898229,69.839017114878132,69.996350537858035,70.153683960837938,70.311017383817841,70.468350806797744,70.625684229777647,70.78301765275755,70.940351075737453],[68.980617960962235,69.137951383942138,69.295284806922041,69.452618229901944,69.609951652881847,69.76728507586175,69.924618498841653,70.081951921821556,70.239285344801459,70.396618767781362,70.553952190761265,70.711285613741168,70.868619036721071,71.025952459700974,71.183285882680877,71.34061930566078],[69.380886190885562,69.538219613865465,69.695553036845368,69.852886459825271,70.010219882805174,70.167553305785077,70.32488672876498,70.482220151744883,70.639553574724786,70.796886997704689,70.954220420684592,71.111553843664495,71.268887266644398,71.426220689624301,71.583554112604205,71.740887535584108],[69.781154420808889,69.938487843788792,70.095821266768695,70.253154689748598,70.410488112728501,70.567821535708404,70.725154958688307,70.88248838166821,71.039821804648113,71.197155227628016,71.354488650607919,71.511822073587823,71.669155496567726,71.826488919547629,71.983822342527532,72.141155765507435],[70.181422650732216,70.338756073712119,70.496089496692022,70.653422919671925,70.810756342651828,70.968089765631731,71.125423188611634,71.282756611591537,71.44009003457144,71.597423457551344,71.754756880531247,71.91209030351115,72.069423726491053,72.226757149470956,72.384090572450859,72.541423995430762],[70.581690880655543,70.739024303635446,70.896357726615349,71.053691149595252,71.211024572575155,71.368357995555058,71.525691418534961,71.683024841514865,71.840358264494768,71.997691687474671,72.155025110454574,72.312358533434477,72.46969195641438,72.627025379394283,72.784358802374186,72.941692225354089],[70.98195911057887,71.139292533558773,71.296625956538676,71.453959379518579,71.611292802498483,71.768626225478386,71.925959648458289,72.083293071438192,72.240626494418095,72.397959917397998,72.555293340377901,72.712626763357804,72.869960186337707,73.02729360931761,73.184627032297513,73.341960455277416],[71.382227340502197,71.5395607634821,71.696894186462004,71.854227609441907,72.01156103242181,72.168894455401713,72.326227878381616,72.483561301361519,72.640894724341422,72.798228147321325,72.955561570301228,73.112894993281131,73.270228416261034,73.427561839240937,73.58489526222084,73.742228685200743]],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"surface\",\"alpha\":0.65000000000000002,\"name\":\"pred_surface\",\"cauto\":true,\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"income\"},\"yaxis\":{\"title\":\"age\"},\"zaxis\":{\"title\":\"tc_diff\"}},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\".hideLegend\":true,\"data\":[{\"x\":[3,6,6,8,10,6,10,1,4,3,7,6,2,4,7,7,2,9,8,3,13,11,6,9,8,1,11,12,2,4,7,8,6,3,4,10,1,6,5,6,5,6,4,5,4,4,4,1,8,9,9,10,3,9,5,3,4,11,6,1,2,10,4,6,4,4,12,5,11,11,6,10,5,12,8,3,4,7,11,9,5,11,11,2,9,3,1,10,2,4,2,3,9,13,7,4,8,7,4,10,9,3,5,5,2,8,7,3,6,2,2,2,15,9,9,3,9,3,1,8,10,4,4,3,11,3,12,5,9,3,11,5,2,4,4,9,1,6,1,4,6,3,6,3,2,4,10,16,3,3,3,3,3,1,6,3,5,5,7,7,4,10,3,2,14,5,4,5,4,7,1,4,3,5,4,5,12,6,4,2,3,8,13,10,11,1,12,9,6,8,3,6,9,2,2,1,9,1,9,9,4,9,3,9,2,5,8,5,7,10,5,5,7,5,7,8,1,7,7,8,12,4,5,2,2,12,8,8,7,2,4,6,4,10,4,4,10,6,3,9,2,12,4,10,6,8,2,3,3,10,5,2,3,4,9,4,1,3,1,2,1,10,6,3,10,8,7,3,4,9,1,5,8,5,4,9,6,6,2,9,5,5,9,4,3,9,2,4,9,9,3,6,3,6,6,2,1,4,1,10,1,3,9,2,6,6,3,8,9,2,8,15,2,9,5,8,5,4,9,4,10,11,3,3,5,8,8,11,1,5,11,11,6,4,8,7,10,5,2,4,4,7,7,6,1,6,1,4,4,2,8,14,4,3,6,5,5,8,7,4,10,5,10,2,3,11,4,14,3,7,5,4,2,2,11,6,6,4,4,4,3,2,8,7,6,9,7,6,7,2,16,1,3,9,8,2,8,3,8,10,6,4,4,7,3,7,4,11,2,3,3,5,3,4,4,4,6,5,8,10,3,3,2,9,1,1,3,1,9,8,11,3,6,11,12,2,10,2,5,11,11,2,2,4,11,1,2,12,8,2,4,2,8,9,9,7,8,14,5,2,2,4,5,4,3,10,5,6,4,9,6,6,5,5,10,5,9,5,3,2,2,4,7,2,9,2,9,10,3,11,8,4,8,4,1,5,6,9,4,12,4,5,9,10,3,6,9,9,1,6,3,6,6,7,2,8,3,1,2,9,8,1,2,3,2,2,5,3,8,7,5,11,8,5,1,4,1,2,5,6,4,2,6,4,1,3,3,3,4,12,2,3,11,2,2,3,4,2,7,8,3,2,3,2,3,13,12,12,7,8,1,12,9,11,5,1,9,3,12,8,8,10,15,7,4,14,4,1,5,16,11,5,6,4,3,8,3,10,9,5,11,6,5,12,3,1,7,6,3,11,3,3,10,3,7,9,6,3,2,5,6,2,11,11,2,7,7,8,6,1,7,9,4,3,15,9,2,4,4,6,2,10,9,1,4,3,1,10,2,2,4,5,7,4,9,4,2,6,3,6,2,9,11,4,2,6,5,5,12,2,3,2,8,4,5,11,8,7,9,3,3,5,7,3,6,2,8,10,7,1,2,9,4,1,10,6,5,1,2,5,1,8,3,2,5,1,4,2,4,5,7,5,8,1,8,10,6,3,5,10,1,3,3,1,2,3,3,6,4,5,2,3,4,9,1,6,4,10,2,6,7,13,3,3,3,1,4,5,5,4,6,4,3,3,7,12,2,7,10,5,3,8,5,3,13,1,3,7,5,6,2,5,12,4,10,4,4,5,8,1,8,9,1,4,6,15,5,2,3,3,11,12,5,2,6,4,2,9,2,5,8,8,11,9,7,6,7,3,3,9,1,9,4,4,6,11,9,8,3,3,3,8,5,8,7,4,4,3,8,1,4,9,6,5,9,8,3,2,4,2,3,7,6,6,4,7,7,2,6,3,5,9,6,2,2,2,11,11,12,2,4,2,5,9,1,6,5,2,4,9,7,5,6,12,6,7,2,2,11,3,11,4,3,3,3,11,9,3,2,4,8,2,4,4,2,8,6,3,13,9,13,8,2,4,9,5,6,3,3,9,3,4,12,7,2,3,10,5,5,1,7,6,3,2,5,2,4,3,5,2,3,11,1,5,3,7,1,3,6,3,9,4,3,9,3,5,11,2,3,6,5,11,3,6,11,5,2,6,4,5,10,8,5,2,6,6,4,1,6,8,3,2,10,9,6,12,12,9,12,8,10,12,6,3,9,7,1,6,13,8,3,5,3,4,6,3,10,8,2,8,3,3,1,4,5,1,5,6,2,9,1,4,7,2,5,1,3,5,1,3,2,5,8,3,2,3,1,4,6,10,4,8,2,13,4,8,5,9,3,7,8,3,13,10,1,6,7,3,1],\"y\":[46,59,55,66,42,39,65,43,36,45,38,48,55,38,71,61,38,63,43,41,40,61,21,80,34,53,40,52,59,47,46,44,62,26,24,48,52,42,46,56,67,60,64,60,32,57,20,62,19,89,39,32,38,59,61,28,39,40,39,33,49,22,56,71,26,34,28,79,44,63,63,39,60,76,60,41,33,56,55,43,24,48,60,83,29,25,21,64,61,91,63,56,40,61,62,69,52,38,75,67,33,47,59,27,44,60,60,76,30,43,26,81,36,47,37,27,40,80,59,41,50,58,65,48,62,61,65,36,35,26,32,26,37,43,60,71,33,59,31,35,30,25,22,61,53,51,67,43,22,27,64,62,37,30,78,48,71,23,43,70,56,66,25,74,41,37,28,77,56,40,20,58,76,28,43,71,39,19,21,60,34,20,51,64,73,54,50,55,90,68,80,65,27,64,38,34,29,20,28,41,68,76,76,54,78,23,74,43,77,28,62,31,29,67,57,53,24,72,70,28,57,65,52,71,43,60,44,57,35,39,85,62,41,62,35,59,74,28,45,74,37,56,65,42,56,67,65,75,27,80,51,52,38,44,59,44,31,45,43,41,20,66,73,29,55,59,27,51,29,35,58,36,61,41,73,68,61,36,26,57,28,60,49,35,41,43,57,70,59,58,67,32,29,78,39,57,59,56,24,20,53,95,56,37,29,33,48,19,21,42,28,55,66,39,69,34,73,75,51,72,26,34,25,36,24,60,43,35,59,63,57,31,43,63,46,58,54,38,45,34,64,43,46,44,58,25,26,60,53,29,33,45,42,61,53,62,55,62,47,74,56,35,31,73,70,21,26,31,21,40,40,74,56,44,27,56,78,46,39,66,22,58,19,39,65,48,19,75,52,54,39,42,36,34,27,52,31,59,28,52,62,79,29,25,40,33,40,43,30,31,62,80,60,42,42,32,72,34,55,63,29,82,34,55,61,38,46,53,77,67,55,27,50,42,25,84,19,57,77,56,38,27,32,36,24,33,35,66,51,43,60,43,38,33,20,29,27,36,66,30,38,25,69,40,24,58,60,35,52,43,23,35,39,42,60,79,59,44,76,30,44,27,61,64,48,66,64,42,44,51,45,22,63,67,60,61,54,36,27,20,76,31,57,43,44,78,49,23,44,49,72,60,37,42,51,54,62,23,23,65,41,55,24,69,55,67,61,32,27,62,79,36,56,62,55,51,59,26,61,40,59,77,40,24,50,68,70,31,34,37,63,31,63,38,54,48,29,40,60,26,29,62,20,65,36,70,62,38,41,30,57,59,32,44,68,79,46,67,33,33,28,64,22,54,63,63,55,51,64,54,26,71,78,55,32,26,37,53,37,31,66,73,44,36,43,23,69,30,80,30,59,27,58,24,39,69,52,73,26,41,33,61,59,62,73,73,23,52,39,43,42,22,71,26,61,65,65,28,23,68,36,60,52,22,25,24,55,57,51,68,63,73,25,36,21,33,19,27,63,66,28,62,63,60,64,60,39,37,28,92,29,40,50,59,38,67,39,32,41,73,60,52,56,61,26,33,65,38,62,30,42,53,50,20,64,28,35,62,26,63,39,70,31,54,59,53,60,52,51,53,69,22,33,35,76,24,52,65,62,20,32,72,36,38,69,62,61,26,58,29,49,55,39,61,26,48,47,37,35,52,23,62,24,67,34,22,45,30,43,43,57,33,48,55,30,59,54,63,51,64,29,42,36,23,20,55,67,41,52,74,71,30,40,27,29,25,27,52,71,48,20,23,41,71,54,58,28,39,76,27,51,52,27,76,57,34,62,70,71,61,62,63,60,62,25,38,62,55,25,40,27,34,63,58,75,48,55,62,37,53,57,61,41,55,62,27,43,24,64,67,64,34,75,64,54,45,35,24,27,46,69,79,53,41,56,69,35,38,78,56,25,44,24,31,30,60,61,57,48,83,28,38,84,79,57,33,64,44,49,46,61,57,29,62,50,26,27,48,59,34,38,22,54,54,30,47,44,80,56,22,34,56,74,78,28,41,55,65,69,58,60,30,62,33,62,83,29,36,24,48,44,56,22,42,61,72,40,32,84,64,55,55,61,36,71,21,60,52,28,53,41,58,66,73,26,39,24,54,26,41,20,25,26,39,25,61,42,24,66,64,54,43,43,43,38,41,34,60,32,48,34,27,23,23,63,63,74,47,56,39,58,58,54,31,44,53,40,28,63,40,34,44,26,21,43,62,32,56,23,49,41,57,61,38,66,25,65,46,76,30,54,35,47,72,49,27,41,42,65,60,66,62,63,24,80,57,70,70,51,64,70,77,56,60,52,43,63,66,73,23,59,64,66,75,65,38,33,68,57,37,54,66,49,58,41,23,55,36,50],\"z\":[36,20,79,97,85,86,14,95,91,0,50,81,49,0,0,89,8,97,85,15,9,96,93,95,75,1,89,100,12,20,59,99,33,33,6,51,6,49,59,54,94,9,100,65,7,1,66,42,36,92,19,61,74,93,73,76,75,90,71,64,82,92,75,88,66,13,60,70,3,27,90,81,90,50,90,40,84,53,86,1,15,35,40,47,68,72,92,47,53,59,86,90,32,81,80,99,11,30,5,95,0,17,63,85,97,39,41,75,68,30,2,85,27,2,50,16,91,20,84,19,56,91,58,34,79,20,100,91,8,31,63,60,35,71,81,100,99,98,1,87,12,76,37,44,61,2,54,69,38,34,88,88,2,10,40,30,92,56,46,30,29,44,60,96,60,39,100,25,89,38,42,75,75,68,49,92,71,80,42,19,9,39,17,78,1,19,84,89,91,63,31,46,92,91,7,50,4,54,70,52,64,78,92,18,94,72,99,35,91,3,66,10,97,40,61,5,94,80,24,30,83,49,71,80,34,66,40,57,30,51,95,89,83,10,80,31,86,18,78,61,70,71,79,79,79,30,40,97,73,82,53,60,52,36,21,2,15,90,45,2,16,40,95,66,89,24,70,36,30,84,50,43,67,99,89,72,79,11,50,44,40,74,53,34,7,99,99,94,10,0,0,33,49,81,67,25,5,88,11,50,73,78,16,49,62,81,1,58,16,79,31,80,9,1,99,71,72,1,24,73,4,13,97,2,48,78,67,56,75,80,23,31,87,61,60,60,15,84,81,19,86,9,47,33,95,71,100,68,29,6,0,100,60,44,67,5,46,11,91,91,80,78,81,98,65,83,39,67,81,1,41,69,44,5,89,62,79,59,25,8,2,20,58,50,93,21,0,93,0,83,7,98,84,22,13,95,4,78,97,100,59,85,68,8,100,81,9,89,85,98,60,46,39,95,73,71,38,45,96,89,52,52,90,0,1,64,66,99,75,40,85,83,10,65,6,80,62,88,80,70,66,6,35,60,98,87,21,85,93,15,98,100,5,50,18,65,6,27,28,5,89,37,93,17,53,48,84,17,65,95,30,0,27,23,18,91,99,70,5,84,92,95,50,98,100,6,85,12,52,1,31,13,31,87,80,41,99,47,0,16,69,28,33,89,20,100,32,75,44,58,100,87,1,88,68,88,94,50,0,94,81,97,12,70,14,99,92,54,1,72,97,8,100,90,83,76,15,70,18,69,90,11,70,52,29,29,81,91,100,12,99,84,98,18,80,52,44,61,77,55,17,45,76,74,76,88,1,17,82,46,7,44,35,5,2,93,88,58,51,99,76,23,56,49,50,83,96,64,69,13,2,42,1,80,68,11,14,70,64,59,92,70,60,69,14,5,87,44,77,3,94,43,48,39,93,69,69,53,30,61,96,58,96,28,93,36,55,42,9,2,60,9,85,5,37,69,94,4,65,58,49,66,5,0,64,55,37,15,15,98,98,85,61,21,65,0,70,41,16,87,43,28,76,89,21,37,60,1,20,88,86,95,78,55,63,75,64,6,80,20,88,32,45,69,0,65,51,51,87,30,49,4,63,83,40,58,29,18,1,92,1,71,54,45,29,38,50,54,8,81,100,100,9,63,80,68,96,94,17,3,92,42,49,1,61,99,96,31,25,38,24,76,51,96,32,8,60,41,99,92,94,35,63,93,86,74,0,58,46,40,69,1,1,85,91,52,73,55,36,54,31,55,39,59,56,61,89,37,100,34,69,45,40,6,22,41,40,40,20,18,72,67,29,60,100,86,52,0,98,20,85,89,57,45,46,35,73,16,9,5,81,95,10,74,70,58,32,45,100,86,100,63,44,98,80,63,85,9,31,12,11,99,0,39,70,65,94,53,98,4,72,38,84,53,30,2,75,1,15,50,70,80,40,78,16,55,1,51,48,52,63,47,3,70,44,16,43,87,92,15,48,69,93,92,85,28,50,1,1,1,11,31,19,88,94,84,30,95,88,3,76,9,2,98,61,100,45,100,1,74,49,78,60,100,60,75,95,50,93,64,1,1,72,70,94,74,82,82,54,90,45,60,44,78,80,87,96,22,30,75,2,32,42,94,19,34,92,100,27,10,96,69,20,78,3,94,50,23,52,97,26,47,57,19,47,81,60,5,20,66,0,3,80,96,68,68,10,94,50,84,14,4,72,48,98,52,1,77,23,70,39,12,29,28,70,15,72,0,31,2,28,54,34,5,35,60,75,78,86,19,46,84,90,3,52,98,85,71,88,54,55,19,89,55,69,7,60,1,0,72,100,89,25,0,10,11,99,93,3,9,97,97,82,51,10,9,20,27,7,23,61,75,0,91,11,18,94,97,69,68,28,49,5,30,64,15,0,28,56],\"type\":\"scatter3d\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"sizesizemode\":\"area\",\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"showscale\":false},\"textfont\":{\"size\":55},\"error_y\":{\"color\":\"rgba(31,119,180,1)\",\"width\":55},\"error_x\":{\"color\":\"rgba(31,119,180,1)\",\"width\":55},\"line\":{\"color\":\"rgba(31,119,180,1)\",\"width\":55},\"frame\":null},{\"colorbar\":{\"title\":\"tc_diff\",\"ticklen\":2},\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333334\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666666\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"x\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],\"y\":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],\"z\":[[40.96184186632938,41.119175289309283,41.276508712289186,41.433842135269089,41.591175558248992,41.748508981228895,41.905842404208798,42.063175827188701,42.220509250168604,42.377842673148507,42.53517609612841,42.692509519108313,42.849842942088216,43.007176365068119,43.164509788048022,43.321843211027925],[41.3621100962527,41.519443519232603,41.676776942212506,41.834110365192409,41.991443788172312,42.148777211152215,42.306110634132118,42.463444057112021,42.620777480091924,42.778110903071827,42.93544432605173,43.092777749031633,43.250111172011536,43.407444594991439,43.564778017971342,43.722111440951245],[41.762378326176027,41.91971174915593,42.077045172135833,42.234378595115736,42.391712018095639,42.549045441075542,42.706378864055445,42.863712287035348,43.021045710015251,43.178379132995154,43.335712555975057,43.49304597895496,43.650379401934863,43.807712824914766,43.965046247894669,44.122379670874572],[42.162646556099354,42.319979979079257,42.47731340205916,42.634646825039063,42.791980248018966,42.949313670998869,43.106647093978772,43.263980516958675,43.421313939938578,43.578647362918481,43.735980785898384,43.893314208878287,44.05064763185819,44.207981054838093,44.365314477817996,44.522647900797899],[42.562914786022681,42.720248209002584,42.877581631982487,43.03491505496239,43.192248477942293,43.349581900922196,43.506915323902099,43.664248746882002,43.821582169861905,43.978915592841808,44.136249015821711,44.293582438801614,44.450915861781517,44.60824928476142,44.765582707741324,44.922916130721227],[42.963183015946008,43.120516438925911,43.277849861905814,43.435183284885717,43.59251670786562,43.749850130845523,43.907183553825426,44.064516976805329,44.221850399785232,44.379183822765135,44.536517245745038,44.693850668724941,44.851184091704845,45.008517514684748,45.165850937664651,45.323184360644554],[43.363451245869335,43.520784668849238,43.678118091829141,43.835451514809044,43.992784937788947,44.15011836076885,44.307451783748753,44.464785206728656,44.622118629708559,44.779452052688463,44.936785475668366,45.094118898648269,45.251452321628172,45.408785744608075,45.566119167587978,45.723452590567881],[43.763719475792662,43.921052898772565,44.078386321752468,44.235719744732371,44.393053167712274,44.550386590692177,44.70772001367208,44.865053436651984,45.022386859631887,45.17972028261179,45.337053705591693,45.494387128571596,45.651720551551499,45.809053974531402,45.966387397511305,46.123720820491208],[44.163987705715989,44.321321128695892,44.478654551675795,44.635987974655698,44.793321397635601,44.950654820615505,45.107988243595408,45.265321666575311,45.422655089555214,45.579988512535117,45.73732193551502,45.894655358494923,46.051988781474826,46.209322204454729,46.366655627434632,46.523989050414535],[44.564255935639316,44.721589358619219,44.878922781599123,45.036256204579026,45.193589627558929,45.350923050538832,45.508256473518735,45.665589896498638,45.822923319478541,45.980256742458444,46.137590165438347,46.29492358841825,46.452257011398153,46.609590434378056,46.766923857357959,46.924257280337862],[44.964524165562644,45.121857588542547,45.27919101152245,45.436524434502353,45.593857857482256,45.751191280462159,45.908524703442062,46.065858126421965,46.223191549401868,46.380524972381771,46.537858395361674,46.695191818341577,46.85252524132148,47.009858664301383,47.167192087281286,47.324525510261189],[45.364792395485971,45.522125818465874,45.679459241445777,45.83679266442568,45.994126087405583,46.151459510385486,46.308792933365389,46.466126356345292,46.623459779325195,46.780793202305098,46.938126625285001,47.095460048264904,47.252793471244807,47.41012689422471,47.567460317204613,47.724793740184516],[45.765060625409298,45.922394048389201,46.079727471369104,46.237060894349007,46.39439431732891,46.551727740308813,46.709061163288716,46.866394586268619,47.023728009248522,47.181061432228425,47.338394855208328,47.495728278188231,47.653061701168134,47.810395124148037,47.96772854712794,48.125061970107843],[46.165328855332618,46.322662278312521,46.479995701292424,46.637329124272327,46.79466254725223,46.951995970232133,47.109329393212036,47.266662816191939,47.423996239171842,47.581329662151745,47.738663085131648,47.895996508111551,48.053329931091454,48.210663354071357,48.36799677705126,48.525330200031163],[46.565597085255945,46.722930508235848,46.880263931215751,47.037597354195654,47.194930777175557,47.35226420015546,47.509597623135363,47.666931046115266,47.824264469095169,47.981597892075072,48.138931315054975,48.296264738034878,48.453598161014781,48.610931583994685,48.768265006974588,48.925598429954491],[46.965865315179272,47.123198738159175,47.280532161139078,47.437865584118981,47.595199007098884,47.752532430078787,47.90986585305869,48.067199276038593,48.224532699018496,48.381866121998399,48.539199544978302,48.696532967958206,48.853866390938109,49.011199813918012,49.168533236897915,49.325866659877818],[47.366133545102599,47.523466968082502,47.680800391062405,47.838133814042308,47.995467237022211,48.152800660002114,48.310134082982017,48.46746750596192,48.624800928941823,48.782134351921727,48.93946777490163,49.096801197881533,49.254134620861436,49.411468043841339,49.568801466821242,49.726134889801145],[47.766401775025926,47.923735198005829,48.081068620985732,48.238402043965635,48.395735466945538,48.553068889925441,48.710402312905345,48.867735735885248,49.025069158865151,49.182402581845054,49.339736004824957,49.49706942780486,49.654402850784763,49.811736273764666,49.969069696744569,50.126403119724472],[48.166670004949253,48.324003427929156,48.481336850909059,48.638670273888962,48.796003696868866,48.953337119848769,49.110670542828672,49.268003965808575,49.425337388788478,49.582670811768381,49.740004234748284,49.897337657728187,50.05467108070809,50.212004503687993,50.369337926667896,50.526671349647799],[48.56693823487258,48.724271657852483,48.881605080832387,49.03893850381229,49.196271926792193,49.353605349772096,49.510938772751999,49.668272195731902,49.825605618711805,49.982939041691708,50.140272464671611,50.297605887651514,50.454939310631417,50.61227273361132,50.769606156591223,50.926939579571126],[48.967206464795908,49.124539887775811,49.281873310755714,49.439206733735617,49.59654015671552,49.753873579695423,49.911207002675326,50.068540425655229,50.225873848635132,50.383207271615035,50.540540694594938,50.697874117574841,50.855207540554744,51.012540963534647,51.16987438651455,51.327207809494453],[49.367474694719235,49.524808117699138,49.682141540679041,49.839474963658944,49.996808386638847,50.15414180961875,50.311475232598653,50.468808655578556,50.626142078558459,50.783475501538362,50.940808924518265,51.098142347498168,51.255475770478071,51.412809193457974,51.570142616437877,51.72747603941778],[49.767742924642562,49.925076347622465,50.082409770602368,50.239743193582271,50.397076616562174,50.554410039542077,50.71174346252198,50.869076885501883,51.026410308481786,51.183743731461689,51.341077154441592,51.498410577421495,51.655744000401398,51.813077423381301,51.970410846361204,52.127744269341107],[50.168011154565889,50.325344577545792,50.482678000525695,50.640011423505598,50.797344846485501,50.954678269465404,51.112011692445307,51.26934511542521,51.426678538405113,51.584011961385016,51.741345384364919,51.898678807344822,52.056012230324725,52.213345653304629,52.370679076284532,52.528012499264435],[50.568279384489216,50.725612807469119,50.882946230449022,51.040279653428925,51.197613076408828,51.354946499388731,51.512279922368634,51.669613345348537,51.82694676832844,51.984280191308343,52.141613614288246,52.29894703726815,52.456280460248053,52.613613883227956,52.770947306207859,52.928280729187762],[50.968547614412543,51.125881037392446,51.283214460372349,51.440547883352252,51.597881306332155,51.755214729312058,51.912548152291961,52.069881575271864,52.227214998251767,52.384548421231671,52.541881844211574,52.699215267191477,52.85654869017138,53.013882113151283,53.171215536131186,53.328548959111089],[51.368815844335863,51.526149267315766,51.683482690295669,51.840816113275572,51.998149536255475,52.155482959235378,52.312816382215281,52.470149805195184,52.627483228175088,52.784816651154991,52.942150074134894,53.099483497114797,53.2568169200947,53.414150343074603,53.571483766054506,53.728817189034409],[51.76908407425919,51.926417497239093,52.083750920218996,52.241084343198899,52.398417766178802,52.555751189158705,52.713084612138609,52.870418035118512,53.027751458098415,53.185084881078318,53.342418304058221,53.499751727038124,53.657085150018027,53.81441857299793,53.971751995977833,54.129085418957736],[52.169352304182517,52.32668572716242,52.484019150142323,52.641352573122226,52.79868599610213,52.956019419082033,53.113352842061936,53.270686265041839,53.428019688021742,53.585353111001645,53.742686533981548,53.900019956961451,54.057353379941354,54.214686802921257,54.37202022590116,54.529353648881063],[52.569620534105844,52.726953957085748,52.884287380065651,53.041620803045554,53.198954226025457,53.35628764900536,53.513621071985263,53.670954494965166,53.828287917945069,53.985621340924972,54.142954763904875,54.300288186884778,54.457621609864681,54.614955032844584,54.772288455824487,54.92962187880439],[52.969888764029172,53.127222187009075,53.284555609988978,53.441889032968881,53.599222455948784,53.756555878928687,53.91388930190859,54.071222724888493,54.228556147868396,54.385889570848299,54.543222993828202,54.700556416808105,54.857889839788008,55.015223262767911,55.172556685747814,55.329890108727717],[53.370156993952499,53.527490416932402,53.684823839912305,53.842157262892208,53.999490685872111,54.156824108852014,54.314157531831917,54.47149095481182,54.628824377791723,54.786157800771626,54.943491223751529,55.100824646731432,55.258158069711335,55.415491492691238,55.572824915671141,55.730158338651044],[53.770425223875826,53.927758646855729,54.085092069835632,54.242425492815535,54.399758915795438,54.557092338775341,54.714425761755244,54.871759184735147,55.02909260771505,55.186426030694953,55.343759453674856,55.501092876654759,55.658426299634662,55.815759722614565,55.973093145594468,56.130426568574372],[54.170693453799153,54.328026876779056,54.485360299758959,54.642693722738862,54.800027145718765,54.957360568698668,55.114693991678571,55.272027414658474,55.429360837638377,55.58669426061828,55.744027683598183,55.901361106578086,56.058694529557989,56.216027952537893,56.373361375517796,56.530694798497699],[54.57096168372248,54.728295106702383,54.885628529682286,55.042961952662189,55.200295375642092,55.357628798621995,55.514962221601898,55.672295644581801,55.829629067561704,55.986962490541607,56.14429591352151,56.301629336501414,56.458962759481317,56.61629618246122,56.773629605441123,56.930963028421026],[54.971229913645807,55.12856333662571,55.285896759605613,55.443230182585516,55.600563605565419,55.757897028545322,55.915230451525225,56.072563874505128,56.229897297485032,56.387230720464935,56.544564143444838,56.701897566424741,56.859230989404644,57.016564412384547,57.17389783536445,57.331231258344353],[55.371498143569134,55.528831566549037,55.68616498952894,55.843498412508843,56.000831835488746,56.158165258468649,56.315498681448553,56.472832104428456,56.630165527408359,56.787498950388262,56.944832373368165,57.102165796348068,57.259499219327971,57.416832642307874,57.574166065287777,57.73149948826768],[55.771766373492461,55.929099796472364,56.086433219452267,56.24376664243217,56.401100065412074,56.558433488391977,56.71576691137188,56.873100334351783,57.030433757331686,57.187767180311589,57.345100603291492,57.502434026271395,57.659767449251298,57.817100872231201,57.974434295211104,58.131767718191007],[56.172034603415788,56.329368026395692,56.486701449375595,56.644034872355498,56.801368295335401,56.958701718315304,57.116035141295207,57.27336856427511,57.430701987255013,57.588035410234916,57.745368833214819,57.902702256194722,58.060035679174625,58.217369102154528,58.374702525134431,58.532035948114334],[56.572302833339108,56.729636256319012,56.886969679298915,57.044303102278818,57.201636525258721,57.358969948238624,57.516303371218527,57.67363679419843,57.830970217178333,57.988303640158236,58.145637063138139,58.302970486118042,58.460303909097945,58.617637332077848,58.774970755057751,58.932304178037654],[56.972571063262436,57.129904486242339,57.287237909222242,57.444571332202145,57.601904755182048,57.759238178161951,57.916571601141854,58.073905024121757,58.23123844710166,58.388571870081563,58.545905293061466,58.703238716041369,58.860572139021272,59.017905562001175,59.175238984981078,59.332572407960981],[57.372839293185763,57.530172716165666,57.687506139145569,57.844839562125472,58.002172985105375,58.159506408085278,58.316839831065181,58.474173254045084,58.631506677024987,58.78884010000489,58.946173522984793,59.103506945964696,59.260840368944599,59.418173791924502,59.575507214904405,59.732840637884308],[57.77310752310909,57.930440946088993,58.087774369068896,58.245107792048799,58.402441215028702,58.559774638008605,58.717108060988508,58.874441483968411,59.031774906948314,59.189108329928217,59.34644175290812,59.503775175888023,59.661108598867926,59.818442021847829,59.975775444827732,60.133108867807636],[58.173375753032417,58.33070917601232,58.488042598992223,58.645376021972126,58.802709444952029,58.960042867931932,59.117376290911835,59.274709713891738,59.432043136871641,59.589376559851544,59.746709982831447,59.90404340581135,60.061376828791254,60.218710251771157,60.37604367475106,60.533377097730963],[58.573643982955744,58.730977405935647,58.88831082891555,59.045644251895453,59.202977674875356,59.360311097855259,59.517644520835162,59.674977943815065,59.832311366794968,59.989644789774871,60.146978212754775,60.304311635734678,60.461645058714581,60.618978481694484,60.776311904674387,60.93364532765429],[58.973912212879071,59.131245635858974,59.288579058838877,59.44591248181878,59.603245904798683,59.760579327778586,59.917912750758489,60.075246173738392,60.232579596718296,60.389913019698199,60.547246442678102,60.704579865658005,60.861913288637908,61.019246711617811,61.176580134597714,61.333913557577617],[59.374180442802398,59.531513865782301,59.688847288762204,59.846180711742107,60.00351413472201,60.160847557701914,60.318180980681817,60.47551440366172,60.632847826641623,60.790181249621526,60.947514672601429,61.104848095581332,61.262181518561235,61.419514941541138,61.576848364521041,61.734181787500944],[59.774448672725725,59.931782095705628,60.089115518685531,60.246448941665435,60.403782364645338,60.561115787625241,60.718449210605144,60.875782633585047,61.03311605656495,61.190449479544853,61.347782902524756,61.505116325504659,61.662449748484562,61.819783171464465,61.977116594444368,62.134450017424271],[60.174716902649052,60.332050325628956,60.489383748608859,60.646717171588762,60.804050594568665,60.961384017548568,61.118717440528471,61.276050863508374,61.433384286488277,61.59071770946818,61.748051132448083,61.905384555427986,62.062717978407889,62.220051401387792,62.377384824367695,62.534718247347598],[60.57498513257238,60.732318555552283,60.889651978532186,61.046985401512089,61.204318824491992,61.361652247471895,61.518985670451798,61.676319093431701,61.833652516411604,61.990985939391507,62.14831936237141,62.305652785351313,62.462986208331216,62.620319631311119,62.777653054291022,62.934986477270925],[60.975253362495707,61.13258678547561,61.289920208455513,61.447253631435416,61.604587054415319,61.761920477395222,61.919253900375125,62.076587323355028,62.233920746334931,62.391254169314834,62.548587592294737,62.70592101527464,62.863254438254543,63.020587861234446,63.177921284214349,63.335254707194252],[61.375521592419034,61.532855015398937,61.69018843837884,61.847521861358743,62.004855284338646,62.162188707318549,62.319522130298452,62.476855553278355,62.634188976258258,62.791522399238161,62.948855822218064,63.106189245197967,63.26352266817787,63.420856091157773,63.578189514137676,63.73552293711758],[61.775789822342354,61.933123245322257,62.09045666830216,62.247790091282063,62.405123514261966,62.562456937241869,62.719790360221772,62.877123783201675,63.034457206181578,63.191790629161481,63.349124052141384,63.506457475121287,63.66379089810119,63.821124321081093,63.978457744060997,64.135791167040892],[62.176058052265681,62.333391475245584,62.490724898225487,62.64805832120539,62.805391744185293,62.962725167165196,63.120058590145099,63.277392013125002,63.434725436104905,63.592058859084808,63.749392282064711,63.906725705044614,64.06405912802451,64.221392551004413,64.378725973984317,64.53605939696422],[62.576326282189008,62.733659705168911,62.890993128148814,63.048326551128717,63.20565997410862,63.362993397088523,63.520326820068426,63.677660243048329,63.834993666028232,63.992327089008135,64.149660511988031,64.306993934967934,64.464327357947838,64.621660780927741,64.778994203907644,64.936327626887547],[62.976594512112335,63.133927935092238,63.291261358072141,63.448594781052044,63.605928204031947,63.76326162701185,63.920595049991753,64.077928472971649,64.235261895951552,64.392595318931455,64.549928741911359,64.707262164891262,64.864595587871165,65.021929010851068,65.179262433830971,65.336595856810874],[63.376862742035662,63.534196165015565,63.691529587995468,63.848863010975371,64.006196433955267,64.16352985693517,64.320863279915073,64.478196702894977,64.63553012587488,64.792863548854783,64.950196971834686,65.107530394814589,65.264863817794492,65.422197240774395,65.579530663754298,65.736864086734201],[63.777130971958989,63.934464394938892,64.091797817918788,64.249131240898691,64.406464663878594,64.563798086858498,64.721131509838401,64.878464932818304,65.035798355798207,65.19313177877811,65.350465201758013,65.507798624737916,65.665132047717819,65.822465470697722,65.979798893677625,66.137132316657528],[64.177399201882309,64.334732624862212,64.492066047842115,64.649399470822019,64.806732893801922,64.964066316781825,65.121399739761728,65.278733162741631,65.436066585721534,65.593400008701437,65.75073343168134,65.908066854661243,66.065400277641146,66.222733700621049,66.380067123600952,66.537400546580855],[64.577667431805637,64.73500085478554,64.892334277765443,65.049667700745346,65.207001123725249,65.364334546705152,65.521667969685055,65.679001392664958,65.836334815644861,65.993668238624764,66.151001661604667,66.30833508458457,66.465668507564473,66.623001930544376,66.780335353524279,66.937668776504182],[64.977935661728964,65.135269084708867,65.29260250768877,65.449935930668673,65.607269353648576,65.764602776628479,65.921936199608382,66.079269622588285,66.236603045568188,66.393936468548091,66.551269891527994,66.708603314507897,66.8659367374878,67.023270160467703,67.180603583447606,67.337937006427509],[65.378203891652291,65.535537314632194,65.692870737612097,65.850204160592,66.007537583571903,66.164871006551806,66.322204429531709,66.479537852511612,66.636871275491515,66.794204698471418,66.951538121451321,67.108871544431224,67.266204967411127,67.42353839039103,67.580871813370933,67.738205236350836],[65.778472121575618,65.935805544555521,66.093138967535424,66.250472390515327,66.40780581349523,66.565139236475133,66.722472659455036,66.879806082434939,67.037139505414842,67.194472928394745,67.351806351374648,67.509139774354551,67.666473197334454,67.823806620314357,67.981140043294261,68.138473466274164],[66.178740351498945,66.336073774478848,66.493407197458751,66.650740620438654,66.808074043418557,66.96540746639846,67.122740889378363,67.280074312358266,67.437407735338169,67.594741158318072,67.752074581297975,67.909408004277878,68.066741427257782,68.224074850237685,68.381408273217588,68.538741696197491],[66.579008581422272,66.736342004402175,66.893675427382078,67.051008850361981,67.208342273341884,67.365675696321787,67.52300911930169,67.680342542281593,67.837675965261496,67.9950093882414,68.152342811221303,68.309676234201206,68.467009657181109,68.624343080161012,68.781676503140915,68.939009926120818],[66.979276811345599,67.136610234325502,67.293943657305405,67.451277080285308,67.608610503265211,67.765943926245114,67.923277349225017,68.080610772204921,68.237944195184824,68.395277618164727,68.55261104114463,68.709944464124533,68.867277887104436,69.024611310084339,69.181944733064242,69.339278156044145],[67.379545041268926,67.536878464248829,67.694211887228732,67.851545310208635,68.008878733188538,68.166212156168442,68.323545579148345,68.480879002128248,68.638212425108151,68.795545848088054,68.952879271067957,69.11021269404786,69.267546117027763,69.424879540007666,69.582212962987569,69.739546385967472],[67.779813271192253,67.937146694172156,68.09448011715206,68.251813540131963,68.409146963111866,68.566480386091769,68.723813809071672,68.881147232051575,69.038480655031478,69.195814078011381,69.353147500991284,69.510480923971187,69.66781434695109,69.825147769930993,69.982481192910896,70.139814615890799],[68.180081501115581,68.337414924095484,68.494748347075387,68.65208177005529,68.809415193035193,68.966748616015096,69.124082038994999,69.281415461974902,69.438748884954805,69.596082307934708,69.753415730914611,69.910749153894514,70.068082576874417,70.22541599985432,70.382749422834223,70.540082845814126],[68.580349731038908,68.737683154018811,68.895016576998714,69.052349999978617,69.20968342295852,69.367016845938423,69.524350268918326,69.681683691898229,69.839017114878132,69.996350537858035,70.153683960837938,70.311017383817841,70.468350806797744,70.625684229777647,70.78301765275755,70.940351075737453],[68.980617960962235,69.137951383942138,69.295284806922041,69.452618229901944,69.609951652881847,69.76728507586175,69.924618498841653,70.081951921821556,70.239285344801459,70.396618767781362,70.553952190761265,70.711285613741168,70.868619036721071,71.025952459700974,71.183285882680877,71.34061930566078],[69.380886190885562,69.538219613865465,69.695553036845368,69.852886459825271,70.010219882805174,70.167553305785077,70.32488672876498,70.482220151744883,70.639553574724786,70.796886997704689,70.954220420684592,71.111553843664495,71.268887266644398,71.426220689624301,71.583554112604205,71.740887535584108],[69.781154420808889,69.938487843788792,70.095821266768695,70.253154689748598,70.410488112728501,70.567821535708404,70.725154958688307,70.88248838166821,71.039821804648113,71.197155227628016,71.354488650607919,71.511822073587823,71.669155496567726,71.826488919547629,71.983822342527532,72.141155765507435],[70.181422650732216,70.338756073712119,70.496089496692022,70.653422919671925,70.810756342651828,70.968089765631731,71.125423188611634,71.282756611591537,71.44009003457144,71.597423457551344,71.754756880531247,71.91209030351115,72.069423726491053,72.226757149470956,72.384090572450859,72.541423995430762],[70.581690880655543,70.739024303635446,70.896357726615349,71.053691149595252,71.211024572575155,71.368357995555058,71.525691418534961,71.683024841514865,71.840358264494768,71.997691687474671,72.155025110454574,72.312358533434477,72.46969195641438,72.627025379394283,72.784358802374186,72.941692225354089],[70.98195911057887,71.139292533558773,71.296625956538676,71.453959379518579,71.611292802498483,71.768626225478386,71.925959648458289,72.083293071438192,72.240626494418095,72.397959917397998,72.555293340377901,72.712626763357804,72.869960186337707,73.02729360931761,73.184627032297513,73.341960455277416],[71.382227340502197,71.5395607634821,71.696894186462004,71.854227609441907,72.01156103242181,72.168894455401713,72.326227878381616,72.483561301361519,72.640894724341422,72.798228147321325,72.955561570301228,73.112894993281131,73.270228416261034,73.427561839240937,73.58489526222084,73.742228685200743]],\"type\":\"surface\",\"name\":\"pred_surface\",\"cauto\":true,\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n:::\n\n## {.smaller}\n\n#### `m7`: Interaction between two numerical predictors \n\n::: panel-tabset\n\n## m7\n\n$$\\text{m7: tc_diff} = \\beta_0 + \\beta_1\\text{age} + \\beta_2\\text{income} + \\beta_4\\text{age}\\times \\text{income}+\\epsilon $$\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm7 <- lm(tc_diff ~ age*income, nes)\ncoef(m7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(Intercept)         age      income  age:income \n38.22449671  0.29406374 -0.78888643  0.01993978 \n```\n\n\n:::\n:::\n\n\n\n## {{< fa table >}}-Table\n\n\n\n\n```{.r .cell-code}\nhtmlreg(list( m6, m7))\n```\n\n<table class=\"texreg\" style=\"margin: 10px auto;border-collapse: collapse;border-spacing: 0px;caption-side: bottom;color: #000000;border-top: 2px solid #000000;\">\n<caption>Statistical models</caption>\n<thead>\n<tr>\n<th style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 1</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 2</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">(Intercept)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">33.20<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">38.22<sup>&#42;&#42;&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(3.35)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(5.80)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">age</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.40<sup>&#42;&#42;&#42;</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.29<sup>&#42;</sup></td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.06)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.12)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">income</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.16</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">-0.79</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.29)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.94)</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">age:income</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.02</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">(0.02)</td>\n</tr>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.05</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">Adj. R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">0.04</td>\n</tr>\n<tr style=\"border-bottom: 2px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">Num. obs.</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1049</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1049</td>\n</tr>\n</tbody>\n<tfoot>\n<tr>\n<td style=\"font-size: 0.8em;\" colspan=\"3\"><sup>&#42;&#42;&#42;</sup>p &lt; 0.001; <sup>&#42;&#42;</sup>p &lt; 0.01; <sup>&#42;</sup>p &lt; 0.05</td>\n</tr>\n</tfoot>\n</table>\n\n\n\n\n## {{< fa code >}}-Figure\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create Prediction Data Frame\n\npred_df7 <- expand_grid(\n  age = seq(19, 95,\n            by = 4),\n  # Hold income constant at mean value\n  income = seq(min(nes$income, na.rm = T),\n            max(nes$income, na.rm=T),\n            length.out = 16)\n)\n\n\n\npred_df7  <- cbind(\n  pred_df7 ,\n  fit = predict(m7, pred_df7 )\n)\n\n# Produce figure\n\n# Marginal effect of age at min, median, and max values of income\npred_df7 %>%\n  mutate(\n    income_at = case_when(\n      income == 1 ~ \"01\",\n      income == median(nes$income,na.rm=T) ~ \"05\",\n      income == 16 ~ \"16\",\n      T ~ NA_character_\n    )\n  ) %>% \n  filter(!is.na(income_at)) %>% \n  ggplot(aes(age, fit,\n             ))+\n  # Add raw data\n  geom_point(\n    data = nes %>% \n      filter(!is.na(income)) %>%\n      filter(!is.na(age))\n      ,\n    aes(x= age,\n        y= tc_diff),\n    alpha = .1,\n    size = .2\n  ) +\n  geom_point(aes(col =income_at,\n                 group = income_at))+\n  geom_line(aes(col =income_at,\n                group = income_at)\n            ) -> fig_tc_m7_age\n\n# Marginal effect of income at min, median, and max values of age\npred_df7 %>%\n  mutate(\n    age_at = case_when(\n      age == min(nes$age, na.rm=T) ~ \"19\",\n      age == 47 ~ \"47\", # close enough ...\n      age ==  max(nes$age, na.rm=T) ~ \"95\",\n      T ~ NA_character_\n    )\n  ) %>% \n  filter(!is.na(age_at)) %>% \n  ggplot(aes(income, fit,\n             ))+\n  # Add raw data\n  geom_point(\n    data = nes %>% \n      filter(!is.na(income)) %>%\n      filter(!is.na(age))\n      ,\n    aes(x= income,\n        y= tc_diff),\n    alpha = .1,\n    size = .2\n  ) +\n  geom_point(aes(col =age_at,\n                 group = age_at))+\n  geom_line(aes(col =age_at,\n                group = age_at)\n            ) -> fig_tc_m7_income\n\n\nfig_tc_m7 <- ggpubr::ggarrange(fig_tc_m7_age, \n                               fig_tc_m7_income,\n                               legend = \"bottom\")\n```\n:::\n\n\n\n## {{< fa chart-line >}}-m7\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/m7fig-1.png){width=960}\n:::\n:::\n\n\n\n## {{< fa chart-line >}}-m7 in 3d\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-d94f797b0d02c5b96553\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d94f797b0d02c5b96553\">{\"x\":{\"visdat\":{\"542912fea086\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"542912fea086\",\"attrs\":{\"542912fea086\":{\"x\":{},\"y\":{},\"z\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\",\"mode\":\"markers\",\"size\":5,\"inherit\":true},\"542912fea086.1\":{\"x\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],\"y\":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],\"z\":[[43.401677253088558,42.991646705503207,42.58161615791785,42.1715856103325,41.761555062747142,41.351524515161778,40.941493967576427,40.53146341999107,40.12143287240572,39.711402324820362,39.301371777235005,38.891341229649655,38.481310682064297,38.07128013447894,37.661249586893589,37.251219039308232],[43.715680778215514,43.325590014178239,42.935499250140957,42.545408486103682,42.1553177220664,41.76522695802911,41.375136193991835,40.985045429954553,40.594954665917278,40.204863901879996,39.814773137842714,39.424682373805439,39.034591609768157,38.644500845730875,38.254410081693599,37.86431931765631],[44.029684303342478,43.659533322853278,43.289382342364071,42.919231361874871,42.549080381385657,42.17892940089645,41.808778420407251,41.438627439918044,41.068476459428844,40.698325478939637,40.32817449845043,39.95802351796123,39.587872537472023,39.217721556982816,38.847570576493609,38.477419596004403],[44.343687828469442,43.993476631528317,43.643265434587185,43.293054237646061,42.942843040704922,42.59263184376379,42.242420646822666,41.892209449881534,41.541998252940409,41.191787055999278,40.841575859058146,40.491364662117022,40.14115346517589,39.790942268234751,39.440731071293627,39.090519874352495],[44.657691353596398,44.327419940203349,43.997148526810292,43.666877113417243,43.33660570002418,43.006334286631123,42.676062873238074,42.345791459845017,42.015520046451968,41.685248633058912,41.354977219665855,41.024705806272806,40.694434392879749,40.364162979486686,40.033891566093637,39.70362015270058],[44.971694878723362,44.661363248878388,44.351031619033407,44.040699989188433,43.730368359343444,43.420036729498463,43.109705099653489,42.799373469808508,42.489041839963534,42.178710210118552,41.868378580273571,41.558046950428597,41.247715320583609,40.937383690738628,40.627052060893654,40.316720431048672],[45.285698403850326,44.995306557553427,44.704914711256521,44.414522864959622,44.124131018662709,43.833739172365803,43.543347326068904,43.252955479771998,42.962563633475099,42.672171787178193,42.381779940881287,42.091388094584389,41.800996248287476,41.51060440199057,41.220212555693671,40.929820709396765],[45.599701928977282,45.329249866228459,45.058797803479628,44.788345740730797,44.517893677981967,44.247441615233136,43.976989552484312,43.706537489735481,43.436085426986658,43.165633364237827,42.895181301488996,42.624729238740166,42.354277175991335,42.083825113242504,41.813373050493681,41.54292098774485],[45.913705454104246,45.663193174903498,45.412680895702742,45.162168616501987,44.911656337301231,44.661144058100476,44.410631778899727,44.160119499698972,43.909607220498224,43.659094941297468,43.408582662096713,43.158070382895957,42.907558103695202,42.657045824494446,42.406533545293698,42.156021266092942],[46.22770897923121,45.997136483578537,45.766563987925856,45.535991492273176,45.305418996620496,45.074846500967816,44.844274005315143,44.613701509662462,44.383129014009789,44.152556518357109,43.921984022704422,43.691411527051748,43.460839031399068,43.230266535746388,42.999694040093715,42.769121544441035],[46.541712504358166,46.331079792253568,46.120447080148963,45.909814368044358,45.699181655939753,45.488548943835148,45.277916231730551,45.067283519625946,44.856650807521348,44.646018095416743,44.435385383312131,44.224752671207533,44.014119959102928,43.803487246998323,43.592854534893725,43.38222182278912],[46.85571602948513,46.665023100928607,46.474330172372078,46.283637243815548,46.092944315259018,45.902251386702488,45.711558458145966,45.520865529589436,45.330172601032913,45.139479672476384,44.948786743919847,44.758093815363324,44.567400886806794,44.376707958250265,44.186015029693742,43.995322101137212],[47.169719554612094,46.998966409603646,46.828213264595192,46.657460119586737,46.486706974578283,46.315953829569828,46.145200684561381,45.974447539552926,45.803694394544479,45.632941249536017,45.462188104527563,45.291434959519115,45.120681814510661,44.949928669502206,44.779175524493759,44.608422379485305],[47.48372307973905,47.332909718278678,47.182096356818299,47.03128299535792,46.88046963389754,46.729656272437161,46.578842910976789,46.42802954951641,46.277216188056038,46.126402826595651,45.975589465135272,45.8247761036749,45.67396274221452,45.523149380754141,45.372336019293769,45.22152265783339],[47.797726604866014,47.666853026953717,47.535979449041413,47.405105871129109,47.274232293216805,47.143358715304501,47.012485137392204,46.8816115594799,46.750737981567603,46.619864403655292,46.488990825742988,46.358117247830691,46.227243669918387,46.096370092006083,45.965496514093786,45.834622936181475],[48.111730129992978,48.000796335628756,47.889862541264527,47.778928746900299,47.66799495253607,47.557061158171841,47.446127363807619,47.335193569443391,47.224259775079169,47.113325980714933,47.002392186350704,46.891458391986482,46.780524597622254,46.669590803258025,46.558657008893803,46.447723214529567],[48.425733655119942,48.334739644303795,48.243745633487634,48.152751622671488,48.061757611855334,47.970763601039181,47.879769590223034,47.788775579406881,47.697781568590727,47.606787557774574,47.51579354695842,47.424799536142274,47.33380552532612,47.242811514509967,47.151817503693813,47.06082349287766],[48.739737180246898,48.668682952978827,48.597628725710742,48.52657449844267,48.455520271174592,48.384466043906514,48.313411816638443,48.242357589370364,48.171303362102286,48.100249134834208,48.029194907566129,47.958140680298058,47.88708645302998,47.816032225761901,47.744977998493823,47.673923771225745],[49.053740705373862,49.002626261653866,48.951511817933856,48.90039737421386,48.849282930493857,48.798168486773854,48.747054043053858,48.695939599333855,48.644825155613852,48.593710711893848,48.542596268173845,48.491481824453849,48.440367380733846,48.389252937013836,48.33813849329384,48.287024049573837],[49.367744230500826,49.336569570328905,49.30539491015697,49.274220249985049,49.243045589813121,49.211870929641194,49.180696269469273,49.149521609297345,49.118346949125417,49.087172288953489,49.055997628781562,49.024822968609641,48.993648308437713,48.962473648265778,48.931298988093857,48.90012432792193],[49.681747755627782,49.670512879003937,49.659278002380077,49.648043125756232,49.636808249132379,49.625573372508526,49.614338495884681,49.603103619260821,49.591868742636976,49.580633866013123,49.569398989389271,49.558164112765425,49.546929236141573,49.535694359517713,49.524459482893867,49.513224606270015],[49.995751280754746,50.004456187678976,50.013161094603191,50.021866001527421,50.030570908451644,50.039275815375866,50.047980722300096,50.056685629224312,50.065390536148541,50.074095443072764,50.082800349996987,50.091505256921216,50.100210163845432,50.108915070769655,50.117619977693884,50.126324884618107],[50.30975480588171,50.338399496354015,50.367044186826305,50.39568887729861,50.424333567770908,50.452978258243206,50.481622948715511,50.510267639187802,50.538912329660107,50.567557020132405,50.596201710604703,50.624846401077008,50.653491091549299,50.682135782021597,50.710780472493902,50.739425162966199],[50.623758331008666,50.672342805029047,50.720927279049413,50.769511753069793,50.818096227090166,50.866680701110539,50.915265175130919,50.963849649151285,51.012434123171666,51.061018597192039,51.109603071212412,51.158187545232792,51.206772019253158,51.255356493273531,51.303940967293912,51.352525441314285],[50.93776185613563,51.006286113704085,51.074810371272527,51.143334628840982,51.211858886409431,51.280383143977879,51.348907401546334,51.417431659114776,51.485955916683231,51.55448017425168,51.623004431820128,51.691528689388576,51.760052946957025,51.828577204525473,51.897101462093929,51.965625719662377],[51.251765381262594,51.340229422379124,51.428693463495641,51.517157504612172,51.605621545728695,51.694085586845219,51.782549627961743,51.871013669078266,51.959477710194797,52.047941751311321,52.136405792427844,52.224869833544368,52.313333874660891,52.401797915777415,52.490261956893946,52.578725998010469],[51.56576890638955,51.674172731054156,51.782576555718748,51.890980380383354,51.999384205047953,52.107788029712552,52.216191854377151,52.324595679041749,52.432999503706355,52.541403328370954,52.649807153035553,52.758210977700152,52.866614802364751,52.97501862702935,53.083422451693956,53.191826276358547],[51.879772431516514,52.008116039729195,52.136459647941862,52.264803256154543,52.393146864367218,52.521490472579892,52.649834080792566,52.77817768900524,52.906521297217921,53.034864905430595,53.163208513643269,53.291552121855943,53.419895730068617,53.548239338281292,53.676582946493973,53.80492655470664],[52.193775956643478,52.342059348404234,52.490342740164976,52.638626131925733,52.786909523686482,52.935192915447232,53.083476307207981,53.23175969896873,53.380043090729487,53.528326482490236,53.676609874250978,53.824893266011735,53.973176657772484,54.121460049533233,54.26974344129399,54.418026833054732],[52.507779481770434,52.676002657079266,52.844225832388084,53.012449007696915,53.18067218300574,53.348895358314564,53.517118533623389,53.685341708932214,53.853564884241045,54.02178805954987,54.190011234858687,54.358234410167519,54.526457585476344,54.694680760785168,54.862903936093993,55.031127111402817],[52.821783006897398,53.009945965754305,53.198108924611198,53.386271883468105,53.574434842325005,53.762597801181904,53.950760760038804,54.138923718895704,54.327086677752611,54.515249636609511,54.703412595466403,54.89157555432331,55.07973851318021,55.26790147203711,55.45606443089401,55.64422738975091],[53.135786532024362,53.343889274429344,53.551992016834312,53.760094759239294,53.968197501644269,54.176300244049244,54.384402986454219,54.592505728859194,54.800608471264177,55.008711213669152,55.21681395607412,55.424916698479102,55.633019440884077,55.841122183289052,56.049224925694027,56.257327668099002],[53.449790057151318,53.677832583104376,53.905875109057419,54.133917635010476,54.361960160963527,54.590002686916577,54.818045212869627,55.046087738822678,55.274130264775735,55.502172790728785,55.730215316681829,55.958257842634886,56.186300368587936,56.414342894540987,56.642385420494037,56.870427946447087],[53.763793582278282,54.011775891779408,54.259758201280533,54.507740510781666,54.755722820282791,55.00370512978391,55.251687439285043,55.499669748786168,55.747652058287301,55.995634367788419,56.243616677289545,56.491598986790677,56.739581296291803,56.987563605792921,57.235545915294054,57.48352822479518],[54.077797107405246,54.345719200454447,54.613641293503647,54.881563386552855,55.149485479602056,55.41740757265125,55.685329665700458,55.953251758749659,56.221173851798866,56.48909594484806,56.757018037897261,57.024940130946469,57.29286222399567,57.560784317044863,57.828706410094071,58.096628503143272],[54.391800632532203,54.679662509129479,54.967524385726755,55.255386262324038,55.543248138921314,55.831110015518583,56.118971892115866,56.406833768713142,56.694695645310425,56.982557521907694,57.27041939850497,57.558281275102253,57.846143151699529,58.134005028296798,58.421866904894081,58.709728781491357],[54.705804157659166,55.013605817804518,55.321407477949869,55.629209138095227,55.937010798240578,56.244812458385923,56.552614118531281,56.860415778676632,57.168217438821991,57.476019098967335,57.783820759112686,58.091622419258044,58.399424079403396,58.70722573954874,59.015027399694098,59.322829059839449],[55.01980768278613,55.347549126479556,55.675290570172983,56.003032013866417,56.330773457559843,56.658514901253263,56.986256344946696,57.313997788640123,57.641739232333556,57.969480676026976,58.297222119720402,58.624963563413836,58.952705007107255,59.280446450800682,59.608187894494115,59.935929338187542],[55.333811207913087,55.681492435154588,56.02917366239609,56.376854889637599,56.724536116879101,57.072217344120595,57.419898571362104,57.767579798603606,58.115261025845108,58.462942253086609,58.810623480328111,59.15830470756962,59.505985934811115,59.853667162052616,60.201348389294125,60.549029616535627],[55.64781473304005,56.015435743829627,56.383056754619204,56.750677765408788,57.118298776198365,57.485919786987935,57.853540797777519,58.221161808567096,58.588782819356673,58.95640383014625,59.324024840935827,59.691645851725411,60.059266862514981,60.426887873304558,60.794508884094142,61.162129894883712],[55.961818258167014,56.349379052504666,56.736939846842319,57.124500641179978,57.51206143551763,57.899622229855275,58.287183024192935,58.674743818530587,59.062304612868239,59.449865407205891,59.837426201543543,60.224986995881203,60.612547790218848,61.0001085845565,61.387669378894159,61.775230173231805],[56.275821783293971,56.683322361179698,57.090822939065426,57.49832351695116,57.905824094836888,58.313324672722608,58.720825250608343,59.12832582849407,59.535826406379798,59.943326984265525,60.350827562151252,60.75832814003698,61.165828717922707,61.573329295808435,61.980829873694169,62.38833045157989],[56.589825308420934,57.017265669854737,57.44470603128854,57.87214639272235,58.299586754156152,58.727027115589948,59.154467477023758,59.58190783845756,60.009348199891363,60.436788561325166,60.864228922758969,61.291669284192771,61.719109645626574,62.146550007060377,62.573990368494186,63.001430729927982],[56.903828833547898,57.351208978529776,57.798589123511654,58.245969268493539,58.69334941347541,59.140729558457288,59.588109703439173,60.035489848421051,60.482869993402929,60.930250138384807,61.377630283366685,61.825010428348563,62.272390573330441,62.719770718312319,63.167150863294196,63.614531008276074],[57.217832358674855,57.685152287204808,58.152472215734761,58.619792144264721,59.087112072794667,59.554432001324621,60.021751929854581,60.489071858384534,60.956391786914487,61.423711715444441,61.891031643974394,62.358351572504347,62.8256715010343,63.292991429564253,63.760311358094206,64.22763128662416],[57.531835883801818,58.019095595879847,58.506355307957875,58.993615020035911,59.480874732113932,59.968134444191961,60.455394156269996,60.942653868348017,61.429913580426053,61.917173292504081,62.40443300458211,62.891692716660138,63.378952428738167,63.866212140816195,64.353471852894231,64.840731564972259],[57.845839408928782,58.353038904554886,58.86023840018099,59.3674378958071,59.874637391433197,60.381836887059301,60.889036382685411,61.396235878311508,61.903435373937619,62.410634869563722,62.917834365189826,63.42503386081593,63.932233356442033,64.439432852068137,64.946632347694248,65.453831843320344],[58.159842934055739,58.686982213229918,59.214121492404097,59.741260771578283,60.268400050752454,60.795539329926633,61.322678609100819,61.849817888274991,62.376957167449177,62.904096446623356,63.431235725797528,63.958375004971714,64.485514284145893,65.012653563320072,65.539792842494251,66.06693212166843],[58.473846459182703,59.020925521904957,59.568004584627211,60.115083647349472,60.662162710071719,61.209241772793973,61.756320835516235,62.303399898238482,62.850478960960743,63.397558023682997,63.944637086405244,64.491716149127512,65.038795211849759,65.585874274572006,66.132953337294268,66.680032400016515],[58.787849984309666,59.354868830579996,59.921887676850325,60.488906523120662,61.055925369390984,61.622944215661313,62.18996306193165,62.756981908201972,63.324000754472308,63.891019600742638,64.458038447012967,65.025057293283297,65.592076139553626,66.159094985823955,66.726113832094285,67.293132678364614],[59.101853509436623,59.688812139255027,60.275770769073432,60.862729398891844,61.449688028710241,62.036646658528646,62.623605288347058,63.210563918165455,63.797522547983867,64.384481177802272,64.971439807620669,65.558398437439081,66.145357067257478,66.73231569707589,67.319274326894288,67.906232956712699],[59.415857034563587,60.022755447930066,60.629653861296546,61.236552274663033,61.843450688029506,62.450349101395986,63.057247514762473,63.664145928128946,64.271044341495426,64.877942754861905,65.484841168228385,66.091739581594865,66.698637994961345,67.305536408327825,67.912434821694305,68.519333235060785],[59.72986055969055,60.356698756605105,60.983536953519661,61.610375150434223,62.237213347348771,62.864051544263326,63.490889741177888,64.117727938092443,64.744566135006991,65.371404331921553,65.998242528836101,66.625080725750664,67.251918922665212,67.878757119579774,68.505595316494322,69.132433513408884],[60.043864084817507,60.690642065280137,61.337420045742768,61.984198026205405,62.630976006668028,63.277753987130659,63.924531967593296,64.571309948055926,65.218087928518557,65.864865908981187,66.511643889443818,67.158421869906448,67.805199850369078,68.451977830831709,69.098755811294339,69.745533791756969],[60.357867609944471,61.024585373955176,61.691303137965882,62.358020901976595,63.024738665987293,63.691456429997999,64.358174194008711,65.02489195801941,65.691609722030122,66.358327486040821,67.025045250051534,67.691763014062232,68.358480778072945,69.025198542083643,69.691916306094356,70.358634070105055],[60.671871135071434,61.358528682630215,62.045186230188996,62.731843777747784,63.418501325306558,64.105158872865331,64.791816420424126,65.478473967982907,66.165131515541688,66.851789063100469,67.53844661065925,68.225104158218031,68.911761705776811,69.598419253335578,70.285076800894373,70.971734348453154],[60.985874660198391,61.692471991305247,62.399069322412103,63.105666653518966,63.812263984625815,64.518861315732664,65.225458646839527,65.932055977946391,66.63865330905324,67.345250640160103,68.051847971266952,68.758445302373815,69.465042633480664,70.171639964587513,70.878237295694376,71.584834626801239],[61.299878185325355,62.026415299980286,62.752952414635217,63.479489529290156,64.20602664394508,64.932563758600011,65.659100873254943,66.385637987909874,67.112175102564805,67.838712217219737,68.565249331874668,69.291786446529599,70.01832356118453,70.744860675839462,71.471397790494393,72.197934905149324],[61.613881710452318,62.360358608655325,63.106835506858332,63.853312405061338,64.599789303264345,65.346266201467344,66.092743099670358,66.839219997873357,67.585696896076371,68.332173794279385,69.078650692482384,69.825127590685398,70.571604488888397,71.318081387091397,72.06455828529441,72.81103518349741],[61.927885235579275,62.694301917330357,63.460718599081439,64.227135280832528,64.993551962583609,65.759968644334677,66.526385326085773,67.292802007836841,68.059218689587937,68.825635371339018,69.592052053090086,70.358468734841182,71.124885416592264,71.891302098343331,72.657718780094427,73.424135461845495],[62.241888760706239,63.028245226005396,63.814601691304553,64.60095815660371,65.387314621902874,66.173671087202024,66.960027552501188,67.746384017800338,68.532740483099502,69.319096948398652,70.105453413697802,70.891809878996966,71.678166344296116,72.46452280959528,73.250879274894444,74.037235740193594],[62.555892285833202,63.362188534680435,64.16848478352766,64.974781032374906,65.781077281222139,66.587373530069357,67.393669778916603,68.199966027763821,69.006262276611068,69.8125585254583,70.618854774305518,71.425151023152765,72.231447271999983,73.037743520847215,73.844039769694461,74.65033601854168],[62.869895810960159,63.696131843355467,64.522367875750774,65.348603908146089,66.174839940541389,67.00107597293669,67.827312005332004,68.653548037727305,69.479784070122619,70.306020102517934,71.132256134913234,71.958492167308549,72.784728199703849,73.61096423209915,74.437200264494464,75.263436296889765],[63.183899336087123,64.030075152030506,64.876250967973888,65.722426783917271,66.568602599860654,67.414778415804037,68.260954231747419,69.107130047690802,69.953305863634185,70.799481679577568,71.64565749552095,72.491833311464333,73.338009127407716,74.184184943351099,75.030360759294481,75.876536575237864],[63.497902861214087,64.364018460705552,65.230134060197003,66.096249659688468,66.962365259179919,67.828480858671369,68.694596458162835,69.560712057654285,70.426827657145751,71.292943256637201,72.159058856128667,73.025174455620132,73.891290055111583,74.757405654603033,75.623521254094499,76.489636853585949],[63.811906386341043,64.697961769380584,65.584017152420103,66.47007253545965,67.356127918499169,68.242183301538702,69.12823868457825,70.014294067617769,70.900349450657316,71.786404833696835,72.672460216736368,73.558515599775916,74.444570982815435,75.330626365854968,76.216681748894501,77.102737131934035],[64.125909911468,65.031905078055615,65.937900244643217,66.843895411230832,67.749890577818434,68.655885744406049,69.561880910993665,70.467876077581266,71.373871244168882,72.279866410756483,73.185861577344085,74.0918567439317,74.997851910519302,75.903847077106917,76.809842243694519,77.715837410282134],[64.439913436594964,65.365848386730661,66.291783336866331,67.217718287002029,68.143653237137698,69.069588187273382,69.99552313740908,70.92145808754475,71.847393037680447,72.773327987816117,73.699262937951801,74.625197888087484,75.551132838223168,76.477067788358852,77.403002738494536,78.328937688630219],[64.753916961721927,65.699791695405693,66.645666429089445,67.591541162773211,68.537415896456963,69.483290630140715,70.429165363824481,71.375040097508233,72.320914831191999,73.266789564875751,74.212664298559517,75.158539032243269,76.104413765927035,77.050288499610787,77.996163233294553,78.942037966978305],[65.067920486848891,66.033735004080725,66.999549521312559,67.965364038544394,68.931178555776228,69.896993073008062,70.862807590239896,71.82862210747173,72.794436624703565,73.760251141935399,74.726065659167233,75.691880176399067,76.657694693630901,77.623509210862721,78.58932372809457,79.555138245326404],[65.38192401197584,66.367678312755757,67.353432613535659,68.339186914315576,69.324941215095478,70.310695515875395,71.296449816655297,72.282204117435214,73.26795841821513,74.253712718995033,75.239467019774935,76.225221320554851,77.210975621334754,78.196729922114656,79.182484222894573,80.168238523674489],[65.695927537102818,66.701621621430803,67.707315705758788,68.713009790086772,69.718703874414757,70.724397958742742,71.730092043070727,72.735786127398711,73.741480211726696,74.747174296054681,75.752868380382665,76.75856246471065,77.764256549038635,78.769950633366605,79.775644717694604,80.781338802022574],[66.009931062229768,67.035564930105835,68.061198797981888,69.086832665857955,70.112466533734008,71.138100401610075,72.163734269486127,73.189368137362194,74.215002005238262,75.240635873114314,76.266269740990367,77.291903608866434,78.317537476742487,79.34317134461854,80.368805212494607,81.39443908037066],[66.323934587356732,67.369508238780867,68.415081890205002,69.460655541629137,70.506229193053272,71.551802844477407,72.597376495901543,73.642950147325678,74.688523798749813,75.734097450173948,76.779671101598083,77.825244753022218,78.870818404446354,79.916392055870475,80.961965707294624,82.007539358718745],[66.637938112483695,67.703451547455913,68.768964982428116,69.834478417400334,70.899991852372537,71.965505287344754,73.031018722316958,74.096532157289175,75.162045592261379,76.227559027233596,77.293072462205799,78.358585897178017,79.42409933215022,80.489612767122424,81.555126202094641,82.620639637066844],[66.951941637610659,68.037394856130945,69.12284807465123,70.208301293171516,71.293754511691802,72.379207730212087,73.464660948732373,74.550114167252659,75.635567385772944,76.72102060429323,77.806473822813501,78.891927041333801,79.977380259854087,81.062833478374358,82.148286696894658,83.23373991541493],[67.265945162737609,68.371338164805977,69.47673116687433,70.582124168942698,71.687517171011052,72.79291017307942,73.898303175147774,75.003696177216142,76.109089179284496,77.214482181352864,78.319875183421217,79.425268185489585,80.530661187557939,81.636054189626293,82.741447191694661,83.846840193763015]],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"surface\",\"alpha\":0.65000000000000002,\"name\":\"pred_surface\",\"cauto\":true,\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"income\"},\"yaxis\":{\"title\":\"age\"},\"zaxis\":{\"title\":\"tc_diff\"}},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\".hideLegend\":true,\"data\":[{\"x\":[3,6,6,8,10,6,10,1,4,3,7,6,2,4,7,7,2,9,8,3,13,11,6,9,8,1,11,12,2,4,7,8,6,3,4,10,1,6,5,6,5,6,4,5,4,4,4,1,8,9,9,10,3,9,5,3,4,11,6,1,2,10,4,6,4,4,12,5,11,11,6,10,5,12,8,3,4,7,11,9,5,11,11,2,9,3,1,10,2,4,2,3,9,13,7,4,8,7,4,10,9,3,5,5,2,8,7,3,6,2,2,2,15,9,9,3,9,3,1,8,10,4,4,3,11,3,12,5,9,3,11,5,2,4,4,9,1,6,1,4,6,3,6,3,2,4,10,16,3,3,3,3,3,1,6,3,5,5,7,7,4,10,3,2,14,5,4,5,4,7,1,4,3,5,4,5,12,6,4,2,3,8,13,10,11,1,12,9,6,8,3,6,9,2,2,1,9,1,9,9,4,9,3,9,2,5,8,5,7,10,5,5,7,5,7,8,1,7,7,8,12,4,5,2,2,12,8,8,7,2,4,6,4,10,4,4,10,6,3,9,2,12,4,10,6,8,2,3,3,10,5,2,3,4,9,4,1,3,1,2,1,10,6,3,10,8,7,3,4,9,1,5,8,5,4,9,6,6,2,9,5,5,9,4,3,9,2,4,9,9,3,6,3,6,6,2,1,4,1,10,1,3,9,2,6,6,3,8,9,2,8,15,2,9,5,8,5,4,9,4,10,11,3,3,5,8,8,11,1,5,11,11,6,4,8,7,10,5,2,4,4,7,7,6,1,6,1,4,4,2,8,14,4,3,6,5,5,8,7,4,10,5,10,2,3,11,4,14,3,7,5,4,2,2,11,6,6,4,4,4,3,2,8,7,6,9,7,6,7,2,16,1,3,9,8,2,8,3,8,10,6,4,4,7,3,7,4,11,2,3,3,5,3,4,4,4,6,5,8,10,3,3,2,9,1,1,3,1,9,8,11,3,6,11,12,2,10,2,5,11,11,2,2,4,11,1,2,12,8,2,4,2,8,9,9,7,8,14,5,2,2,4,5,4,3,10,5,6,4,9,6,6,5,5,10,5,9,5,3,2,2,4,7,2,9,2,9,10,3,11,8,4,8,4,1,5,6,9,4,12,4,5,9,10,3,6,9,9,1,6,3,6,6,7,2,8,3,1,2,9,8,1,2,3,2,2,5,3,8,7,5,11,8,5,1,4,1,2,5,6,4,2,6,4,1,3,3,3,4,12,2,3,11,2,2,3,4,2,7,8,3,2,3,2,3,13,12,12,7,8,1,12,9,11,5,1,9,3,12,8,8,10,15,7,4,14,4,1,5,16,11,5,6,4,3,8,3,10,9,5,11,6,5,12,3,1,7,6,3,11,3,3,10,3,7,9,6,3,2,5,6,2,11,11,2,7,7,8,6,1,7,9,4,3,15,9,2,4,4,6,2,10,9,1,4,3,1,10,2,2,4,5,7,4,9,4,2,6,3,6,2,9,11,4,2,6,5,5,12,2,3,2,8,4,5,11,8,7,9,3,3,5,7,3,6,2,8,10,7,1,2,9,4,1,10,6,5,1,2,5,1,8,3,2,5,1,4,2,4,5,7,5,8,1,8,10,6,3,5,10,1,3,3,1,2,3,3,6,4,5,2,3,4,9,1,6,4,10,2,6,7,13,3,3,3,1,4,5,5,4,6,4,3,3,7,12,2,7,10,5,3,8,5,3,13,1,3,7,5,6,2,5,12,4,10,4,4,5,8,1,8,9,1,4,6,15,5,2,3,3,11,12,5,2,6,4,2,9,2,5,8,8,11,9,7,6,7,3,3,9,1,9,4,4,6,11,9,8,3,3,3,8,5,8,7,4,4,3,8,1,4,9,6,5,9,8,3,2,4,2,3,7,6,6,4,7,7,2,6,3,5,9,6,2,2,2,11,11,12,2,4,2,5,9,1,6,5,2,4,9,7,5,6,12,6,7,2,2,11,3,11,4,3,3,3,11,9,3,2,4,8,2,4,4,2,8,6,3,13,9,13,8,2,4,9,5,6,3,3,9,3,4,12,7,2,3,10,5,5,1,7,6,3,2,5,2,4,3,5,2,3,11,1,5,3,7,1,3,6,3,9,4,3,9,3,5,11,2,3,6,5,11,3,6,11,5,2,6,4,5,10,8,5,2,6,6,4,1,6,8,3,2,10,9,6,12,12,9,12,8,10,12,6,3,9,7,1,6,13,8,3,5,3,4,6,3,10,8,2,8,3,3,1,4,5,1,5,6,2,9,1,4,7,2,5,1,3,5,1,3,2,5,8,3,2,3,1,4,6,10,4,8,2,13,4,8,5,9,3,7,8,3,13,10,1,6,7,3,1],\"y\":[46,59,55,66,42,39,65,43,36,45,38,48,55,38,71,61,38,63,43,41,40,61,21,80,34,53,40,52,59,47,46,44,62,26,24,48,52,42,46,56,67,60,64,60,32,57,20,62,19,89,39,32,38,59,61,28,39,40,39,33,49,22,56,71,26,34,28,79,44,63,63,39,60,76,60,41,33,56,55,43,24,48,60,83,29,25,21,64,61,91,63,56,40,61,62,69,52,38,75,67,33,47,59,27,44,60,60,76,30,43,26,81,36,47,37,27,40,80,59,41,50,58,65,48,62,61,65,36,35,26,32,26,37,43,60,71,33,59,31,35,30,25,22,61,53,51,67,43,22,27,64,62,37,30,78,48,71,23,43,70,56,66,25,74,41,37,28,77,56,40,20,58,76,28,43,71,39,19,21,60,34,20,51,64,73,54,50,55,90,68,80,65,27,64,38,34,29,20,28,41,68,76,76,54,78,23,74,43,77,28,62,31,29,67,57,53,24,72,70,28,57,65,52,71,43,60,44,57,35,39,85,62,41,62,35,59,74,28,45,74,37,56,65,42,56,67,65,75,27,80,51,52,38,44,59,44,31,45,43,41,20,66,73,29,55,59,27,51,29,35,58,36,61,41,73,68,61,36,26,57,28,60,49,35,41,43,57,70,59,58,67,32,29,78,39,57,59,56,24,20,53,95,56,37,29,33,48,19,21,42,28,55,66,39,69,34,73,75,51,72,26,34,25,36,24,60,43,35,59,63,57,31,43,63,46,58,54,38,45,34,64,43,46,44,58,25,26,60,53,29,33,45,42,61,53,62,55,62,47,74,56,35,31,73,70,21,26,31,21,40,40,74,56,44,27,56,78,46,39,66,22,58,19,39,65,48,19,75,52,54,39,42,36,34,27,52,31,59,28,52,62,79,29,25,40,33,40,43,30,31,62,80,60,42,42,32,72,34,55,63,29,82,34,55,61,38,46,53,77,67,55,27,50,42,25,84,19,57,77,56,38,27,32,36,24,33,35,66,51,43,60,43,38,33,20,29,27,36,66,30,38,25,69,40,24,58,60,35,52,43,23,35,39,42,60,79,59,44,76,30,44,27,61,64,48,66,64,42,44,51,45,22,63,67,60,61,54,36,27,20,76,31,57,43,44,78,49,23,44,49,72,60,37,42,51,54,62,23,23,65,41,55,24,69,55,67,61,32,27,62,79,36,56,62,55,51,59,26,61,40,59,77,40,24,50,68,70,31,34,37,63,31,63,38,54,48,29,40,60,26,29,62,20,65,36,70,62,38,41,30,57,59,32,44,68,79,46,67,33,33,28,64,22,54,63,63,55,51,64,54,26,71,78,55,32,26,37,53,37,31,66,73,44,36,43,23,69,30,80,30,59,27,58,24,39,69,52,73,26,41,33,61,59,62,73,73,23,52,39,43,42,22,71,26,61,65,65,28,23,68,36,60,52,22,25,24,55,57,51,68,63,73,25,36,21,33,19,27,63,66,28,62,63,60,64,60,39,37,28,92,29,40,50,59,38,67,39,32,41,73,60,52,56,61,26,33,65,38,62,30,42,53,50,20,64,28,35,62,26,63,39,70,31,54,59,53,60,52,51,53,69,22,33,35,76,24,52,65,62,20,32,72,36,38,69,62,61,26,58,29,49,55,39,61,26,48,47,37,35,52,23,62,24,67,34,22,45,30,43,43,57,33,48,55,30,59,54,63,51,64,29,42,36,23,20,55,67,41,52,74,71,30,40,27,29,25,27,52,71,48,20,23,41,71,54,58,28,39,76,27,51,52,27,76,57,34,62,70,71,61,62,63,60,62,25,38,62,55,25,40,27,34,63,58,75,48,55,62,37,53,57,61,41,55,62,27,43,24,64,67,64,34,75,64,54,45,35,24,27,46,69,79,53,41,56,69,35,38,78,56,25,44,24,31,30,60,61,57,48,83,28,38,84,79,57,33,64,44,49,46,61,57,29,62,50,26,27,48,59,34,38,22,54,54,30,47,44,80,56,22,34,56,74,78,28,41,55,65,69,58,60,30,62,33,62,83,29,36,24,48,44,56,22,42,61,72,40,32,84,64,55,55,61,36,71,21,60,52,28,53,41,58,66,73,26,39,24,54,26,41,20,25,26,39,25,61,42,24,66,64,54,43,43,43,38,41,34,60,32,48,34,27,23,23,63,63,74,47,56,39,58,58,54,31,44,53,40,28,63,40,34,44,26,21,43,62,32,56,23,49,41,57,61,38,66,25,65,46,76,30,54,35,47,72,49,27,41,42,65,60,66,62,63,24,80,57,70,70,51,64,70,77,56,60,52,43,63,66,73,23,59,64,66,75,65,38,33,68,57,37,54,66,49,58,41,23,55,36,50],\"z\":[36,20,79,97,85,86,14,95,91,0,50,81,49,0,0,89,8,97,85,15,9,96,93,95,75,1,89,100,12,20,59,99,33,33,6,51,6,49,59,54,94,9,100,65,7,1,66,42,36,92,19,61,74,93,73,76,75,90,71,64,82,92,75,88,66,13,60,70,3,27,90,81,90,50,90,40,84,53,86,1,15,35,40,47,68,72,92,47,53,59,86,90,32,81,80,99,11,30,5,95,0,17,63,85,97,39,41,75,68,30,2,85,27,2,50,16,91,20,84,19,56,91,58,34,79,20,100,91,8,31,63,60,35,71,81,100,99,98,1,87,12,76,37,44,61,2,54,69,38,34,88,88,2,10,40,30,92,56,46,30,29,44,60,96,60,39,100,25,89,38,42,75,75,68,49,92,71,80,42,19,9,39,17,78,1,19,84,89,91,63,31,46,92,91,7,50,4,54,70,52,64,78,92,18,94,72,99,35,91,3,66,10,97,40,61,5,94,80,24,30,83,49,71,80,34,66,40,57,30,51,95,89,83,10,80,31,86,18,78,61,70,71,79,79,79,30,40,97,73,82,53,60,52,36,21,2,15,90,45,2,16,40,95,66,89,24,70,36,30,84,50,43,67,99,89,72,79,11,50,44,40,74,53,34,7,99,99,94,10,0,0,33,49,81,67,25,5,88,11,50,73,78,16,49,62,81,1,58,16,79,31,80,9,1,99,71,72,1,24,73,4,13,97,2,48,78,67,56,75,80,23,31,87,61,60,60,15,84,81,19,86,9,47,33,95,71,100,68,29,6,0,100,60,44,67,5,46,11,91,91,80,78,81,98,65,83,39,67,81,1,41,69,44,5,89,62,79,59,25,8,2,20,58,50,93,21,0,93,0,83,7,98,84,22,13,95,4,78,97,100,59,85,68,8,100,81,9,89,85,98,60,46,39,95,73,71,38,45,96,89,52,52,90,0,1,64,66,99,75,40,85,83,10,65,6,80,62,88,80,70,66,6,35,60,98,87,21,85,93,15,98,100,5,50,18,65,6,27,28,5,89,37,93,17,53,48,84,17,65,95,30,0,27,23,18,91,99,70,5,84,92,95,50,98,100,6,85,12,52,1,31,13,31,87,80,41,99,47,0,16,69,28,33,89,20,100,32,75,44,58,100,87,1,88,68,88,94,50,0,94,81,97,12,70,14,99,92,54,1,72,97,8,100,90,83,76,15,70,18,69,90,11,70,52,29,29,81,91,100,12,99,84,98,18,80,52,44,61,77,55,17,45,76,74,76,88,1,17,82,46,7,44,35,5,2,93,88,58,51,99,76,23,56,49,50,83,96,64,69,13,2,42,1,80,68,11,14,70,64,59,92,70,60,69,14,5,87,44,77,3,94,43,48,39,93,69,69,53,30,61,96,58,96,28,93,36,55,42,9,2,60,9,85,5,37,69,94,4,65,58,49,66,5,0,64,55,37,15,15,98,98,85,61,21,65,0,70,41,16,87,43,28,76,89,21,37,60,1,20,88,86,95,78,55,63,75,64,6,80,20,88,32,45,69,0,65,51,51,87,30,49,4,63,83,40,58,29,18,1,92,1,71,54,45,29,38,50,54,8,81,100,100,9,63,80,68,96,94,17,3,92,42,49,1,61,99,96,31,25,38,24,76,51,96,32,8,60,41,99,92,94,35,63,93,86,74,0,58,46,40,69,1,1,85,91,52,73,55,36,54,31,55,39,59,56,61,89,37,100,34,69,45,40,6,22,41,40,40,20,18,72,67,29,60,100,86,52,0,98,20,85,89,57,45,46,35,73,16,9,5,81,95,10,74,70,58,32,45,100,86,100,63,44,98,80,63,85,9,31,12,11,99,0,39,70,65,94,53,98,4,72,38,84,53,30,2,75,1,15,50,70,80,40,78,16,55,1,51,48,52,63,47,3,70,44,16,43,87,92,15,48,69,93,92,85,28,50,1,1,1,11,31,19,88,94,84,30,95,88,3,76,9,2,98,61,100,45,100,1,74,49,78,60,100,60,75,95,50,93,64,1,1,72,70,94,74,82,82,54,90,45,60,44,78,80,87,96,22,30,75,2,32,42,94,19,34,92,100,27,10,96,69,20,78,3,94,50,23,52,97,26,47,57,19,47,81,60,5,20,66,0,3,80,96,68,68,10,94,50,84,14,4,72,48,98,52,1,77,23,70,39,12,29,28,70,15,72,0,31,2,28,54,34,5,35,60,75,78,86,19,46,84,90,3,52,98,85,71,88,54,55,19,89,55,69,7,60,1,0,72,100,89,25,0,10,11,99,93,3,9,97,97,82,51,10,9,20,27,7,23,61,75,0,91,11,18,94,97,69,68,28,49,5,30,64,15,0,28,56],\"type\":\"scatter3d\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"sizesizemode\":\"area\",\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"showscale\":false},\"textfont\":{\"size\":55},\"error_y\":{\"color\":\"rgba(31,119,180,1)\",\"width\":55},\"error_x\":{\"color\":\"rgba(31,119,180,1)\",\"width\":55},\"line\":{\"color\":\"rgba(31,119,180,1)\",\"width\":55},\"frame\":null},{\"colorbar\":{\"title\":\"tc_diff\",\"ticklen\":2},\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"x\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],\"y\":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],\"z\":[[43.401677253088558,42.991646705503207,42.58161615791785,42.1715856103325,41.761555062747142,41.351524515161778,40.941493967576427,40.53146341999107,40.12143287240572,39.711402324820362,39.301371777235005,38.891341229649655,38.481310682064297,38.07128013447894,37.661249586893589,37.251219039308232],[43.715680778215514,43.325590014178239,42.935499250140957,42.545408486103682,42.1553177220664,41.76522695802911,41.375136193991835,40.985045429954553,40.594954665917278,40.204863901879996,39.814773137842714,39.424682373805439,39.034591609768157,38.644500845730875,38.254410081693599,37.86431931765631],[44.029684303342478,43.659533322853278,43.289382342364071,42.919231361874871,42.549080381385657,42.17892940089645,41.808778420407251,41.438627439918044,41.068476459428844,40.698325478939637,40.32817449845043,39.95802351796123,39.587872537472023,39.217721556982816,38.847570576493609,38.477419596004403],[44.343687828469442,43.993476631528317,43.643265434587185,43.293054237646061,42.942843040704922,42.59263184376379,42.242420646822666,41.892209449881534,41.541998252940409,41.191787055999278,40.841575859058146,40.491364662117022,40.14115346517589,39.790942268234751,39.440731071293627,39.090519874352495],[44.657691353596398,44.327419940203349,43.997148526810292,43.666877113417243,43.33660570002418,43.006334286631123,42.676062873238074,42.345791459845017,42.015520046451968,41.685248633058912,41.354977219665855,41.024705806272806,40.694434392879749,40.364162979486686,40.033891566093637,39.70362015270058],[44.971694878723362,44.661363248878388,44.351031619033407,44.040699989188433,43.730368359343444,43.420036729498463,43.109705099653489,42.799373469808508,42.489041839963534,42.178710210118552,41.868378580273571,41.558046950428597,41.247715320583609,40.937383690738628,40.627052060893654,40.316720431048672],[45.285698403850326,44.995306557553427,44.704914711256521,44.414522864959622,44.124131018662709,43.833739172365803,43.543347326068904,43.252955479771998,42.962563633475099,42.672171787178193,42.381779940881287,42.091388094584389,41.800996248287476,41.51060440199057,41.220212555693671,40.929820709396765],[45.599701928977282,45.329249866228459,45.058797803479628,44.788345740730797,44.517893677981967,44.247441615233136,43.976989552484312,43.706537489735481,43.436085426986658,43.165633364237827,42.895181301488996,42.624729238740166,42.354277175991335,42.083825113242504,41.813373050493681,41.54292098774485],[45.913705454104246,45.663193174903498,45.412680895702742,45.162168616501987,44.911656337301231,44.661144058100476,44.410631778899727,44.160119499698972,43.909607220498224,43.659094941297468,43.408582662096713,43.158070382895957,42.907558103695202,42.657045824494446,42.406533545293698,42.156021266092942],[46.22770897923121,45.997136483578537,45.766563987925856,45.535991492273176,45.305418996620496,45.074846500967816,44.844274005315143,44.613701509662462,44.383129014009789,44.152556518357109,43.921984022704422,43.691411527051748,43.460839031399068,43.230266535746388,42.999694040093715,42.769121544441035],[46.541712504358166,46.331079792253568,46.120447080148963,45.909814368044358,45.699181655939753,45.488548943835148,45.277916231730551,45.067283519625946,44.856650807521348,44.646018095416743,44.435385383312131,44.224752671207533,44.014119959102928,43.803487246998323,43.592854534893725,43.38222182278912],[46.85571602948513,46.665023100928607,46.474330172372078,46.283637243815548,46.092944315259018,45.902251386702488,45.711558458145966,45.520865529589436,45.330172601032913,45.139479672476384,44.948786743919847,44.758093815363324,44.567400886806794,44.376707958250265,44.186015029693742,43.995322101137212],[47.169719554612094,46.998966409603646,46.828213264595192,46.657460119586737,46.486706974578283,46.315953829569828,46.145200684561381,45.974447539552926,45.803694394544479,45.632941249536017,45.462188104527563,45.291434959519115,45.120681814510661,44.949928669502206,44.779175524493759,44.608422379485305],[47.48372307973905,47.332909718278678,47.182096356818299,47.03128299535792,46.88046963389754,46.729656272437161,46.578842910976789,46.42802954951641,46.277216188056038,46.126402826595651,45.975589465135272,45.8247761036749,45.67396274221452,45.523149380754141,45.372336019293769,45.22152265783339],[47.797726604866014,47.666853026953717,47.535979449041413,47.405105871129109,47.274232293216805,47.143358715304501,47.012485137392204,46.8816115594799,46.750737981567603,46.619864403655292,46.488990825742988,46.358117247830691,46.227243669918387,46.096370092006083,45.965496514093786,45.834622936181475],[48.111730129992978,48.000796335628756,47.889862541264527,47.778928746900299,47.66799495253607,47.557061158171841,47.446127363807619,47.335193569443391,47.224259775079169,47.113325980714933,47.002392186350704,46.891458391986482,46.780524597622254,46.669590803258025,46.558657008893803,46.447723214529567],[48.425733655119942,48.334739644303795,48.243745633487634,48.152751622671488,48.061757611855334,47.970763601039181,47.879769590223034,47.788775579406881,47.697781568590727,47.606787557774574,47.51579354695842,47.424799536142274,47.33380552532612,47.242811514509967,47.151817503693813,47.06082349287766],[48.739737180246898,48.668682952978827,48.597628725710742,48.52657449844267,48.455520271174592,48.384466043906514,48.313411816638443,48.242357589370364,48.171303362102286,48.100249134834208,48.029194907566129,47.958140680298058,47.88708645302998,47.816032225761901,47.744977998493823,47.673923771225745],[49.053740705373862,49.002626261653866,48.951511817933856,48.90039737421386,48.849282930493857,48.798168486773854,48.747054043053858,48.695939599333855,48.644825155613852,48.593710711893848,48.542596268173845,48.491481824453849,48.440367380733846,48.389252937013836,48.33813849329384,48.287024049573837],[49.367744230500826,49.336569570328905,49.30539491015697,49.274220249985049,49.243045589813121,49.211870929641194,49.180696269469273,49.149521609297345,49.118346949125417,49.087172288953489,49.055997628781562,49.024822968609641,48.993648308437713,48.962473648265778,48.931298988093857,48.90012432792193],[49.681747755627782,49.670512879003937,49.659278002380077,49.648043125756232,49.636808249132379,49.625573372508526,49.614338495884681,49.603103619260821,49.591868742636976,49.580633866013123,49.569398989389271,49.558164112765425,49.546929236141573,49.535694359517713,49.524459482893867,49.513224606270015],[49.995751280754746,50.004456187678976,50.013161094603191,50.021866001527421,50.030570908451644,50.039275815375866,50.047980722300096,50.056685629224312,50.065390536148541,50.074095443072764,50.082800349996987,50.091505256921216,50.100210163845432,50.108915070769655,50.117619977693884,50.126324884618107],[50.30975480588171,50.338399496354015,50.367044186826305,50.39568887729861,50.424333567770908,50.452978258243206,50.481622948715511,50.510267639187802,50.538912329660107,50.567557020132405,50.596201710604703,50.624846401077008,50.653491091549299,50.682135782021597,50.710780472493902,50.739425162966199],[50.623758331008666,50.672342805029047,50.720927279049413,50.769511753069793,50.818096227090166,50.866680701110539,50.915265175130919,50.963849649151285,51.012434123171666,51.061018597192039,51.109603071212412,51.158187545232792,51.206772019253158,51.255356493273531,51.303940967293912,51.352525441314285],[50.93776185613563,51.006286113704085,51.074810371272527,51.143334628840982,51.211858886409431,51.280383143977879,51.348907401546334,51.417431659114776,51.485955916683231,51.55448017425168,51.623004431820128,51.691528689388576,51.760052946957025,51.828577204525473,51.897101462093929,51.965625719662377],[51.251765381262594,51.340229422379124,51.428693463495641,51.517157504612172,51.605621545728695,51.694085586845219,51.782549627961743,51.871013669078266,51.959477710194797,52.047941751311321,52.136405792427844,52.224869833544368,52.313333874660891,52.401797915777415,52.490261956893946,52.578725998010469],[51.56576890638955,51.674172731054156,51.782576555718748,51.890980380383354,51.999384205047953,52.107788029712552,52.216191854377151,52.324595679041749,52.432999503706355,52.541403328370954,52.649807153035553,52.758210977700152,52.866614802364751,52.97501862702935,53.083422451693956,53.191826276358547],[51.879772431516514,52.008116039729195,52.136459647941862,52.264803256154543,52.393146864367218,52.521490472579892,52.649834080792566,52.77817768900524,52.906521297217921,53.034864905430595,53.163208513643269,53.291552121855943,53.419895730068617,53.548239338281292,53.676582946493973,53.80492655470664],[52.193775956643478,52.342059348404234,52.490342740164976,52.638626131925733,52.786909523686482,52.935192915447232,53.083476307207981,53.23175969896873,53.380043090729487,53.528326482490236,53.676609874250978,53.824893266011735,53.973176657772484,54.121460049533233,54.26974344129399,54.418026833054732],[52.507779481770434,52.676002657079266,52.844225832388084,53.012449007696915,53.18067218300574,53.348895358314564,53.517118533623389,53.685341708932214,53.853564884241045,54.02178805954987,54.190011234858687,54.358234410167519,54.526457585476344,54.694680760785168,54.862903936093993,55.031127111402817],[52.821783006897398,53.009945965754305,53.198108924611198,53.386271883468105,53.574434842325005,53.762597801181904,53.950760760038804,54.138923718895704,54.327086677752611,54.515249636609511,54.703412595466403,54.89157555432331,55.07973851318021,55.26790147203711,55.45606443089401,55.64422738975091],[53.135786532024362,53.343889274429344,53.551992016834312,53.760094759239294,53.968197501644269,54.176300244049244,54.384402986454219,54.592505728859194,54.800608471264177,55.008711213669152,55.21681395607412,55.424916698479102,55.633019440884077,55.841122183289052,56.049224925694027,56.257327668099002],[53.449790057151318,53.677832583104376,53.905875109057419,54.133917635010476,54.361960160963527,54.590002686916577,54.818045212869627,55.046087738822678,55.274130264775735,55.502172790728785,55.730215316681829,55.958257842634886,56.186300368587936,56.414342894540987,56.642385420494037,56.870427946447087],[53.763793582278282,54.011775891779408,54.259758201280533,54.507740510781666,54.755722820282791,55.00370512978391,55.251687439285043,55.499669748786168,55.747652058287301,55.995634367788419,56.243616677289545,56.491598986790677,56.739581296291803,56.987563605792921,57.235545915294054,57.48352822479518],[54.077797107405246,54.345719200454447,54.613641293503647,54.881563386552855,55.149485479602056,55.41740757265125,55.685329665700458,55.953251758749659,56.221173851798866,56.48909594484806,56.757018037897261,57.024940130946469,57.29286222399567,57.560784317044863,57.828706410094071,58.096628503143272],[54.391800632532203,54.679662509129479,54.967524385726755,55.255386262324038,55.543248138921314,55.831110015518583,56.118971892115866,56.406833768713142,56.694695645310425,56.982557521907694,57.27041939850497,57.558281275102253,57.846143151699529,58.134005028296798,58.421866904894081,58.709728781491357],[54.705804157659166,55.013605817804518,55.321407477949869,55.629209138095227,55.937010798240578,56.244812458385923,56.552614118531281,56.860415778676632,57.168217438821991,57.476019098967335,57.783820759112686,58.091622419258044,58.399424079403396,58.70722573954874,59.015027399694098,59.322829059839449],[55.01980768278613,55.347549126479556,55.675290570172983,56.003032013866417,56.330773457559843,56.658514901253263,56.986256344946696,57.313997788640123,57.641739232333556,57.969480676026976,58.297222119720402,58.624963563413836,58.952705007107255,59.280446450800682,59.608187894494115,59.935929338187542],[55.333811207913087,55.681492435154588,56.02917366239609,56.376854889637599,56.724536116879101,57.072217344120595,57.419898571362104,57.767579798603606,58.115261025845108,58.462942253086609,58.810623480328111,59.15830470756962,59.505985934811115,59.853667162052616,60.201348389294125,60.549029616535627],[55.64781473304005,56.015435743829627,56.383056754619204,56.750677765408788,57.118298776198365,57.485919786987935,57.853540797777519,58.221161808567096,58.588782819356673,58.95640383014625,59.324024840935827,59.691645851725411,60.059266862514981,60.426887873304558,60.794508884094142,61.162129894883712],[55.961818258167014,56.349379052504666,56.736939846842319,57.124500641179978,57.51206143551763,57.899622229855275,58.287183024192935,58.674743818530587,59.062304612868239,59.449865407205891,59.837426201543543,60.224986995881203,60.612547790218848,61.0001085845565,61.387669378894159,61.775230173231805],[56.275821783293971,56.683322361179698,57.090822939065426,57.49832351695116,57.905824094836888,58.313324672722608,58.720825250608343,59.12832582849407,59.535826406379798,59.943326984265525,60.350827562151252,60.75832814003698,61.165828717922707,61.573329295808435,61.980829873694169,62.38833045157989],[56.589825308420934,57.017265669854737,57.44470603128854,57.87214639272235,58.299586754156152,58.727027115589948,59.154467477023758,59.58190783845756,60.009348199891363,60.436788561325166,60.864228922758969,61.291669284192771,61.719109645626574,62.146550007060377,62.573990368494186,63.001430729927982],[56.903828833547898,57.351208978529776,57.798589123511654,58.245969268493539,58.69334941347541,59.140729558457288,59.588109703439173,60.035489848421051,60.482869993402929,60.930250138384807,61.377630283366685,61.825010428348563,62.272390573330441,62.719770718312319,63.167150863294196,63.614531008276074],[57.217832358674855,57.685152287204808,58.152472215734761,58.619792144264721,59.087112072794667,59.554432001324621,60.021751929854581,60.489071858384534,60.956391786914487,61.423711715444441,61.891031643974394,62.358351572504347,62.8256715010343,63.292991429564253,63.760311358094206,64.22763128662416],[57.531835883801818,58.019095595879847,58.506355307957875,58.993615020035911,59.480874732113932,59.968134444191961,60.455394156269996,60.942653868348017,61.429913580426053,61.917173292504081,62.40443300458211,62.891692716660138,63.378952428738167,63.866212140816195,64.353471852894231,64.840731564972259],[57.845839408928782,58.353038904554886,58.86023840018099,59.3674378958071,59.874637391433197,60.381836887059301,60.889036382685411,61.396235878311508,61.903435373937619,62.410634869563722,62.917834365189826,63.42503386081593,63.932233356442033,64.439432852068137,64.946632347694248,65.453831843320344],[58.159842934055739,58.686982213229918,59.214121492404097,59.741260771578283,60.268400050752454,60.795539329926633,61.322678609100819,61.849817888274991,62.376957167449177,62.904096446623356,63.431235725797528,63.958375004971714,64.485514284145893,65.012653563320072,65.539792842494251,66.06693212166843],[58.473846459182703,59.020925521904957,59.568004584627211,60.115083647349472,60.662162710071719,61.209241772793973,61.756320835516235,62.303399898238482,62.850478960960743,63.397558023682997,63.944637086405244,64.491716149127512,65.038795211849759,65.585874274572006,66.132953337294268,66.680032400016515],[58.787849984309666,59.354868830579996,59.921887676850325,60.488906523120662,61.055925369390984,61.622944215661313,62.18996306193165,62.756981908201972,63.324000754472308,63.891019600742638,64.458038447012967,65.025057293283297,65.592076139553626,66.159094985823955,66.726113832094285,67.293132678364614],[59.101853509436623,59.688812139255027,60.275770769073432,60.862729398891844,61.449688028710241,62.036646658528646,62.623605288347058,63.210563918165455,63.797522547983867,64.384481177802272,64.971439807620669,65.558398437439081,66.145357067257478,66.73231569707589,67.319274326894288,67.906232956712699],[59.415857034563587,60.022755447930066,60.629653861296546,61.236552274663033,61.843450688029506,62.450349101395986,63.057247514762473,63.664145928128946,64.271044341495426,64.877942754861905,65.484841168228385,66.091739581594865,66.698637994961345,67.305536408327825,67.912434821694305,68.519333235060785],[59.72986055969055,60.356698756605105,60.983536953519661,61.610375150434223,62.237213347348771,62.864051544263326,63.490889741177888,64.117727938092443,64.744566135006991,65.371404331921553,65.998242528836101,66.625080725750664,67.251918922665212,67.878757119579774,68.505595316494322,69.132433513408884],[60.043864084817507,60.690642065280137,61.337420045742768,61.984198026205405,62.630976006668028,63.277753987130659,63.924531967593296,64.571309948055926,65.218087928518557,65.864865908981187,66.511643889443818,67.158421869906448,67.805199850369078,68.451977830831709,69.098755811294339,69.745533791756969],[60.357867609944471,61.024585373955176,61.691303137965882,62.358020901976595,63.024738665987293,63.691456429997999,64.358174194008711,65.02489195801941,65.691609722030122,66.358327486040821,67.025045250051534,67.691763014062232,68.358480778072945,69.025198542083643,69.691916306094356,70.358634070105055],[60.671871135071434,61.358528682630215,62.045186230188996,62.731843777747784,63.418501325306558,64.105158872865331,64.791816420424126,65.478473967982907,66.165131515541688,66.851789063100469,67.53844661065925,68.225104158218031,68.911761705776811,69.598419253335578,70.285076800894373,70.971734348453154],[60.985874660198391,61.692471991305247,62.399069322412103,63.105666653518966,63.812263984625815,64.518861315732664,65.225458646839527,65.932055977946391,66.63865330905324,67.345250640160103,68.051847971266952,68.758445302373815,69.465042633480664,70.171639964587513,70.878237295694376,71.584834626801239],[61.299878185325355,62.026415299980286,62.752952414635217,63.479489529290156,64.20602664394508,64.932563758600011,65.659100873254943,66.385637987909874,67.112175102564805,67.838712217219737,68.565249331874668,69.291786446529599,70.01832356118453,70.744860675839462,71.471397790494393,72.197934905149324],[61.613881710452318,62.360358608655325,63.106835506858332,63.853312405061338,64.599789303264345,65.346266201467344,66.092743099670358,66.839219997873357,67.585696896076371,68.332173794279385,69.078650692482384,69.825127590685398,70.571604488888397,71.318081387091397,72.06455828529441,72.81103518349741],[61.927885235579275,62.694301917330357,63.460718599081439,64.227135280832528,64.993551962583609,65.759968644334677,66.526385326085773,67.292802007836841,68.059218689587937,68.825635371339018,69.592052053090086,70.358468734841182,71.124885416592264,71.891302098343331,72.657718780094427,73.424135461845495],[62.241888760706239,63.028245226005396,63.814601691304553,64.60095815660371,65.387314621902874,66.173671087202024,66.960027552501188,67.746384017800338,68.532740483099502,69.319096948398652,70.105453413697802,70.891809878996966,71.678166344296116,72.46452280959528,73.250879274894444,74.037235740193594],[62.555892285833202,63.362188534680435,64.16848478352766,64.974781032374906,65.781077281222139,66.587373530069357,67.393669778916603,68.199966027763821,69.006262276611068,69.8125585254583,70.618854774305518,71.425151023152765,72.231447271999983,73.037743520847215,73.844039769694461,74.65033601854168],[62.869895810960159,63.696131843355467,64.522367875750774,65.348603908146089,66.174839940541389,67.00107597293669,67.827312005332004,68.653548037727305,69.479784070122619,70.306020102517934,71.132256134913234,71.958492167308549,72.784728199703849,73.61096423209915,74.437200264494464,75.263436296889765],[63.183899336087123,64.030075152030506,64.876250967973888,65.722426783917271,66.568602599860654,67.414778415804037,68.260954231747419,69.107130047690802,69.953305863634185,70.799481679577568,71.64565749552095,72.491833311464333,73.338009127407716,74.184184943351099,75.030360759294481,75.876536575237864],[63.497902861214087,64.364018460705552,65.230134060197003,66.096249659688468,66.962365259179919,67.828480858671369,68.694596458162835,69.560712057654285,70.426827657145751,71.292943256637201,72.159058856128667,73.025174455620132,73.891290055111583,74.757405654603033,75.623521254094499,76.489636853585949],[63.811906386341043,64.697961769380584,65.584017152420103,66.47007253545965,67.356127918499169,68.242183301538702,69.12823868457825,70.014294067617769,70.900349450657316,71.786404833696835,72.672460216736368,73.558515599775916,74.444570982815435,75.330626365854968,76.216681748894501,77.102737131934035],[64.125909911468,65.031905078055615,65.937900244643217,66.843895411230832,67.749890577818434,68.655885744406049,69.561880910993665,70.467876077581266,71.373871244168882,72.279866410756483,73.185861577344085,74.0918567439317,74.997851910519302,75.903847077106917,76.809842243694519,77.715837410282134],[64.439913436594964,65.365848386730661,66.291783336866331,67.217718287002029,68.143653237137698,69.069588187273382,69.99552313740908,70.92145808754475,71.847393037680447,72.773327987816117,73.699262937951801,74.625197888087484,75.551132838223168,76.477067788358852,77.403002738494536,78.328937688630219],[64.753916961721927,65.699791695405693,66.645666429089445,67.591541162773211,68.537415896456963,69.483290630140715,70.429165363824481,71.375040097508233,72.320914831191999,73.266789564875751,74.212664298559517,75.158539032243269,76.104413765927035,77.050288499610787,77.996163233294553,78.942037966978305],[65.067920486848891,66.033735004080725,66.999549521312559,67.965364038544394,68.931178555776228,69.896993073008062,70.862807590239896,71.82862210747173,72.794436624703565,73.760251141935399,74.726065659167233,75.691880176399067,76.657694693630901,77.623509210862721,78.58932372809457,79.555138245326404],[65.38192401197584,66.367678312755757,67.353432613535659,68.339186914315576,69.324941215095478,70.310695515875395,71.296449816655297,72.282204117435214,73.26795841821513,74.253712718995033,75.239467019774935,76.225221320554851,77.210975621334754,78.196729922114656,79.182484222894573,80.168238523674489],[65.695927537102818,66.701621621430803,67.707315705758788,68.713009790086772,69.718703874414757,70.724397958742742,71.730092043070727,72.735786127398711,73.741480211726696,74.747174296054681,75.752868380382665,76.75856246471065,77.764256549038635,78.769950633366605,79.775644717694604,80.781338802022574],[66.009931062229768,67.035564930105835,68.061198797981888,69.086832665857955,70.112466533734008,71.138100401610075,72.163734269486127,73.189368137362194,74.215002005238262,75.240635873114314,76.266269740990367,77.291903608866434,78.317537476742487,79.34317134461854,80.368805212494607,81.39443908037066],[66.323934587356732,67.369508238780867,68.415081890205002,69.460655541629137,70.506229193053272,71.551802844477407,72.597376495901543,73.642950147325678,74.688523798749813,75.734097450173948,76.779671101598083,77.825244753022218,78.870818404446354,79.916392055870475,80.961965707294624,82.007539358718745],[66.637938112483695,67.703451547455913,68.768964982428116,69.834478417400334,70.899991852372537,71.965505287344754,73.031018722316958,74.096532157289175,75.162045592261379,76.227559027233596,77.293072462205799,78.358585897178017,79.42409933215022,80.489612767122424,81.555126202094641,82.620639637066844],[66.951941637610659,68.037394856130945,69.12284807465123,70.208301293171516,71.293754511691802,72.379207730212087,73.464660948732373,74.550114167252659,75.635567385772944,76.72102060429323,77.806473822813501,78.891927041333801,79.977380259854087,81.062833478374358,82.148286696894658,83.23373991541493],[67.265945162737609,68.371338164805977,69.47673116687433,70.582124168942698,71.687517171011052,72.79291017307942,73.898303175147774,75.003696177216142,76.109089179284496,77.214482181352864,78.319875183421217,79.425268185489585,80.530661187557939,81.636054189626293,82.741447191694661,83.846840193763015]],\"type\":\"surface\",\"name\":\"pred_surface\",\"cauto\":true,\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n:::\n\n\n\n# {{< fa lightbulb >}} Difference-in-Differences {.inverse}\n\n## Motivating Example: What causes Cholera? {.smaller background-image=https://www.finebooksmagazine.com/sites/default/files/styles/gallery_item/public/media-images/2020-11/map-lead-4.jpg?h=2ded5a3f&itok=Mn-K5rQc, background-opacity=.3}\n\n- In the 1800s, cholera was thought to be transmitted through the air.\n\n- John Snow (the physician, not the snack), to explore the origins eventunally concluding that cholera was transmitted through living organisms in water.\n\n- Leveraged a **natural experiment** in which one water company in London moved its pipes further upstream (reducing contamination for Lambeth), while other companies kept their pumps serving Southwark and Vauxhall in the same location. \n\n\n## Notation {.smaller}\n\nLet's adopt a little notation to help us think about the logic of Snow's design:\n\n- $D$: treatment indicator, 1 for treated neighborhoods (Lambeth), 0 for control neighborhoods (Southwark and Vauxhall)\n\n- $T$: period indicator, 1 if post treatment (1854), 0 if pre-treatment (1849).\n\n- $Y_{di}(t)$ the potential outcome of unit $i$ \n\n  - $Y_{1i}(t)$ the potential outcome of unit $i$ when treated between the two periods \n\n  - $Y_{0i}(t)$ the potential outcome of unit $i$ when control between the two periods \n\n\n## Causal Effects {.smaller}\n\nThe individual causal effect for unit i at time t is:\n\n$$\\tau_{it} = Y_{1i}(t) − Y_{0i}(t)$$\n\nWhat we observe is \n\n$$Y_i(t) = Y_{0i}(t)\\cdot(1 − D_i(t)) + Y_{1i}(t)\\cdot D_i(t)$$\n\n$D$ only equals 1, when $T$ equals 1, so we never observe $Y_0i(1)$ for the treated units. \n\nIn words, we don't know what Lambeth's outcome would have been in the second period, had they not been treated.\n\n\n## Average Treatment on Treated {.smaller}\n\nOur goal is to estimate the average effect of treatment on treated (ATT):\n\n\n$$\\tau_{ATT} = E[Y_{1i}(1) -  Y_{0i}(1)|D=1]$$\n\nThat is, what would have happened in Lambeth, had their water company not moved their pipes\n\n\n## Average Treatment on Treated {.smaller}\n\nOur goal is to estimate the average effect of treatment on treated (ATT):\n\nWe we can observe is:\n\n|               | Pre-Period (T=0)  | Post-Period (T=1)  |\n|-|--|-|\n| Treated $D_{i}=1$  |  $E[Y_{0i}(0)\\vert D_i = 1]$ | $E[Y_{1i}(1)\\vert D_i = 1]$  |\n| Control $D_i=0$  |  $E[Y_{0i}(0)\\vert D_i = 0]$ | $E[Y_{0i}(1)\\vert D_i = 0]$  |\n\n\n## Data {.smaller}\n\nBecause potential outcomes notation is abstract, let's consider a modified description of the Snow's cholera death data from [Scott Cunningham](https://mixtape.scunning.com/difference-in-differences.html):\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Company </th>\n   <th style=\"text-align:right;\"> 1849 (T=0) </th>\n   <th style=\"text-align:right;\"> 1854 (T=1) </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Lambeth (D=1) </td>\n   <td style=\"text-align:right;\"> 85 </td>\n   <td style=\"text-align:right;\"> 19 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Southwark and Vauxhall (D=0) </td>\n   <td style=\"text-align:right;\"> 135 </td>\n   <td style=\"text-align:right;\"> 147 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n## How can we estimate the effect of moving pumps upstream? {.smaller}\n\nRecall, our goal is to estimate the effect of the the treatment on the treated:\n\n$$\\tau_{ATT} = E[Y_{1i}(1) -  Y_{0i}(1)|D=1]$$\n\nLet's conisder some strategies Snow could take to estimate this quantity:\n\n\n## Before vs after comparisons:{.smaller}\n\n:::{.nonincremental}\n- Snow could have compared Labmeth in 1854 $(E[Y_i(1)|D_i = 1] = 19)$ to Lambeth in 1849 $(E[Y_i(0)|D_i = 1]=85)$, and claimed that moving the pumps upstream led to **66 fewer cholera deaths.** \n\n- Assumes Lambeth's pre-treatment outcomes in 1849 are a good proxy for what its outcomes would have been in 1954 if the pumps hadn't moved $(E[Y_{0i}(1)|D_i = 1])$.\n\n- A skeptic might argue that Lambeth in 1849 $\\neq$ Lambeth in 1854\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Company </th>\n   <th style=\"text-align:right;\"> 1849 (T=0) </th>\n   <th style=\"text-align:right;\"> 1854 (T=1) </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;color: blue !important;\"> Lambeth (D=1) </td>\n   <td style=\"text-align:right;font-weight: bold;color: blue !important;\"> 85 </td>\n   <td style=\"text-align:right;font-weight: bold;color: blue !important;\"> 19 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Southwark and Vauxhall (D=0) </td>\n   <td style=\"text-align:right;\"> 135 </td>\n   <td style=\"text-align:right;\"> 147 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::\n\n\n## Treatment-Control comparisons in the Post Period. {.smaller}\n\n:::{.nonincremental}\n\n- Snow could have compared outcomes between Lambeth and S&V in 1954  ($E[Yi(1)|Di = 1] − E[Yi(1)|Di = 0]$), concluding that the change in pump locations led to **128 fewer deaths.**\n\n- Here the assumption is that the outcomes in S&V and in 1854 provide a good proxy for what would have happened in Lambeth in 1954 had the pumps not been moved $(E[Y_{0i}(1)|D_i = 1])$\n\n- Again, our skeptic could argue  Lambeth $\\neq$ S&V \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Company </th>\n   <th style=\"text-align:right;\"> 1849 (T=0) </th>\n   <th style=\"text-align:right;\"> 1854 (T=1) </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Lambeth (D=1) </td>\n   <td style=\"text-align:right;\"> 85 </td>\n   <td style=\"text-align:right;font-weight: bold;color: red !important;\"> 19 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Southwark and Vauxhall (D=0) </td>\n   <td style=\"text-align:right;\"> 135 </td>\n   <td style=\"text-align:right;font-weight: bold;color: red !important;\"> 147 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::\n\n## Difference in Differences {.smaller}\n\n:::{.nonincremental}\nTo address these concerns, Snow employed what we now call a [difference-in-differences]{.blue} design, \n\nThere are two, equivalent ways to view this design. \n\n$$\\underbrace{\\{E[Y_{i}(1)|D_{i} = 1] − E[Y_{i}(1)|D_{i} = 0]\\}}_{\\text{1. Treat-Control |Post }}− \\overbrace{\\{E[Y_{i}(0)|D_{i} = 1] − E[Y_{i}(0)|D_{i}=0 ]}^{\\text{Treated-Control|Pre}}$$\n\n- Difference 1: Average change between Treated and Control  in Post Period\n\n- Difference 2: Average change between Treated and Control  in Pre Period\n\n:::\n\n## Difference in Differences {.smaller}\n\n:::{.nonincremental}\n\n$$\\underbrace{\\{E[Y_{i}(1)|D_{i} = 1] − E[Y_{i}(1)|D_{i} = 0]\\}}_{\\text{1. Treat-Control |Post }}− \\overbrace{\\{E[Y_{i}(0)|D_{i} = 1] − E[Y_{i}(0)|D_{i}=0 ]}^{\\text{Treated-Control|Pre}}$$\nIs equivalent to: \n\n$$\\underbrace{\\{E[Y_{i}(1)|D_{i} = 1] − E[Y_{i}(0)|D_{i} = 1]\\}}_{\\text{Post - Pre |Treated }}− \\overbrace{\\{E[Y_{i}(1)|D_{i} = 0] − E[Y_{i}(0)|D_{i}=0 ]}^{\\text{Post-Pre|Control}}$$\n\n\n- Difference 1: Average change between Treated over time\n- Difference 2: Average change between Control over time\n\n:::\n\n## Difference in Differences {.smaller}\n\n\nYou'll see the DiD design represented both ways, but they produce the same result:\n\n$$\n\\tau_{ATT} = (19-147) - (85-135) = -78\n$$\n\n$$\n\\tau_{ATT} = (19-85) - (147-135) = -78\n$$\n\n\n## Identifying Assumption of a Difference in Differences Design {.smaller}\n\nThe key assumption in this design is what's known as the parallel trends assumption: $E[Y_{0i}(1) − Y_{0i}(0)|D_i = 1] = E[Y_{0i}(1) − Y_{0i}(0)|D_i = 0]$ \n\n- In words: If Lambeth hadn't moved its pumps, it would have followed a similar path as S&V\n\n## Parallel Trends\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/paralleltrends-1.png){width=960}\n:::\n:::\n\n\n\n## Using linear regression to estimate a Difference in Difference {.smaller}\n\n:::: panel-tabset\n\n## Concept\n\n- Recall that linear regression provides a...\n  - linear estimate of the conditional expectation function\n- In the canonincal pre-post, treated and control DiD, $\\beta_3$ from the following linear regression will give us the ATT:\n\n:::{.fragment}\n\n$$\ny = \\beta_0 + \\beta_1 Post + \\beta_2 Treated + \\underbrace{\\beta_3Post\\times Treated}_{\\tau_{ATT}}\n$$\n\n:::\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncholera_df <- tibble(\n  Period = factor(c(\"Pre\",\"Pre\",\"Post\",\"Post\"),\n                  levels = c(\"Pre\",\"Post\")),\n  Year = c(1849,1849, 1854,1854),\n  Treated = factor(c(\"Control\",\"Treated\",\"Control\",\"Treated\")),\n  Company = c(\"S&V\",\"Lambeth\",\"S&V\",\"Lambeth\"),\n  Deaths = c(135,85,147,19)\n)\n\nm_did <- lm(Deaths~Period + Treated + Period:Treated, cholera_df)\n\nm_did\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Deaths ~ Period + Treated + Period:Treated, data = cholera_df)\n\nCoefficients:\n              (Intercept)                 PeriodPost  \n                      135                         12  \n           TreatedTreated  PeriodPost:TreatedTreated  \n                      -50                        -78  \n```\n\n\n:::\n:::\n\n\n\n## Data\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-cae0b3f7b23eac7b6ba9\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-cae0b3f7b23eac7b6ba9\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\"],[\"Pre\",\"Pre\",\"Post\",\"Post\"],[1849,1849,1854,1854],[\"Control\",\"Treated\",\"Control\",\"Treated\"],[\"S&amp;V\",\"Lambeth\",\"S&amp;V\",\"Lambeth\"],[135,85,147,19]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Period<\\/th>\\n      <th>Year<\\/th>\\n      <th>Treated<\\/th>\\n      <th>Company<\\/th>\\n      <th>Deaths<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,5]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Period\",\"targets\":1},{\"name\":\"Year\",\"targets\":2},{\"name\":\"Treated\",\"targets\":3},{\"name\":\"Company\",\"targets\":4},{\"name\":\"Deaths\",\"targets\":5}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n## DiD\n\n\n\n<table class=\"texreg\" style=\"margin: 10px auto;border-collapse: collapse;border-spacing: 0px;caption-side: bottom;color: #000000;border-top: 2px solid #000000;\">\n<caption>Statistical models</caption>\n<thead>\n<tr>\n<th style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</th>\n<th style=\"padding-left: 5px;padding-right: 5px;\">Model 1</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">(Intercept)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">135.00</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">Post (1854)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">12.00</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">Treated (Lambeth)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">-50.00</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">Post X Treated (DID)</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">-78.00</td>\n</tr>\n<tr style=\"border-top: 1px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">1.00</td>\n</tr>\n<tr>\n<td style=\"padding-left: 5px;padding-right: 5px;\">Adj. R<sup>2</sup></td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">&nbsp;</td>\n</tr>\n<tr style=\"border-bottom: 2px solid #000000;\">\n<td style=\"padding-left: 5px;padding-right: 5px;\">Num. obs.</td>\n<td style=\"padding-left: 5px;padding-right: 5px;\">4</td>\n</tr>\n</tbody>\n<tfoot>\n<tr>\n<td style=\"font-size: 0.8em;\" colspan=\"2\"><sup>&#42;&#42;&#42;</sup>p &lt; 0.001; <sup>&#42;&#42;</sup>p &lt; 0.01; <sup>&#42;</sup>p &lt; 0.05</td>\n</tr>\n</tfoot>\n</table>\n\n\n\n## Figure\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/didfig-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::{.nonincremental}\n\n- $\\beta_0=$ Outcome in control (S&V) before treatment\n- $\\beta_1=$ Fixed, [unit invariant]{.blue} differences between [pre]{.blue} and [post]{.blue} periods\n- $\\beta_2=$ Fixed, [time invariant]{.blue} differences between [treated]{.blue} and [control]{.blue}\n- $\\beta_3=$ [Difference-in-Differences]{.blue} = $E[Y_{1i}(1) -  Y_{0i}(1)|D=1]$\n\n:::\n\n::::\n\n\n\n\n## Summary {.smaller}\n\n- A Difference in Differences (DiD, or diff-in-diff) design combines a pre-post comparison, with a treated and control comparison\n  \n- Differencing twice accounts for fixed differences [across units]{.blue} and [between periods]{.blue}\n  - But not time varying differences across units...\n  \n- The key identifying assumption of a DiD design is the assumption of [parallel trends]{.blue}\n  - Absent treatment, treated and control groups\nwould see the same changes over time.\n  - Hard to prove, possible to test\n\n\n\n## Extensions and limitations {.smaller}\n\n- Diff-in-Diff easy to estimate with linear regression\n- Generalizes to multiple periods and treatment interventions\n  - More pre-treatment periods allow you assess \"parallel trends\" assumption\n- Alternative methods \n  - Synthetic control\n  - Event Study Designs\n- What if you have multiple treatments or treatments that come and go?\n  - Panel Matching\n  - Generalized Synthetic control\n\n\n## Applications{.smaller}\n\n- [Card and Krueger (1994)](https://www.nber.org/papers/w4509) What effect did raising the minimum wage in NJ have on employment\n\n- [Abadie, Diamond, & Hainmueller (2014)](https://onlinelibrary.wiley.com/doi/full/10.1111/ajps.12116?casa_token=_ceCu4SwzTEAAAAA%3AP9aeaZpT_Zh1VdWKXx_tEmzaJTtMJ1n0eG7EaYlvJZYN000re33cfMAI2O8N8htFJjOsln2GyVeQql4) What effect did German Unification have on economic development in West Germany\n\n- [Malesky, Nguyen and Tran (2014)](https://www.cambridge.org/core/journals/american-political-science-review/article/impact-of-recentralization-on-public-services-a-differenceindifferences-analysis-of-the-abolition-of-elected-councils-in-vietnam/3477854BAAFE152DC93C594169D64F58) How does decentralization influence public services?\n\n\n\n\n\n# {{< fa home >}} Summary {.inverse}\n\n## Summary - Linear Regression{.smaller}\n\n- Linear regression produces linear estimates of the Conditional Expectation Function\n\n- We estimate linear regression using `lm()`\n\n:::{.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 <- lm( y ~ x1 + x2 + x3, data = df)\n```\n:::\n\n\n\n:::\n\n- We interpret linear regression by: looking at the [sign]{.blue}, [size]{.blue}, and, eventually, [significance]{.blue} of coefficients\n\n  - the intercept $(\\beta_0)$ corresponds to the model's prediction when every other predictor is zero\n  - the other $\\beta$s describe how $y$ changes with a [unit change] in $x$, controlling for other predictors in the model\n  \n- We present our results using [regression tables]{.blue} and [figures]{.blue} showing [predicted values]{.blue}\n\n\n## Summary - Difference-in-Differences{.smaller}\n\n- Difference-in-Differences (DiD) is a powerful research design for observational data that combines a [pre-post comparisons]{.blue} with a [treated and control]{.blue} comparisons\n  \n- Differencing twice accounts for fixed differences [across units]{.blue} and [between periods]{.blue}\n\n- DiD relies on an assumption of [parallel trends]{.blue}\n\n- We can use linear regression to estimate and generalize DiD designs\n\n\n## References",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/plotly-binding-4.10.3/plotly.js\"></script>\n<script src=\"../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}