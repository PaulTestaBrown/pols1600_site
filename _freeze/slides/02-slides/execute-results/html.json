{
  "hash": "f2482b93b9e789792d624767b74d5633",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"POLS 1600\"\nsubtitle: \"Data Visualization\"\ndate: last-modified\ndate-format: \"[Updated ]MMM D, YYYY\"\nformat: \n  revealjs:\n    theme: brownslides.scss\n    logo: images/pols1600_hex.png\n    footer: \"POLS 1600\"\n    multiplex: false\n    transition: fade\n    slide-number: c\n    incremental: true\n    center: false\n    menu: true\n    scrollable: true\n    highlight-style: github\n    progress: true\n    code-overflow: wrap\n    # include-after-body: title-slide.html\n    title-slide-attributes:\n      align: left\n      data-background-image: images/pols1600_hex.png\n      data-background-position: 90% 50%\n      data-background-size: 40%\nfilters:\n    - openlinksinnewpage\nexecute: \n  eval: true\n  echo: true\n  warning: false\n\n    # title-slide-attributes:\n    #   data-background-image: ../../assets/stat20-hex-bg.png\n    #   data-background-size = contain\n---\n\n::: {.cell}\n\n:::\n\n\n# {{< fa map-location>}} Overview {.inverse}\n\n## Class Plan {.smaller}\n\n-   Setup (5 minutes)\n-   Review\n    -   Troubleshooting Errors (5 min)\n    -   Data wrangling in R (20 min)\n    -   Descriptive Statistics (10 min)\n-   Data Visualization (40 min)\n    -   The grammar of graphics\n    -   Basic plots to describe:\n        -   Distributions\n        -   Associations\n\n\n# {{< fa code>}} Setup {.inverse}\n\n## Setup for today\n\n## Libraries\n\nThis week we'll use the following libraries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthe_packages <- c(\n  ## R Markdown\n  \"tinytex\", \"kableExtra\",\n  \n  ## Tidyverse\n  \"tidyverse\",\"lubridate\", \"forcats\", \"haven\",\"labelled\",\n  \n  ## Extensions for ggplot\n  \"ggmap\",\"ggrepel\", \"ggridges\", \"ggthemes\",\"ggpubr\",\n  \"GGally\",\n  \n  # Data \n  \"COVID19\",\"maps\",\"mapdata\",\"DT\"\n)\nthe_packages\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"tinytex\"    \"kableExtra\" \"tidyverse\"  \"lubridate\"  \"forcats\"   \n [6] \"haven\"      \"labelled\"   \"ggmap\"      \"ggrepel\"    \"ggridges\"  \n[11] \"ggthemes\"   \"ggpubr\"     \"GGally\"     \"COVID19\"    \"maps\"      \n[16] \"mapdata\"    \"DT\"        \n```\n\n\n:::\n:::\n\n\n## Installing and loading new packages\n\nNext we'll create a function called `ipak` (thanks [Steven](https://gist.github.com/stevenworthington/3178163)) which:\n\n-   Takes a list of packages (`pkg`)\n-   Checks to see if these packages are installed\n-   Installs any new packages\n-   Loads all the packages so we can use them\n\n\n::: {.cell}\n\n```{.r .cell-code}\nipak <- function(pkg){\n    new.pkg <- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n    if (length(new.pkg)) \n        install.packages(new.pkg, dependencies = TRUE)\n    sapply(pkg, require, character.only = TRUE)\n}\n```\n:::\n\n\nAgain, run this code on your machines\n\n## Installing and loading new packages {.smaller}\n\nFinally, let's use `ipak` to install and load `the_packages`\n\nWhat should we replace `some_function` and `some_input` with to do this?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsome_function(some_input)\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nipak(the_packages)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   tinytex kableExtra  tidyverse  lubridate    forcats      haven   labelled \n      TRUE       TRUE       TRUE       TRUE       TRUE       TRUE       TRUE \n     ggmap    ggrepel   ggridges   ggthemes     ggpubr     GGally    COVID19 \n      TRUE       TRUE       TRUE       TRUE       TRUE       TRUE       TRUE \n      maps    mapdata         DT \n      TRUE       TRUE       TRUE \n```\n\n\n:::\n:::\n\n\n-   `R` may ask you to install a package's dependencies (other packages your package needs). Try entering the number `1` into your console\n-   `R` may tell you need to restart `R` Try saying yes. If it doesn't start downloading, say no\n-   `R` may then ask if you want to compile some packages from source. Type `Y` into your console. If this doesn't work, try again, but this time type `N` when asked\n\n## Loading the Covid-19 Data\n\nLet's load the Covid-19 data we worked with last week:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(url(\"https://pols1600.paultesta.org/files/data/covid.rda\"))\n```\n:::\n\n\n# {{< fa magnifying-glass>}} Troubleshooting Errors {.inverse}\n\n## \n\n![](https://imgs.xkcd.com/comics/wisdom_of_the_ancients.png)\n\n[XKCD](https://xkcd.com/979)\n\n## Two kinds of errors: {.smaller}\n\n-   **Syntactic**\n    -   R doesn't understand how to run your code\n    -   Most common, easy to fix (eventually...)\n\n. . .\n\n-   **Semantic**\n    -   R runs your code but doesn't give you the expected result\n    -   Less common, harder to fix\n\n. . .\n\nMost errors happen because R is looking for something that isn't there.\n\nMore discussion [here](https://github.com/noamross/zero-dependency-problems/blob/master/misc/stack-overflow-common-r-errors.md) and [here](https://blog.revolutionanalytics.com/2015/03/the-most-common-r-error-messages.html)\n\n## Common Syntactic Errors\n\n-   Unmatched parentheses or brackets\n\n-   Misspelled a name\n\n-   Forgot a comma\n\n-   Forgot to install a package or load a library\n\n-   Forgot to set the working directory/path to a file you want R to use.\n\n-   Tried to select a column or row that doesn't exist\n\n## Fixing Syntactic Errors {.smaller}\n\n-   R Studio's script editor will show a red circle with a white x in next to a line of code it thinks has an error in it.\n\n-   Have someone else look at your code (Fresh eyes, [paired programming](https://en.wikipedia.org/wiki/Pair_programming))\n\n-   Copy and paste the \"general part\" of error message into Google.\n\n-   Knit your document after each completed code chunk\n\n    -   This will run the code from top to bottom, and stop when it encounters an error\n    -   Try commenting out the whole chunk, and then uncommenting successive lines of code\n\n-   Be patient. Don't be hard are yourself. Remember, errors are portals of discovery.\n\n## Semantic Errors\n\n-   Your code runs, but doesn't produce what you expected.\n-   Less common; can be harder to identify and fix\n-   One example: Two packages have a function with the same name that do different things\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# dplyr::summarize\n# Hmisc::summarize\n```\n:::\n\n\n## Semantic Errors {.smaller}\n\n-   Some general solutions/practices to avoid semantic errors:\n    -   Specify the package and the function you want: `package_name::function_name()`\n    -   Write helpful comments in your code.\n    -   Include \"sanity\" checks in your code.\n    -   If a function should produce an output that's a data.frame, check to see if it is a data frame\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Here's some pseudo code:\n\n# I expect my_function produces a data frame\nx <- my_function(y) \n\n# Check to see if x is a data frame\n# If x is not a data frame, return an Error\nstopifnot(is.data.frame(x))\n```\n:::\n\n\n# {{< fa magnifying-glass >}} Data Wrangling in R {.inverse}\n\n## Why do we need to \"wrangle\" data\n\n-   Rarely, if ever, do we get data in the exact format we need.\n\n-   Instead, before we can get to work, we often need to transform our data in various ways\n\n-   Sometimes called:\n\n    -   Data cleaning/recoding\n    -   Data wrangling\n    -   Data carpentry\n\n-   The end goal is the same: [make messy data tidy]{.blue}\n\n## Tidy data\n\n-   Every column is a [variable]{.blue}.\n\n-   Every row is an [observation]{.blue}.\n\n-   Every cell is a [single value]{.blue}\n\n## Tools for transforming our data {.smaller}\n\nLast week we used the following functions:\n\n-   `read_csv()` and `data()` to read and load data in R\n\n-   logical operators like `&`, `|`, `%in%` `==`, `!=`, `>`,`>=`,`<`,`<=` to make comparisons\n\n-   the pipe command `%>%` to \"pipe\" the output of one function into another\n\n-   `filter()` to pick observations (rows) by their values\n\n-   `arrange()` to reorder rows\n\n-   `select()` to pick variables by their names\n\n-   `mutate()` and `case_when()` command to create new variables in our data set\n\n-   `summarise()` to collapse many values into a single value (like a mean or median)\n\n-   `group_by()` to apply functions like `mutate()` and `summarise()` on a group-by-group basis\n\n## Common functions for transforming data\n\nAll of these \"verb\" functions from the `dplyr` package (e.g. `filter()`,`mutate()`) follow a similar format:\n\n1.  Their first argument is a data frame\n2.  The subsequent arguments tell R what to do with the data frame, using the variable names (without quotes)\n3.  The output is a new data frame\n\n[More](https://r4ds.had.co.nz/transform.html)\n\n## You trying to get the `%>%`?\n\n![](https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/2444.png){fig-align=\"center\"}\n\n## The pipe command `%>%`\n\n-   The pipe command is way of \"chaining\" lines of code together, piping the results of one `tidyverse` function into the next function.\n\n-   The pipe command works because these functions always expect a data frame as their first argument, and always produce a data frame as their output.\n\n## The pipe command `%>%`\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2|8\"}\nsummarise(\n  data = df,\n  mean = mean(var1, na.rm = T),\n  median = median(var1, na.rm = T)\n )\n# Rewrite with a pipe:\n\ndf %>% \n  summarize(\n    mean = mean(var1, na.rm = T),\n    median = median(var1, na.rm = T)    \n  )\n```\n:::\n\n\n## Wrangling the Covid-19 data\n\nTo work with the Covid-19 data we did the following:\n\n-   Subsetted/Filtered the data to exclude US Territories\n-   Created new variables from existing variables in the data to use in our final analysis\n\n## Wrangling the Covid-19 data {.smaller}\n\nSpecifically, we did the following:\n\n1.  Created an object called `territories` that is a vector containing the names of U.S. territories\n2.  Created a new dataframe, called `covid_us`, by filtering out observations from the U.S. territories\n3.  Created a `state` variable that is a copy of the `administrative_area_level_2`\n4.  Created a variable called `new_cases` from the `confirmed`. Create a variable called `new_cases_pc` that is the number of new Covid-19 cases per 100,000 citizens\n5.  Created a variable called `face_masks` from the `facial_coverings` variable.\n6.  Calculated the average number of new cases, by different levels of `face_masks`\n\n. . .\n\nLet's take some time to make sure we understand everything that was happening.\n\n## Created an object called `territories`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# - 1. Create territories object\n\nterritories <- c(\n  \"American Samoa\",\n  \"Guam\",\n  \"Northern Mariana Islands\",\n  \"Puerto Rico\",\n  \"Virgin Islands\"\n  )\n```\n:::\n\n\n-   The object `territories` now exists in our environment.\n\n## Created a new dataframe, called `covid_us`\n\n::: nonincremental\n::: panel-tabset\n## Task\n\n-   Use the `filter()` command to select only the rows where the `administrative_area_level_2` is not (`!`) in (`%in%`) the `territories` object\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# - 2. Create covid_us data frame\n# How many rows and columns in covid\ndim(covid)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 58809    47\n```\n\n\n:::\n\n```{.r .cell-code}\n# Filter out obs from US territories\ncovid_us <- covid %>%\n  filter(!administrative_area_level_2 %in% territories)\n\n# covid_us should have fewer rows than covid\ndim(covid_us)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 53678    47\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Created a variable called `state`\n\n::: nonincremental\n::: panel-tabset\n## Task\n\nCopy `administrative_area_level_2` into a new variable called `state`\n\n::: callout-note\nNote that we have to [save the output]{.blue} of mutate back into `covid_us` for our `state` to exist as new column in `covid_us`\n:::\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3|4\"}\ndim(covid_us)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 53678    47\n```\n\n\n:::\n\n```{.r .cell-code  code-line-numbers=\"3|4\"}\ncovid_us %>%\n  mutate(\n    state = administrative_area_level_2\n  ) -> covid_us\ndim(covid_us)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 53678    48\n```\n\n\n:::\n\n```{.r .cell-code  code-line-numbers=\"3|4\"}\nnames(covid_us)[48]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"state\"\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Created a variable called `state` {.smaller}\n\nNow there's a new column in `covid_us` called `state`, that we can access by calling `covid_us$state`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us$state[1:5] # Just show first 5 observations\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Minnesota\" \"Minnesota\" \"Minnesota\" \"Minnesota\" \"Minnesota\"\n```\n\n\n:::\n:::\n\n\n. . .\n\nWe could have done the same thing in \"Base\" R\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us$state <- covid_us$administrative_area_level_2\n```\n:::\n\n\n. . .\n\nWhy didn't we?\n\n-   Consistent preference for `tidyverse` \\> `base R`\n-   Saves time when recoding lots of variables\n-   `mutate()` plays nicely with functions like `group_by()`\n\n## Create a variable called `new_cases` from the `confirmed` variable\n\nThe `confirmed` variable contains a running total of confirmed cases in a given state on a given day.\n\n[Vizualing data]{.blue} helps us understand how we might need to transform our data\n\n## Visualize `confirmed` variable for Rhode Island\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(scipen = 999) # No scientific notation\ncovid_us %>% \n  filter(state == \"Rhode Island\") %>% \n  ggplot(aes(\n    x = date,\n    y = confirmed\n  ))+\n  geom_point()+\n  theme_bw() +\n  labs(title = \"Total Covid-19 cases in Rhode Island\",\n       y = \"Total Cases\",\n       x = \"Date\") -> fig_ri_covid\n```\n:::\n\n\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n## Data\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-92b0247ff7eefbb8f8c3\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-92b0247ff7eefbb8f8c3\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\",\"182\",\"183\",\"184\",\"185\",\"186\",\"187\",\"188\",\"189\",\"190\",\"191\",\"192\",\"193\",\"194\",\"195\",\"196\",\"197\",\"198\",\"199\",\"200\",\"201\",\"202\",\"203\",\"204\",\"205\",\"206\",\"207\",\"208\",\"209\",\"210\",\"211\",\"212\",\"213\",\"214\",\"215\",\"216\",\"217\",\"218\",\"219\",\"220\",\"221\",\"222\",\"223\",\"224\",\"225\",\"226\",\"227\",\"228\",\"229\",\"230\",\"231\",\"232\",\"233\",\"234\",\"235\",\"236\",\"237\",\"238\",\"239\",\"240\",\"241\",\"242\",\"243\",\"244\",\"245\",\"246\",\"247\",\"248\",\"249\",\"250\",\"251\",\"252\",\"253\",\"254\",\"255\",\"256\",\"257\",\"258\",\"259\",\"260\",\"261\",\"262\",\"263\",\"264\",\"265\",\"266\",\"267\",\"268\",\"269\",\"270\",\"271\",\"272\",\"273\",\"274\",\"275\",\"276\",\"277\",\"278\",\"279\",\"280\",\"281\",\"282\",\"283\",\"284\",\"285\",\"286\",\"287\",\"288\",\"289\",\"290\",\"291\",\"292\",\"293\",\"294\",\"295\",\"296\",\"297\",\"298\",\"299\",\"300\",\"301\",\"302\",\"303\",\"304\",\"305\",\"306\",\"307\",\"308\",\"309\",\"310\",\"311\",\"312\",\"313\",\"314\",\"315\",\"316\",\"317\",\"318\",\"319\",\"320\",\"321\",\"322\",\"323\",\"324\",\"325\",\"326\",\"327\",\"328\",\"329\",\"330\",\"331\",\"332\",\"333\",\"334\",\"335\",\"336\",\"337\",\"338\",\"339\",\"340\",\"341\",\"342\",\"343\",\"344\",\"345\",\"346\",\"347\",\"348\",\"349\",\"350\",\"351\",\"352\",\"353\",\"354\",\"355\",\"356\",\"357\",\"358\",\"359\",\"360\",\"361\",\"362\",\"363\",\"364\",\"365\",\"366\",\"367\",\"368\",\"369\",\"370\",\"371\",\"372\",\"373\",\"374\",\"375\",\"376\",\"377\",\"378\",\"379\",\"380\",\"381\",\"382\",\"383\",\"384\",\"385\",\"386\",\"387\",\"388\",\"389\",\"390\",\"391\",\"392\",\"393\",\"394\",\"395\",\"396\",\"397\",\"398\",\"399\",\"400\",\"401\",\"402\",\"403\",\"404\",\"405\",\"406\",\"407\",\"408\",\"409\",\"410\",\"411\",\"412\",\"413\",\"414\",\"415\",\"416\",\"417\",\"418\",\"419\",\"420\",\"421\",\"422\",\"423\",\"424\",\"425\",\"426\",\"427\",\"428\",\"429\",\"430\",\"431\",\"432\",\"433\",\"434\",\"435\",\"436\",\"437\",\"438\",\"439\",\"440\",\"441\",\"442\",\"443\",\"444\",\"445\",\"446\",\"447\",\"448\",\"449\",\"450\",\"451\",\"452\",\"453\",\"454\",\"455\",\"456\",\"457\",\"458\",\"459\",\"460\",\"461\",\"462\",\"463\",\"464\",\"465\",\"466\",\"467\",\"468\",\"469\",\"470\",\"471\",\"472\",\"473\",\"474\",\"475\",\"476\",\"477\",\"478\",\"479\",\"480\",\"481\",\"482\",\"483\",\"484\",\"485\",\"486\",\"487\",\"488\",\"489\",\"490\",\"491\",\"492\",\"493\",\"494\",\"495\",\"496\",\"497\",\"498\",\"499\",\"500\",\"501\",\"502\",\"503\",\"504\",\"505\",\"506\",\"507\",\"508\",\"509\",\"510\",\"511\",\"512\",\"513\",\"514\",\"515\",\"516\",\"517\",\"518\",\"519\",\"520\",\"521\",\"522\",\"523\",\"524\",\"525\",\"526\",\"527\",\"528\",\"529\",\"530\",\"531\",\"532\",\"533\",\"534\",\"535\",\"536\",\"537\",\"538\",\"539\",\"540\",\"541\",\"542\",\"543\",\"544\",\"545\",\"546\",\"547\",\"548\",\"549\",\"550\",\"551\",\"552\",\"553\",\"554\",\"555\",\"556\",\"557\",\"558\",\"559\",\"560\",\"561\",\"562\",\"563\",\"564\",\"565\",\"566\",\"567\",\"568\",\"569\",\"570\",\"571\",\"572\",\"573\",\"574\",\"575\",\"576\",\"577\",\"578\",\"579\",\"580\",\"581\",\"582\",\"583\",\"584\",\"585\",\"586\",\"587\",\"588\",\"589\",\"590\",\"591\",\"592\",\"593\",\"594\",\"595\",\"596\",\"597\",\"598\",\"599\",\"600\",\"601\",\"602\",\"603\",\"604\",\"605\",\"606\",\"607\",\"608\",\"609\",\"610\",\"611\",\"612\",\"613\",\"614\",\"615\",\"616\",\"617\",\"618\",\"619\",\"620\",\"621\",\"622\",\"623\",\"624\",\"625\",\"626\",\"627\",\"628\",\"629\",\"630\",\"631\",\"632\",\"633\",\"634\",\"635\",\"636\",\"637\",\"638\",\"639\",\"640\",\"641\",\"642\",\"643\",\"644\",\"645\",\"646\",\"647\",\"648\",\"649\",\"650\",\"651\",\"652\",\"653\",\"654\",\"655\",\"656\",\"657\",\"658\",\"659\",\"660\",\"661\",\"662\",\"663\",\"664\",\"665\",\"666\",\"667\",\"668\",\"669\",\"670\",\"671\",\"672\",\"673\",\"674\",\"675\",\"676\",\"677\",\"678\",\"679\",\"680\",\"681\",\"682\",\"683\",\"684\",\"685\",\"686\",\"687\",\"688\",\"689\",\"690\",\"691\",\"692\",\"693\",\"694\",\"695\",\"696\",\"697\",\"698\",\"699\",\"700\",\"701\",\"702\",\"703\",\"704\",\"705\",\"706\",\"707\",\"708\",\"709\",\"710\",\"711\",\"712\",\"713\",\"714\",\"715\",\"716\",\"717\",\"718\",\"719\",\"720\",\"721\",\"722\",\"723\",\"724\",\"725\",\"726\",\"727\",\"728\",\"729\",\"730\",\"731\",\"732\",\"733\",\"734\",\"735\",\"736\",\"737\",\"738\",\"739\",\"740\",\"741\",\"742\",\"743\",\"744\",\"745\",\"746\",\"747\",\"748\",\"749\",\"750\",\"751\",\"752\",\"753\",\"754\",\"755\",\"756\",\"757\",\"758\",\"759\",\"760\",\"761\",\"762\",\"763\",\"764\",\"765\",\"766\",\"767\",\"768\",\"769\",\"770\",\"771\",\"772\",\"773\",\"774\",\"775\",\"776\",\"777\",\"778\",\"779\",\"780\",\"781\",\"782\",\"783\",\"784\",\"785\",\"786\",\"787\",\"788\",\"789\",\"790\",\"791\",\"792\",\"793\",\"794\",\"795\",\"796\",\"797\",\"798\",\"799\",\"800\",\"801\",\"802\",\"803\",\"804\",\"805\",\"806\",\"807\",\"808\",\"809\",\"810\",\"811\",\"812\",\"813\",\"814\",\"815\",\"816\",\"817\",\"818\",\"819\",\"820\",\"821\",\"822\",\"823\",\"824\",\"825\",\"826\",\"827\",\"828\",\"829\",\"830\",\"831\",\"832\",\"833\",\"834\",\"835\",\"836\",\"837\",\"838\",\"839\",\"840\",\"841\",\"842\",\"843\",\"844\",\"845\",\"846\",\"847\",\"848\",\"849\",\"850\",\"851\",\"852\",\"853\",\"854\",\"855\",\"856\",\"857\",\"858\",\"859\",\"860\",\"861\",\"862\",\"863\",\"864\",\"865\",\"866\",\"867\",\"868\",\"869\",\"870\",\"871\",\"872\",\"873\",\"874\",\"875\",\"876\",\"877\",\"878\",\"879\",\"880\",\"881\",\"882\",\"883\",\"884\",\"885\",\"886\",\"887\",\"888\",\"889\",\"890\",\"891\",\"892\",\"893\",\"894\",\"895\",\"896\",\"897\",\"898\",\"899\",\"900\",\"901\",\"902\",\"903\",\"904\",\"905\",\"906\",\"907\",\"908\",\"909\",\"910\",\"911\",\"912\",\"913\",\"914\",\"915\",\"916\",\"917\",\"918\",\"919\",\"920\",\"921\",\"922\",\"923\",\"924\",\"925\",\"926\",\"927\",\"928\",\"929\",\"930\",\"931\",\"932\",\"933\",\"934\",\"935\",\"936\",\"937\",\"938\",\"939\",\"940\",\"941\",\"942\",\"943\",\"944\",\"945\",\"946\",\"947\",\"948\",\"949\",\"950\",\"951\",\"952\",\"953\",\"954\",\"955\",\"956\",\"957\",\"958\",\"959\",\"960\",\"961\",\"962\",\"963\",\"964\",\"965\",\"966\",\"967\",\"968\",\"969\",\"970\",\"971\",\"972\",\"973\",\"974\",\"975\",\"976\",\"977\",\"978\",\"979\",\"980\",\"981\",\"982\",\"983\",\"984\",\"985\",\"986\",\"987\",\"988\",\"989\",\"990\",\"991\",\"992\",\"993\",\"994\",\"995\",\"996\",\"997\",\"998\",\"999\",\"1000\",\"1001\",\"1002\",\"1003\",\"1004\",\"1005\",\"1006\",\"1007\",\"1008\",\"1009\",\"1010\",\"1011\",\"1012\",\"1013\",\"1014\",\"1015\",\"1016\",\"1017\",\"1018\",\"1019\",\"1020\",\"1021\",\"1022\",\"1023\",\"1024\",\"1025\",\"1026\",\"1027\",\"1028\",\"1029\",\"1030\",\"1031\",\"1032\",\"1033\",\"1034\",\"1035\",\"1036\"],[\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\"],[\"2020-03-01\",\"2020-03-02\",\"2020-03-03\",\"2020-03-04\",\"2020-03-05\",\"2020-03-06\",\"2020-03-07\",\"2020-03-08\",\"2020-03-09\",\"2020-03-10\",\"2020-03-11\",\"2020-03-12\",\"2020-03-13\",\"2020-03-14\",\"2020-03-15\",\"2020-03-16\",\"2020-03-17\",\"2020-03-18\",\"2020-03-19\",\"2020-03-20\",\"2020-03-21\",\"2020-03-22\",\"2020-03-23\",\"2020-03-24\",\"2020-03-25\",\"2020-03-26\",\"2020-03-27\",\"2020-03-28\",\"2020-03-29\",\"2020-03-30\",\"2020-03-31\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-10\",\"2020-04-11\",\"2020-04-12\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-18\",\"2020-04-19\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-25\",\"2020-04-26\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-02\",\"2020-05-03\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-09\",\"2020-05-10\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-16\",\"2020-05-17\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-23\",\"2020-05-24\",\"2020-05-25\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-05-30\",\"2020-05-31\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-06\",\"2020-06-07\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-13\",\"2020-06-14\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-20\",\"2020-06-21\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-27\",\"2020-06-28\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-11\",\"2020-07-12\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-18\",\"2020-07-19\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-25\",\"2020-07-26\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-01\",\"2020-08-02\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-08\",\"2020-08-09\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-15\",\"2020-08-16\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-22\",\"2020-08-23\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-29\",\"2020-08-30\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-05\",\"2020-09-06\",\"2020-09-07\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-12\",\"2020-09-13\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-19\",\"2020-09-20\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-26\",\"2020-09-27\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-03\",\"2020-10-04\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-10\",\"2020-10-11\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-17\",\"2020-10-18\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-24\",\"2020-10-25\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\",\"2020-10-30\",\"2020-10-31\",\"2020-11-01\",\"2020-11-02\",\"2020-11-03\",\"2020-11-04\",\"2020-11-05\",\"2020-11-06\",\"2020-11-07\",\"2020-11-08\",\"2020-11-09\",\"2020-11-10\",\"2020-11-11\",\"2020-11-12\",\"2020-11-13\",\"2020-11-14\",\"2020-11-15\",\"2020-11-16\",\"2020-11-17\",\"2020-11-18\",\"2020-11-19\",\"2020-11-20\",\"2020-11-21\",\"2020-11-22\",\"2020-11-23\",\"2020-11-24\",\"2020-11-25\",\"2020-11-26\",\"2020-11-27\",\"2020-11-28\",\"2020-11-29\",\"2020-11-30\",\"2020-12-01\",\"2020-12-02\",\"2020-12-03\",\"2020-12-04\",\"2020-12-05\",\"2020-12-06\",\"2020-12-07\",\"2020-12-08\",\"2020-12-09\",\"2020-12-10\",\"2020-12-11\",\"2020-12-12\",\"2020-12-13\",\"2020-12-14\",\"2020-12-15\",\"2020-12-16\",\"2020-12-17\",\"2020-12-18\",\"2020-12-19\",\"2020-12-20\",\"2020-12-21\",\"2020-12-22\",\"2020-12-23\",\"2020-12-24\",\"2020-12-25\",\"2020-12-26\",\"2020-12-27\",\"2020-12-28\",\"2020-12-29\",\"2020-12-30\",\"2020-12-31\",\"2021-01-01\",\"2021-01-02\",\"2021-01-03\",\"2021-01-04\",\"2021-01-05\",\"2021-01-06\",\"2021-01-07\",\"2021-01-08\",\"2021-01-09\",\"2021-01-10\",\"2021-01-11\",\"2021-01-12\",\"2021-01-13\",\"2021-01-14\",\"2021-01-15\",\"2021-01-16\",\"2021-01-17\",\"2021-01-18\",\"2021-01-19\",\"2021-01-20\",\"2021-01-21\",\"2021-01-22\",\"2021-01-23\",\"2021-01-24\",\"2021-01-25\",\"2021-01-26\",\"2021-01-27\",\"2021-01-28\",\"2021-01-29\",\"2021-01-30\",\"2021-01-31\",\"2021-02-01\",\"2021-02-02\",\"2021-02-03\",\"2021-02-04\",\"2021-02-05\",\"2021-02-06\",\"2021-02-07\",\"2021-02-08\",\"2021-02-09\",\"2021-02-10\",\"2021-02-11\",\"2021-02-12\",\"2021-02-13\",\"2021-02-14\",\"2021-02-15\",\"2021-02-16\",\"2021-02-17\",\"2021-02-18\",\"2021-02-19\",\"2021-02-20\",\"2021-02-21\",\"2021-02-22\",\"2021-02-23\",\"2021-02-24\",\"2021-02-25\",\"2021-02-26\",\"2021-02-27\",\"2021-02-28\",\"2021-03-01\",\"2021-03-02\",\"2021-03-03\",\"2021-03-04\",\"2021-03-05\",\"2021-03-06\",\"2021-03-07\",\"2021-03-08\",\"2021-03-09\",\"2021-03-10\",\"2021-03-11\",\"2021-03-12\",\"2021-03-13\",\"2021-03-14\",\"2021-03-15\",\"2021-03-16\",\"2021-03-17\",\"2021-03-18\",\"2021-03-19\",\"2021-03-20\",\"2021-03-21\",\"2021-03-22\",\"2021-03-23\",\"2021-03-24\",\"2021-03-25\",\"2021-03-26\",\"2021-03-27\",\"2021-03-28\",\"2021-03-29\",\"2021-03-30\",\"2021-03-31\",\"2021-04-01\",\"2021-04-02\",\"2021-04-03\",\"2021-04-04\",\"2021-04-05\",\"2021-04-06\",\"2021-04-07\",\"2021-04-08\",\"2021-04-09\",\"2021-04-10\",\"2021-04-11\",\"2021-04-12\",\"2021-04-13\",\"2021-04-14\",\"2021-04-15\",\"2021-04-16\",\"2021-04-17\",\"2021-04-18\",\"2021-04-19\",\"2021-04-20\",\"2021-04-21\",\"2021-04-22\",\"2021-04-23\",\"2021-04-24\",\"2021-04-25\",\"2021-04-26\",\"2021-04-27\",\"2021-04-28\",\"2021-04-29\",\"2021-04-30\",\"2021-05-01\",\"2021-05-02\",\"2021-05-03\",\"2021-05-04\",\"2021-05-05\",\"2021-05-06\",\"2021-05-07\",\"2021-05-08\",\"2021-05-09\",\"2021-05-10\",\"2021-05-11\",\"2021-05-12\",\"2021-05-13\",\"2021-05-14\",\"2021-05-15\",\"2021-05-16\",\"2021-05-17\",\"2021-05-18\",\"2021-05-19\",\"2021-05-20\",\"2021-05-21\",\"2021-05-22\",\"2021-05-23\",\"2021-05-24\",\"2021-05-25\",\"2021-05-26\",\"2021-05-27\",\"2021-05-28\",\"2021-05-29\",\"2021-05-30\",\"2021-05-31\",\"2021-06-01\",\"2021-06-02\",\"2021-06-03\",\"2021-06-04\",\"2021-06-05\",\"2021-06-06\",\"2021-06-07\",\"2021-06-08\",\"2021-06-09\",\"2021-06-10\",\"2021-06-11\",\"2021-06-12\",\"2021-06-13\",\"2021-06-14\",\"2021-06-15\",\"2021-06-16\",\"2021-06-17\",\"2021-06-18\",\"2021-06-19\",\"2021-06-20\",\"2021-06-21\",\"2021-06-22\",\"2021-06-23\",\"2021-06-24\",\"2021-06-25\",\"2021-06-26\",\"2021-06-27\",\"2021-06-28\",\"2021-06-29\",\"2021-06-30\",\"2021-07-01\",\"2021-07-02\",\"2021-07-03\",\"2021-07-04\",\"2021-07-05\",\"2021-07-06\",\"2021-07-07\",\"2021-07-08\",\"2021-07-09\",\"2021-07-10\",\"2021-07-11\",\"2021-07-12\",\"2021-07-13\",\"2021-07-14\",\"2021-07-15\",\"2021-07-16\",\"2021-07-17\",\"2021-07-18\",\"2021-07-19\",\"2021-07-20\",\"2021-07-21\",\"2021-07-22\",\"2021-07-23\",\"2021-07-24\",\"2021-07-25\",\"2021-07-26\",\"2021-07-27\",\"2021-07-28\",\"2021-07-29\",\"2021-07-30\",\"2021-07-31\",\"2021-08-01\",\"2021-08-02\",\"2021-08-03\",\"2021-08-04\",\"2021-08-05\",\"2021-08-06\",\"2021-08-07\",\"2021-08-08\",\"2021-08-09\",\"2021-08-10\",\"2021-08-11\",\"2021-08-12\",\"2021-08-13\",\"2021-08-14\",\"2021-08-15\",\"2021-08-16\",\"2021-08-17\",\"2021-08-18\",\"2021-08-19\",\"2021-08-20\",\"2021-08-21\",\"2021-08-22\",\"2021-08-23\",\"2021-08-24\",\"2021-08-25\",\"2021-08-26\",\"2021-08-27\",\"2021-08-28\",\"2021-08-29\",\"2021-08-30\",\"2021-08-31\",\"2021-09-01\",\"2021-09-02\",\"2021-09-03\",\"2021-09-04\",\"2021-09-05\",\"2021-09-06\",\"2021-09-07\",\"2021-09-08\",\"2021-09-09\",\"2021-09-10\",\"2021-09-11\",\"2021-09-12\",\"2021-09-13\",\"2021-09-14\",\"2021-09-15\",\"2021-09-16\",\"2021-09-17\",\"2021-09-18\",\"2021-09-19\",\"2021-09-20\",\"2021-09-21\",\"2021-09-22\",\"2021-09-23\",\"2021-09-24\",\"2021-09-25\",\"2021-09-26\",\"2021-09-27\",\"2021-09-28\",\"2021-09-29\",\"2021-09-30\",\"2021-10-01\",\"2021-10-02\",\"2021-10-03\",\"2021-10-04\",\"2021-10-05\",\"2021-10-06\",\"2021-10-07\",\"2021-10-08\",\"2021-10-09\",\"2021-10-10\",\"2021-10-11\",\"2021-10-12\",\"2021-10-13\",\"2021-10-14\",\"2021-10-15\",\"2021-10-16\",\"2021-10-17\",\"2021-10-18\",\"2021-10-19\",\"2021-10-20\",\"2021-10-21\",\"2021-10-22\",\"2021-10-23\",\"2021-10-24\",\"2021-10-25\",\"2021-10-26\",\"2021-10-27\",\"2021-10-28\",\"2021-10-29\",\"2021-10-30\",\"2021-10-31\",\"2021-11-01\",\"2021-11-02\",\"2021-11-03\",\"2021-11-04\",\"2021-11-05\",\"2021-11-06\",\"2021-11-07\",\"2021-11-08\",\"2021-11-09\",\"2021-11-10\",\"2021-11-11\",\"2021-11-12\",\"2021-11-13\",\"2021-11-14\",\"2021-11-15\",\"2021-11-16\",\"2021-11-17\",\"2021-11-18\",\"2021-11-19\",\"2021-11-20\",\"2021-11-21\",\"2021-11-22\",\"2021-11-23\",\"2021-11-24\",\"2021-11-25\",\"2021-11-26\",\"2021-11-27\",\"2021-11-28\",\"2021-11-29\",\"2021-11-30\",\"2021-12-01\",\"2021-12-02\",\"2021-12-03\",\"2021-12-04\",\"2021-12-05\",\"2021-12-06\",\"2021-12-07\",\"2021-12-08\",\"2021-12-09\",\"2021-12-10\",\"2021-12-11\",\"2021-12-12\",\"2021-12-13\",\"2021-12-14\",\"2021-12-15\",\"2021-12-16\",\"2021-12-17\",\"2021-12-18\",\"2021-12-19\",\"2021-12-20\",\"2021-12-21\",\"2021-12-22\",\"2021-12-23\",\"2021-12-24\",\"2021-12-25\",\"2021-12-26\",\"2021-12-27\",\"2021-12-28\",\"2021-12-29\",\"2021-12-30\",\"2021-12-31\",\"2022-01-01\",\"2022-01-02\",\"2022-01-03\",\"2022-01-04\",\"2022-01-05\",\"2022-01-06\",\"2022-01-07\",\"2022-01-08\",\"2022-01-09\",\"2022-01-10\",\"2022-01-11\",\"2022-01-12\",\"2022-01-13\",\"2022-01-14\",\"2022-01-15\",\"2022-01-16\",\"2022-01-17\",\"2022-01-18\",\"2022-01-19\",\"2022-01-20\",\"2022-01-21\",\"2022-01-22\",\"2022-01-23\",\"2022-01-24\",\"2022-01-25\",\"2022-01-26\",\"2022-01-27\",\"2022-01-28\",\"2022-01-29\",\"2022-01-30\",\"2022-01-31\",\"2022-02-01\",\"2022-02-02\",\"2022-02-03\",\"2022-02-04\",\"2022-02-05\",\"2022-02-06\",\"2022-02-07\",\"2022-02-08\",\"2022-02-09\",\"2022-02-10\",\"2022-02-11\",\"2022-02-12\",\"2022-02-13\",\"2022-02-14\",\"2022-02-15\",\"2022-02-16\",\"2022-02-17\",\"2022-02-18\",\"2022-02-19\",\"2022-02-20\",\"2022-02-21\",\"2022-02-22\",\"2022-02-23\",\"2022-02-24\",\"2022-02-25\",\"2022-02-26\",\"2022-02-27\",\"2022-02-28\",\"2022-03-01\",\"2022-03-02\",\"2022-03-03\",\"2022-03-04\",\"2022-03-05\",\"2022-03-06\",\"2022-03-07\",\"2022-03-08\",\"2022-03-09\",\"2022-03-10\",\"2022-03-11\",\"2022-03-12\",\"2022-03-13\",\"2022-03-14\",\"2022-03-15\",\"2022-03-16\",\"2022-03-17\",\"2022-03-18\",\"2022-03-19\",\"2022-03-20\",\"2022-03-21\",\"2022-03-22\",\"2022-03-23\",\"2022-03-24\",\"2022-03-25\",\"2022-03-26\",\"2022-03-27\",\"2022-03-28\",\"2022-03-29\",\"2022-03-30\",\"2022-03-31\",\"2022-04-01\",\"2022-04-02\",\"2022-04-03\",\"2022-04-04\",\"2022-04-05\",\"2022-04-06\",\"2022-04-07\",\"2022-04-08\",\"2022-04-09\",\"2022-04-10\",\"2022-04-11\",\"2022-04-12\",\"2022-04-13\",\"2022-04-14\",\"2022-04-15\",\"2022-04-16\",\"2022-04-17\",\"2022-04-18\",\"2022-04-19\",\"2022-04-20\",\"2022-04-21\",\"2022-04-22\",\"2022-04-23\",\"2022-04-24\",\"2022-04-25\",\"2022-04-26\",\"2022-04-27\",\"2022-04-28\",\"2022-04-29\",\"2022-04-30\",\"2022-05-01\",\"2022-05-02\",\"2022-05-03\",\"2022-05-04\",\"2022-05-05\",\"2022-05-06\",\"2022-05-07\",\"2022-05-08\",\"2022-05-09\",\"2022-05-10\",\"2022-05-11\",\"2022-05-12\",\"2022-05-13\",\"2022-05-14\",\"2022-05-15\",\"2022-05-16\",\"2022-05-17\",\"2022-05-18\",\"2022-05-19\",\"2022-05-20\",\"2022-05-21\",\"2022-05-22\",\"2022-05-23\",\"2022-05-24\",\"2022-05-25\",\"2022-05-26\",\"2022-05-27\",\"2022-05-28\",\"2022-05-29\",\"2022-05-30\",\"2022-05-31\",\"2022-06-01\",\"2022-06-02\",\"2022-06-03\",\"2022-06-04\",\"2022-06-05\",\"2022-06-06\",\"2022-06-07\",\"2022-06-08\",\"2022-06-09\",\"2022-06-10\",\"2022-06-11\",\"2022-06-12\",\"2022-06-13\",\"2022-06-14\",\"2022-06-15\",\"2022-06-16\",\"2022-06-17\",\"2022-06-18\",\"2022-06-19\",\"2022-06-20\",\"2022-06-21\",\"2022-06-22\",\"2022-06-23\",\"2022-06-24\",\"2022-06-25\",\"2022-06-26\",\"2022-06-27\",\"2022-06-28\",\"2022-06-29\",\"2022-06-30\",\"2022-07-01\",\"2022-07-02\",\"2022-07-03\",\"2022-07-04\",\"2022-07-05\",\"2022-07-06\",\"2022-07-07\",\"2022-07-08\",\"2022-07-09\",\"2022-07-10\",\"2022-07-11\",\"2022-07-12\",\"2022-07-13\",\"2022-07-14\",\"2022-07-15\",\"2022-07-16\",\"2022-07-17\",\"2022-07-18\",\"2022-07-19\",\"2022-07-20\",\"2022-07-21\",\"2022-07-22\",\"2022-07-23\",\"2022-07-24\",\"2022-07-25\",\"2022-07-26\",\"2022-07-27\",\"2022-07-28\",\"2022-07-29\",\"2022-07-30\",\"2022-07-31\",\"2022-08-01\",\"2022-08-02\",\"2022-08-03\",\"2022-08-04\",\"2022-08-05\",\"2022-08-06\",\"2022-08-07\",\"2022-08-08\",\"2022-08-09\",\"2022-08-10\",\"2022-08-11\",\"2022-08-12\",\"2022-08-13\",\"2022-08-14\",\"2022-08-15\",\"2022-08-16\",\"2022-08-17\",\"2022-08-18\",\"2022-08-19\",\"2022-08-20\",\"2022-08-21\",\"2022-08-22\",\"2022-08-23\",\"2022-08-24\",\"2022-08-25\",\"2022-08-26\",\"2022-08-27\",\"2022-08-28\",\"2022-08-29\",\"2022-08-30\",\"2022-08-31\",\"2022-09-01\",\"2022-09-02\",\"2022-09-03\",\"2022-09-04\",\"2022-09-05\",\"2022-09-06\",\"2022-09-07\",\"2022-09-08\",\"2022-09-09\",\"2022-09-10\",\"2022-09-11\",\"2022-09-12\",\"2022-09-13\",\"2022-09-14\",\"2022-09-15\",\"2022-09-16\",\"2022-09-17\",\"2022-09-18\",\"2022-09-19\",\"2022-09-20\",\"2022-09-21\",\"2022-09-22\",\"2022-09-23\",\"2022-09-24\",\"2022-09-25\",\"2022-09-26\",\"2022-09-27\",\"2022-09-28\",\"2022-09-29\",\"2022-09-30\",\"2022-10-01\",\"2022-10-02\",\"2022-10-03\",\"2022-10-04\",\"2022-10-05\",\"2022-10-06\",\"2022-10-07\",\"2022-10-08\",\"2022-10-09\",\"2022-10-10\",\"2022-10-11\",\"2022-10-12\",\"2022-10-13\",\"2022-10-14\",\"2022-10-15\",\"2022-10-16\",\"2022-10-17\",\"2022-10-18\",\"2022-10-19\",\"2022-10-20\",\"2022-10-21\",\"2022-10-22\",\"2022-10-23\",\"2022-10-24\",\"2022-10-25\",\"2022-10-26\",\"2022-10-27\",\"2022-10-28\",\"2022-10-29\",\"2022-10-30\",\"2022-10-31\",\"2022-11-01\",\"2022-11-02\",\"2022-11-03\",\"2022-11-04\",\"2022-11-05\",\"2022-11-06\",\"2022-11-07\",\"2022-11-08\",\"2022-11-09\",\"2022-11-10\",\"2022-11-11\",\"2022-11-12\",\"2022-11-13\",\"2022-11-14\",\"2022-11-15\",\"2022-11-16\",\"2022-11-17\",\"2022-11-18\",\"2022-11-19\",\"2022-11-20\",\"2022-11-21\",\"2022-11-22\",\"2022-11-23\",\"2022-11-24\",\"2022-11-25\",\"2022-11-26\",\"2022-11-27\",\"2022-11-28\",\"2022-11-29\",\"2022-11-30\",\"2022-12-01\",\"2022-12-02\",\"2022-12-03\",\"2022-12-04\",\"2022-12-05\",\"2022-12-06\",\"2022-12-07\",\"2022-12-08\",\"2022-12-09\",\"2022-12-10\",\"2022-12-11\",\"2022-12-12\",\"2022-12-13\",\"2022-12-14\",\"2022-12-15\",\"2022-12-16\",\"2022-12-17\",\"2022-12-18\",\"2022-12-19\",\"2022-12-20\",\"2022-12-21\",\"2022-12-22\",\"2022-12-23\",\"2022-12-24\",\"2022-12-25\",\"2022-12-26\",\"2022-12-27\",\"2022-12-28\",\"2022-12-29\",\"2022-12-30\",\"2022-12-31\"],[2,2,2,2,2,3,3,3,3,5,5,5,20,20,20,21,23,33,44,44,66,83,106,124,132,165,203,239,294,408,488,566,657,711,806,922,1082,1229,1450,1727,2015,2349,2665,2976,3251,3529,3838,4177,4491,4706,5090,5500,5841,6256,6699,7129,7439,7708,7926,8247,8621,8962,9289,9477,9652,9933,10205,10530,10779,10989,11274,11450,11614,11835,12016,12219,12434,12674,12795,12951,13356,13571,13736,13952,14065,14065,14210,14353,14494,14635,14819,14928,14991,15112,15219,15325,15441,15441,15441,15642,15691,15756,15862,15947,15947,15947,16093,16164,16213,16269,16337,16337,16337,16459,16533,16606,16640,16661,16661,16661,16764,16813,16853,16941,16991,16991,16991,16991,17154,17204,17243,17312,17312,17312,17487,17588,17640,17711,17793,17793,17793,17904,17986,18062,18148,18224,18224,18224,18515,18725,18800,18950,19022,19022,19022,19246,19390,19481,19611,19738,19738,19738,19934,20053,20129,20240,20335,20335,20335,20572,20692,20795,20871,21022,21022,21022,21302,21372,21454,21589,21683,21683,21683,21949,22002,22078,22143,22243,22243,22243,22243,22592,22676,22782,22905,22905,22905,23130,23250,23358,23488,23620,23620,23620,23932,24044,24177,24311,24181,24181,24181,24424,24556,24748,24914,25076,25076,25076,25419,25596,25776,26045,26294,26294,26294,26294,26960,27164,27438,27691,27691,27691,28347,28649,29123,29594,30118,30118,30118,31024,31445,31944,32312,32874,32874,32874,34120,34543,35122,35750,36380,36380,36380,38009,38798,39776,40764,41529,41529,41529,43923,44528,45911,46951,48001,48001,48001,50573,51424,52317,52317,53954,53954,53954,56723,57906,59005,60722,62137,62137,62137,65818,67067,68299,69247,70818,70818,70818,74071,75237,76209,77290,77812,77812,77812,80231,81187,82066,82066,82066,82066,82066,85602,86789,87949,87949,87949,87949,87949,92708,93852,95463,96591,97614,97614,97614,100607,101393,102485,103386,104443,104443,104443,104443,107066,107876,108786,109735,109735,109735,111754,112396,113009,113754,114438,114438,114438,115956,116191,116704,117291,117891,117891,117891,119104,119434,119893,120381,120821,120821,120821,121787,122072,122440,122859,123145,123145,123145,123980,124262,124718,125185,125622,125622,125622,126588,126849,127285,127727,128121,128121,128121,128981,129277,129595,130120,130502,130502,130502,131487,131750,132184,132616,133039,133039,133039,134039,134336,134807,135290,135775,135775,135775,136419,136765,137329,137848,138255,138255,138255,139173,139549,140025,140534,141097,141097,141097,141097,142774,143251,143740,144149,144149,144149,144966,145358,145647,146028,146324,146324,146324,146960,147220,147601,147897,148186,148186,148186,148669,148929,149197,149384,149577,149577,149577,149948,150097,150252,150231,150385,150385,150385,150648,150737,150737,150948,151258,151258,151258,151440,151502,151580,151691,151743,151743,151743,151743,151844,151895,151936,151992,151992,151992,152074,152106,152153,152187,152213,152213,152213,152273,152306,152333,152359,152383,152383,152383,152429,152443,152481,152501,152514,152514,152514,152567,152589,152613,152618,152643,152643,152643,152643,152698,152738,152748,152729,152729,152729,152819,152842,152873,152927,152971,152971,152971,153103,153168,153269,153355,153447,153447,153447,153697,153802,153954,154153,154339,154339,154339,154790,154985,155287,155527,155825,155825,155825,155825,156539,156824,157188,157589,157589,157589,158283,158614,159019,159355,159710,159710,159710,160329,160565,160948,161303,161701,161701,161701,162325,162617,162969,163388,163742,163742,163742,163742,164648,165083,165454,165849,165849,165849,166811,167245,167653,167975,168449,168449,168449,169350,169686,170009,170293,170700,170700,170700,171451,171751,172064,172361,172719,172719,172719,173357,173603,173937,174171,174570,174570,174570,174570,175487,175777,176090,176405,176405,176405,177052,177280,177508,177804,177998,177998,177998,178461,178646,178907,179171,179405,179405,179405,179963,180187,180488,180809,181079,181079,181079,181835,182175,182486,182486,183257,183257,183257,184220,184777,185254,185799,186387,186387,186387,187531,188135,188561,188561,188561,188561,188561,190975,191763,192741,193714,194858,194858,194858,196949,198036,198729,200197,201275,201275,201275,203708,204954,206357,207556,208753,208753,208753,212715,213730,215541,217228,217228,217228,217228,217228,223985,227178,231096,231096,231096,231096,231096,247324,253192,260110,266066,266066,266066,279831,284907,290634,296304,302109,302109,302109,313700,317344,320617,324234,327109,327109,327109,332961,334581,337659,339571,341407,341407,341407,343779,344841,345836,347041,347901,347901,347901,349499,350080,350715,351334,351844,351844,351844,352794,353048,353377,353776,354045,354045,354045,354617,354817,355014,355294,355509,355509,355509,355925,356095,356436,356627,356783,356783,356783,357136,357266,357440,357647,357802,357802,357802,358209,358429,358637,358880,359064,359064,359064,359470,359610,359823,360016,360172,360172,360172,360594,360759,360959,361262,361508,361508,361508,362000,362267,362635,363033,363372,363372,363372,364184,364648,365009,365548,365880,365880,365880,366740,367095,367413,367902,368246,368246,368246,369234,369723,370262,370920,371629,371629,371629,372866,373437,374181,375119,375897,375897,375897,377576,378424,379414,380384,381271,381271,381271,383209,384187,385153,386196,387083,387083,387083,388586,389305,389901,390639,391275,391275,391275,391275,392790,393415,393888,394573,394573,394573,395410,395945,396329,396773,397187,397187,397187,397758,398242,398622,398981,399282,399282,399282,399860,400168,400454,400834,401108,401108,401108,401688,402024,402371,402769,403052,403052,403052,403052,403677,403956,404204,404604,404604,404604,404604,405589,405974,406321,406668,406668,406668,407309,407575,407886,408203,408532,408532,408532,409171,409452,409731,410066,410399,410399,410399,411141,411453,411760,412179,412477,412477,412477,412477,412477,412477,413259,413259,413259,413259,413259,413259,413259,414931,414931,414931,414931,414931,414931,414931,416638,416638,416638,416638,416638,416638,416638,418635,418635,418635,418635,418635,418635,418635,420175,420175,420175,420175,420175,420175,420175,421739,421739,421739,421739,421739,421739,421739,423563,423563,423563,423563,423563,423563,423563,425461,425461,425461,425461,425461,425461,425461,427242,427242,427242,427242,427242,427242,427242,428874,428874,428874,428874,428874,428874,428874,430636,430636,430636,430636,430636,430636,430636,432042,432042,432042,432042,432042,432042,432042,433348,433348,433348,433348,433348,433348,433348,434653,434653,434653,434653,434653,434653,434653,435778,435778,435778,435778,435778,435778,436904,436904,436904,436904,436904,436904,436904,436904,437972,437972,437972,437972,437972,437972,437972,439773,439773,439773,439773,439773,439773,439773,441692,441692,441692,441692,441692,441692,441692,443645,443645,443645,443645,443645,443645,443645,443645,443645,443645]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>state<\\/th>\\n      <th>date<\\/th>\\n      <th>confirmed<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"state\",\"targets\":1},{\"name\":\"date\",\"targets\":2},{\"name\":\"confirmed\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n:::\n\n## Create a variable called `new_cases` from the `confirmed` variable {.smaller}\n\n::: panel-tabset\n## Task\n\nTake the difference between a given day's value of `confirmed` and yesterday's value of `confirmed` to create a measure of `new_cases` on a given date for each state\n\n::: callout-note\n-   Use `lag()` to shift values in a column down one row in the data\n-   Use `group_by()` to respect the state-date structure of the data\n:::\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>%\n  dplyr::group_by(state) %>%\n  mutate(\n    new_cases = confirmed - lag(confirmed)\n  ) -> covid_us\n```\n:::\n\n\n## Data\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-0c9b5b7b56df99e58383\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0c9b5b7b56df99e58383\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\",\"182\",\"183\",\"184\",\"185\",\"186\",\"187\",\"188\",\"189\",\"190\",\"191\",\"192\",\"193\",\"194\",\"195\",\"196\",\"197\",\"198\",\"199\",\"200\",\"201\",\"202\",\"203\",\"204\",\"205\",\"206\",\"207\",\"208\",\"209\",\"210\",\"211\",\"212\",\"213\",\"214\",\"215\",\"216\",\"217\",\"218\",\"219\",\"220\",\"221\",\"222\",\"223\",\"224\",\"225\",\"226\",\"227\",\"228\",\"229\",\"230\",\"231\",\"232\",\"233\",\"234\",\"235\",\"236\",\"237\",\"238\",\"239\",\"240\",\"241\",\"242\",\"243\",\"244\",\"245\",\"246\",\"247\",\"248\",\"249\",\"250\",\"251\",\"252\",\"253\",\"254\",\"255\",\"256\",\"257\",\"258\",\"259\",\"260\",\"261\",\"262\",\"263\",\"264\",\"265\",\"266\",\"267\",\"268\",\"269\",\"270\",\"271\",\"272\",\"273\",\"274\",\"275\",\"276\",\"277\",\"278\",\"279\",\"280\",\"281\",\"282\",\"283\",\"284\",\"285\",\"286\",\"287\",\"288\",\"289\",\"290\",\"291\",\"292\",\"293\",\"294\",\"295\",\"296\",\"297\",\"298\",\"299\",\"300\",\"301\",\"302\",\"303\",\"304\",\"305\",\"306\"],[\"Minnesota\",\"Minnesota\",\"Minnesota\",\"Minnesota\",\"Minnesota\",\"Minnesota\",\"California\",\"California\",\"California\",\"California\",\"California\",\"California\",\"Florida\",\"Florida\",\"Florida\",\"Florida\",\"Florida\",\"Florida\",\"Wyoming\",\"Wyoming\",\"Wyoming\",\"Wyoming\",\"Wyoming\",\"Wyoming\",\"South Dakota\",\"South Dakota\",\"South Dakota\",\"South Dakota\",\"South Dakota\",\"South Dakota\",\"Kansas\",\"Kansas\",\"Kansas\",\"Kansas\",\"Kansas\",\"Kansas\",\"Nevada\",\"Nevada\",\"Nevada\",\"Nevada\",\"Nevada\",\"Nevada\",\"Virginia\",\"Virginia\",\"Virginia\",\"Virginia\",\"Virginia\",\"Virginia\",\"Washington\",\"Washington\",\"Washington\",\"Washington\",\"Washington\",\"Washington\",\"Oregon\",\"Oregon\",\"Oregon\",\"Oregon\",\"Oregon\",\"Oregon\",\"Wisconsin\",\"Wisconsin\",\"Wisconsin\",\"Wisconsin\",\"Wisconsin\",\"Wisconsin\",\"New Jersey\",\"New Jersey\",\"New Jersey\",\"New Jersey\",\"New Jersey\",\"New Jersey\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Rhode Island\",\"Vermont\",\"Vermont\",\"Vermont\",\"Vermont\",\"Vermont\",\"Vermont\",\"North Carolina\",\"North Carolina\",\"North Carolina\",\"North Carolina\",\"North Carolina\",\"North Carolina\",\"Oklahoma\",\"Oklahoma\",\"Oklahoma\",\"Oklahoma\",\"Oklahoma\",\"Oklahoma\",\"Alabama\",\"Alabama\",\"Alabama\",\"Alabama\",\"Alabama\",\"Alabama\",\"Delaware\",\"Delaware\",\"Delaware\",\"Delaware\",\"Delaware\",\"Delaware\",\"Missouri\",\"Missouri\",\"Missouri\",\"Missouri\",\"Missouri\",\"Missouri\",\"Utah\",\"Utah\",\"Utah\",\"Utah\",\"Utah\",\"Utah\",\"Mississippi\",\"Mississippi\",\"Mississippi\",\"Mississippi\",\"Mississippi\",\"Mississippi\",\"Connecticut\",\"Connecticut\",\"Connecticut\",\"Connecticut\",\"Connecticut\",\"Connecticut\",\"Indiana\",\"Indiana\",\"Indiana\",\"Indiana\",\"Indiana\",\"Indiana\",\"Georgia\",\"Georgia\",\"Georgia\",\"Georgia\",\"Georgia\",\"Georgia\",\"Texas\",\"Texas\",\"Texas\",\"Texas\",\"Texas\",\"Texas\",\"Pennsylvania\",\"Pennsylvania\",\"Pennsylvania\",\"Pennsylvania\",\"Pennsylvania\",\"Pennsylvania\",\"Massachusetts\",\"Massachusetts\",\"Massachusetts\",\"Massachusetts\",\"Massachusetts\",\"Massachusetts\",\"Maine\",\"Maine\",\"Maine\",\"Maine\",\"Maine\",\"Maine\",\"Tennessee\",\"Tennessee\",\"Tennessee\",\"Tennessee\",\"Tennessee\",\"Tennessee\",\"Michigan\",\"Michigan\",\"Michigan\",\"Michigan\",\"Michigan\",\"Michigan\",\"Idaho\",\"Idaho\",\"Idaho\",\"Idaho\",\"Idaho\",\"Idaho\",\"Illinois\",\"Illinois\",\"Illinois\",\"Illinois\",\"Illinois\",\"Illinois\",\"Louisiana\",\"Louisiana\",\"Louisiana\",\"Louisiana\",\"Louisiana\",\"Louisiana\",\"New Mexico\",\"New Mexico\",\"New Mexico\",\"New Mexico\",\"New Mexico\",\"New Mexico\",\"Arizona\",\"Arizona\",\"Arizona\",\"Arizona\",\"Arizona\",\"Arizona\",\"Arkansas\",\"Arkansas\",\"Arkansas\",\"Arkansas\",\"Arkansas\",\"Arkansas\",\"Nebraska\",\"Nebraska\",\"Nebraska\",\"Nebraska\",\"Nebraska\",\"Nebraska\",\"West Virginia\",\"West Virginia\",\"West Virginia\",\"West Virginia\",\"West Virginia\",\"West Virginia\",\"South Carolina\",\"South Carolina\",\"South Carolina\",\"South Carolina\",\"South Carolina\",\"South Carolina\",\"New York\",\"New York\",\"New York\",\"New York\",\"New York\",\"New York\",\"District of Columbia\",\"District of Columbia\",\"District of Columbia\",\"District of Columbia\",\"District of Columbia\",\"District of Columbia\",\"Kentucky\",\"Kentucky\",\"Kentucky\",\"Kentucky\",\"Kentucky\",\"Kentucky\",\"Ohio\",\"Ohio\",\"Ohio\",\"Ohio\",\"Ohio\",\"Ohio\",\"Alaska\",\"Alaska\",\"Alaska\",\"Alaska\",\"Alaska\",\"Alaska\",\"New Hampshire\",\"New Hampshire\",\"New Hampshire\",\"New Hampshire\",\"New Hampshire\",\"New Hampshire\",\"North Dakota\",\"North Dakota\",\"North Dakota\",\"North Dakota\",\"North Dakota\",\"North Dakota\",\"Iowa\",\"Iowa\",\"Iowa\",\"Iowa\",\"Iowa\",\"Iowa\",\"Montana\",\"Montana\",\"Montana\",\"Montana\",\"Montana\",\"Montana\",\"Hawaii\",\"Hawaii\",\"Hawaii\",\"Hawaii\",\"Hawaii\",\"Hawaii\",\"Maryland\",\"Maryland\",\"Maryland\",\"Maryland\",\"Maryland\",\"Maryland\",\"Colorado\",\"Colorado\",\"Colorado\",\"Colorado\",\"Colorado\",\"Colorado\"],[\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\"],[689,742,789,865,935,986,9857,11190,12569,13796,15202,16361,7769,9000,10260,11537,12342,13621,138,154,167,189,200,213,129,165,187,212,240,288,489,554,625,702,769,854,1279,1458,1549,1758,1880,1971,1511,1706,2011,2408,2636,2877,5589,6586,6967,7499,7985,8385,737,827,899,1000,1068,1132,1552,1730,1916,2112,2267,2440,22255,25590,29895,34124,37505,41090,566,657,711,806,922,1082,321,338,389,461,512,543,1591,1858,2093,2402,2585,2870,719,879,989,1159,1251,1326,1108,1270,1535,1632,1840,2005,368,393,450,593,673,783,1580,1834,2113,2291,2367,2722,1012,1077,1248,1426,1618,1662,1073,1177,1358,1455,1638,1738,3557,3824,4915,5276,5675,6906,2578,3056,3455,3975,4437,4986,4747,5444,5967,6383,6742,7558,4402,4952,5773,6566,7117,8150,5805,7021,8420,10110,11590,13075,7738,8966,10402,11736,12500,13837,344,376,432,456,470,499,2689,2868,3032,3265,3538,3753,9292,10791,12669,14225,15633,17129,669,891,1012,1076,1100,1170,6978,7695,8904,10357,11276,12262,6424,9152,10299,12500,13014,14867,363,403,495,544,624,686,1413,1600,1769,2019,2269,2466,624,683,738,743,853,927,249,273,297,339,377,438,191,217,242,282,325,347,1293,1554,1700,1917,2049,2232,84364,93360,103689,115963,124085,133389,586,653,757,902,998,1097,674,747,762,909,1048,1057,2548,2903,3312,3739,4043,4450,143,146,156,169,183,189,415,479,540,621,669,715,147,159,173,186,207,225,549,614,699,786,868,946,219,241,262,281,298,319,258,283,317,349,369,385,1985,2331,2758,3125,3609,4045,3346,3728,4182,4574,4950,5172],[null,689,742,789,865,935,986,9857,11190,12569,13796,15202,16361,7769,9000,10260,11537,12342,13621,138,154,167,189,200,213,129,165,187,212,240,288,489,554,625,702,769,854,1279,1458,1549,1758,1880,1971,1511,1706,2011,2408,2636,2877,5589,6586,6967,7499,7985,8385,737,827,899,1000,1068,1132,1552,1730,1916,2112,2267,2440,22255,25590,29895,34124,37505,41090,566,657,711,806,922,1082,321,338,389,461,512,543,1591,1858,2093,2402,2585,2870,719,879,989,1159,1251,1326,1108,1270,1535,1632,1840,2005,368,393,450,593,673,783,1580,1834,2113,2291,2367,2722,1012,1077,1248,1426,1618,1662,1073,1177,1358,1455,1638,1738,3557,3824,4915,5276,5675,6906,2578,3056,3455,3975,4437,4986,4747,5444,5967,6383,6742,7558,4402,4952,5773,6566,7117,8150,5805,7021,8420,10110,11590,13075,7738,8966,10402,11736,12500,13837,344,376,432,456,470,499,2689,2868,3032,3265,3538,3753,9292,10791,12669,14225,15633,17129,669,891,1012,1076,1100,1170,6978,7695,8904,10357,11276,12262,6424,9152,10299,12500,13014,14867,363,403,495,544,624,686,1413,1600,1769,2019,2269,2466,624,683,738,743,853,927,249,273,297,339,377,438,191,217,242,282,325,347,1293,1554,1700,1917,2049,2232,84364,93360,103689,115963,124085,133389,586,653,757,902,998,1097,674,747,762,909,1048,1057,2548,2903,3312,3739,4043,4450,143,146,156,169,183,189,415,479,540,621,669,715,147,159,173,186,207,225,549,614,699,786,868,946,219,241,262,281,298,319,258,283,317,349,369,385,1985,2331,2758,3125,3609,4045,3346,3728,4182,4574,4950],[null,689,742,789,865,935,null,9857,11190,12569,13796,15202,null,7769,9000,10260,11537,12342,null,138,154,167,189,200,null,129,165,187,212,240,null,489,554,625,702,769,null,1279,1458,1549,1758,1880,null,1511,1706,2011,2408,2636,null,5589,6586,6967,7499,7985,null,737,827,899,1000,1068,null,1552,1730,1916,2112,2267,null,22255,25590,29895,34124,37505,null,566,657,711,806,922,null,321,338,389,461,512,null,1591,1858,2093,2402,2585,null,719,879,989,1159,1251,null,1108,1270,1535,1632,1840,null,368,393,450,593,673,null,1580,1834,2113,2291,2367,null,1012,1077,1248,1426,1618,null,1073,1177,1358,1455,1638,null,3557,3824,4915,5276,5675,null,2578,3056,3455,3975,4437,null,4747,5444,5967,6383,6742,null,4402,4952,5773,6566,7117,null,5805,7021,8420,10110,11590,null,7738,8966,10402,11736,12500,null,344,376,432,456,470,null,2689,2868,3032,3265,3538,null,9292,10791,12669,14225,15633,null,669,891,1012,1076,1100,null,6978,7695,8904,10357,11276,null,6424,9152,10299,12500,13014,null,363,403,495,544,624,null,1413,1600,1769,2019,2269,null,624,683,738,743,853,null,249,273,297,339,377,null,191,217,242,282,325,null,1293,1554,1700,1917,2049,null,84364,93360,103689,115963,124085,null,586,653,757,902,998,null,674,747,762,909,1048,null,2548,2903,3312,3739,4043,null,143,146,156,169,183,null,415,479,540,621,669,null,147,159,173,186,207,null,549,614,699,786,868,null,219,241,262,281,298,null,258,283,317,349,369,null,1985,2331,2758,3125,3609,null,3346,3728,4182,4574,4950],[null,53,47,76,70,51,8871,1333,1379,1227,1406,1159,-8592,1231,1260,1277,805,1279,-13483,16,13,22,11,13,-84,36,22,25,28,48,201,65,71,77,67,85,425,179,91,209,122,91,-460,195,305,397,228,241,2712,997,381,532,486,400,-7648,90,72,101,68,64,420,178,186,196,155,173,19815,3335,4305,4229,3381,3585,-40524,91,54,95,116,160,-761,17,51,72,51,31,1048,267,235,309,183,285,-2151,160,110,170,92,75,-218,162,265,97,208,165,-1637,25,57,143,80,110,797,254,279,178,76,355,-1710,65,171,178,192,44,-589,104,181,97,183,100,1819,267,1091,361,399,1231,-4328,478,399,520,462,549,-239,697,523,416,359,816,-3156,550,821,793,551,1033,-2345,1216,1399,1690,1480,1485,-5337,1228,1436,1334,764,1337,-13493,32,56,24,14,29,2190,179,164,233,273,215,5539,1499,1878,1556,1408,1496,-16460,222,121,64,24,70,5808,717,1209,1453,919,986,-5838,2728,1147,2201,514,1853,-14504,40,92,49,80,62,727,187,169,250,250,197,-1842,59,55,5,110,74,-678,24,24,42,38,61,-247,26,25,40,43,22,946,261,146,217,132,183,82132,8996,10329,12274,8122,9304,-132803,67,104,145,96,99,-423,73,15,147,139,9,1491,355,409,427,304,407,-4307,3,10,13,14,6,226,64,61,81,48,46,-568,12,14,13,21,18,324,65,85,87,82,78,-727,22,21,19,17,21,-61,25,34,32,20,16,1600,346,427,367,484,436,-699,382,454,392,376,222],[null,53,47,76,70,51,null,1333,1379,1227,1406,1159,null,1231,1260,1277,805,1279,null,16,13,22,11,13,null,36,22,25,28,48,null,65,71,77,67,85,null,179,91,209,122,91,null,195,305,397,228,241,null,997,381,532,486,400,null,90,72,101,68,64,null,178,186,196,155,173,null,3335,4305,4229,3381,3585,null,91,54,95,116,160,null,17,51,72,51,31,null,267,235,309,183,285,null,160,110,170,92,75,null,162,265,97,208,165,null,25,57,143,80,110,null,254,279,178,76,355,null,65,171,178,192,44,null,104,181,97,183,100,null,267,1091,361,399,1231,null,478,399,520,462,549,null,697,523,416,359,816,null,550,821,793,551,1033,null,1216,1399,1690,1480,1485,null,1228,1436,1334,764,1337,null,32,56,24,14,29,null,179,164,233,273,215,null,1499,1878,1556,1408,1496,null,222,121,64,24,70,null,717,1209,1453,919,986,null,2728,1147,2201,514,1853,null,40,92,49,80,62,null,187,169,250,250,197,null,59,55,5,110,74,null,24,24,42,38,61,null,26,25,40,43,22,null,261,146,217,132,183,null,8996,10329,12274,8122,9304,null,67,104,145,96,99,null,73,15,147,139,9,null,355,409,427,304,407,null,3,10,13,14,6,null,64,61,81,48,46,null,12,14,13,21,18,null,65,85,87,82,78,null,22,21,19,17,21,null,25,34,32,20,16,null,346,427,367,484,436,null,382,454,392,376,222]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>state<\\/th>\\n      <th>date<\\/th>\\n      <th>confirmed<\\/th>\\n      <th>lag_no_grp<\\/th>\\n      <th>lag_grp<\\/th>\\n      <th>new_cases_no_grp<\\/th>\\n      <th>new_cases<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[3,4,5,6,7]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"state\",\"targets\":1},{\"name\":\"date\",\"targets\":2},{\"name\":\"confirmed\",\"targets\":3},{\"name\":\"lag_no_grp\",\"targets\":4},{\"name\":\"lag_grp\",\"targets\":5},{\"name\":\"new_cases_no_grp\",\"targets\":6},{\"name\":\"new_cases\",\"targets\":7}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n:::\n\n## Create a variable called `new_cases_pc` {.smaller}\n\n::: nonincremental\n::: panel-tabset\n## Task\n\n-   Scale `new_cases` by `population` to create a per capita measure (`new_cases_pc`)\n\n::: callout-note\nWe can create [multiple]{.blue} variables in a single `mutate()` by separating lines of code with a `,`\n:::\n\n## Code - Wrangling\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>%\n  mutate(\n    state = administrative_area_level_2,\n  ) %>%\n  dplyr::group_by(state) %>%\n  mutate(\n    new_cases = confirmed - lag(confirmed),\n    new_cases_pc = new_cases / population *100000\n    ) ->covid_us\n```\n:::\n\n\n## Code - Checking\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check recoding\ncovid_us %>% \n  # Look at two states\n  filter(state == \"Rhode Island\" | state == \"New York\") %>% \n  # In a small date range\n  filter(date > \"2021-01-01\" & date < \"2021-01-05\") %>% \n  # Select only the columns we want\n  select(state, date, new_cases, new_cases_pc) -> hlo_df\n# save to object hlo_df\n```\n:::\n\n\n## Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhlo_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n# Groups:   state [2]\n  state        date       new_cases new_cases_pc\n  <chr>        <date>         <int>        <dbl>\n1 Rhode Island 2021-01-02         0          0  \n2 Rhode Island 2021-01-03         0          0  \n3 Rhode Island 2021-01-04      4759        449. \n4 New York     2021-01-02     15849         81.5\n5 New York     2021-01-03     12232         62.9\n6 New York     2021-01-04     11242         57.8\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Created a variable called `face_masks` {.smaller}\n\n::: nonincremental\n::: panel-tabset\n## Task\n\nCreate a variable called `face_masks` from the `facial_coverings` that describes the face mask policy experienced by most people in a given state on a given date.\n\n::: callout-note\n-   Use `case_when()` inside of `mutate()` to create a variable that takes certain values when certain logical statements are true\n-   Seting the `levels = c(value1, value2, etc.)` argument in `factor()` lets us control the [ordering]{.blue} of categorical/character data.\n:::\n\n## HLO\n\nRecall, that the `facial_coverings` variable took on range of substantive values from 0 to 4, but empirically could take both positve and negative values\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(covid_us$facial_coverings)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n   -4    -3    -2    -1     0     1     2     3     4 \n  410  5897  7362   275  3893  8604 17424  9191   622 \n```\n\n\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>%\nmutate(\n    face_masks = case_when(\n      facial_coverings == 0 ~ \"No policy\",\n      abs(facial_coverings) == 1 ~ \"Recommended\",\n      abs(facial_coverings) == 2 ~ \"Some requirements\",\n      abs(facial_coverings) == 3 ~ \"Required shared places\",\n      abs(facial_coverings) == 4 ~ \"Required all times\",\n    ) %>% factor(.,\n      levels = c(\"No policy\",\"Recommended\",\n                 \"Some requirements\",\n                 \"Required shared places\",\n                 \"Required all times\")\n    ) \n    ) -> covid_us\n```\n:::\n\n\n## Check\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us%>%\n  filter(state == \"Illinois\", date > \"2020-9-28\") %>%\n  select(state, date, facial_coverings, face_masks) %>% \n  slice(1:5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n# Groups:   state [1]\n  state    date       facial_coverings face_masks        \n  <chr>    <date>                <int> <fct>             \n1 Illinois 2020-09-29                2 Some requirements \n2 Illinois 2020-09-30                2 Some requirements \n3 Illinois 2020-10-01               -4 Required all times\n4 Illinois 2020-10-02               -4 Required all times\n5 Illinois 2020-10-03               -4 Required all times\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## {{< fa face-meh >}} Addtional recoding\n\nIn last week's lab, we also added the following\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>%\n  mutate(\n    year = year(date),\n    month = month(date),\n    year_month = paste(\n      year, \n      str_pad(month, width = 2, pad=0), \n      sep = \"-\"\n      ),\n    percent_vaccinated = people_fully_vaccinated/population*100  \n    ) -> covid_us\n```\n:::\n\n\n## {{< fa face-meh >}} Working with dates\n\nR treat's dates differently\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us$date[1:3]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2020-01-01\" \"2020-01-02\" \"2020-01-03\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(covid_us$date)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Date\"\n```\n\n\n:::\n:::\n\n\nIf R knows a variable is a date, we can extract components of that date, using functions from the `lubridate` package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyear(covid_us$date[1:3])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2020 2020 2020\n```\n\n\n:::\n\n```{.r .cell-code}\nmonth(covid_us$date[1:3])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 1 1\n```\n\n\n:::\n:::\n\n\n## {{< fa face-meh >}} The `str_pad()` and `paste()` function\n\n-   The `str_pad()` function lets us 'pad' strings so that they're all the same width\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmonth(covid_us$date[1:3])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 1 1\n```\n\n\n:::\n\n```{.r .cell-code}\nstr_pad(month(covid_us$date[1:3]), width=2, pad = 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"01\" \"01\" \"01\"\n```\n\n\n:::\n:::\n\n\n-   The `paste` function lets us paste objects together.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npaste(year(covid_us$date[1:3]),\n      str_pad(month(covid_us$date[1:3]), width=2, pad = 0),\n      sep = \"-\"\n      )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2020-01\" \"2020-01\" \"2020-01\"\n```\n\n\n:::\n:::\n\n\n## Summarizing the averge number of `new_cases` by `face_mask` policy {.smaller}\n\n::: panel-tabset\n## Task\n\nCalculate the mean (average) number of `new_cases` of Covid-19 when each type of `face_mask` policy was in effect\n\n::: callout-note\n-   The `group_by()` command will do each calculation inside of `summarise()` for each level of the grouping variable\n:::\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>%\n  filter(!is.na(face_masks)) %>%\n  group_by(face_masks) %>%\n  summarize(\n    new_cases_pc = mean(new_cases_pc, na.rm=T)\n  ) -> face_mask_summary\n```\n:::\n\n\n## Results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nface_mask_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  face_masks             new_cases_pc\n  <fct>                         <dbl>\n1 No policy                      10.3\n2 Recommended                    16.6\n3 Some requirements              36.2\n4 Required shared places         29.4\n5 Required all times             32.2\n```\n\n\n:::\n:::\n\n:::\n\n## Summarizing the averge number of `new_cases` by `face_mask` policy by month {.smaller}\n\n:::: panel-tabset\n\n## Task\n\nCalculate the mean (average) number of `new_cases` of Covid-19 when each type of `face_mask` policy was in effect for each `year_month` in our dataset\n\n::: callout-note\n-   The `group_by()` command can group on [multiple]{.blue} variables\n:::\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>%\n  group_by(face_masks, year_month) %>%\n  summarize(\n    new_cases_pc = mean(new_cases_pc, na.rm=T)\n  ) -> cases_by_month_and_policy\n```\n:::\n\n\n## Results\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncases_by_month_and_policy\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 102 × 3\n# Groups:   face_masks [5]\n   face_masks year_month new_cases_pc\n   <fct>      <chr>             <dbl>\n 1 No policy  2020-01        0.000463\n 2 No policy  2020-02        0.00188 \n 3 No policy  2020-03        1.70    \n 4 No policy  2020-04        6.50    \n 5 No policy  2022-04       19.8     \n 6 No policy  2022-05       20.4     \n 7 No policy  2022-06       37.6     \n 8 No policy  2022-07       36.2     \n 9 No policy  2022-08       35.7     \n10 No policy  2022-09       19.0     \n# ℹ 92 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# In base R:\nmean(\n  covid_us$new_cases_pc[\n    covid_us$face_masks == \"No policy\" &\n      covid_us$year_month == \"2020-01\"], na.rm = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.0004626161\n```\n\n\n:::\n:::\n\n\n## {{< fa lightbulb >}} Concept check {.smaller}\n\nSuppose you want to do the following, what function or functions would you use:\n\n-   Read data into `R`\n-   Look at the data to get a high level overview of its structure\n-   Subset or filter the data to include just observations with certain values\n-   Select specific columns from data\n-   Add new columns to the data\n-   Summarize multiple values by collapsing them into a single value\n-   Doing some function group-by-group?\n\n## Concept check {.smaller}\n\nSuppose you want to do the following, what function or functions would you use:\n\n-   Read data into `R`\n    -   `read_xxx()` (tidy), `read.xxx()` (base)\n-   Look at the data to get a high level overview of its structure\n    -   `head()`, `tail()`, `glimpse()`, `table()`, `summary()`, `View()`\n-   Subset the data to include just obersvations with certain values\n    -   `data %>% filter(x > 0)`, `data[data$x > 0]`, `subset(data, x > 0)`\n-   Select specific columns from data\n    -   `data$variable`, `data %>% select(variable1, variable2)`, `data[,c(\"x1\",\"x2\")]`\n-   Add new columns to the data\n    -   `data %>% mutate(x = y/10)` `data$x <- data$y/10`\n-   Summarize multiple values by collapsing them into a single value\n    -   `data %>% summarise(x_mn = mean(x, na.rm=T))`\n-   Doing some function group-by-group?\n    -   `data %>% group_by(g) %>% summarise(x_mn = mean(x, na.rm=T))`\n\n## Concept check {.smaller}\n\nShould you know exactly how to do all of this?\n\n. . .\n\n**NO! Of course not. For Pete's sake, Paul, It's only the second week**\n\n. . .\n\nWill you learn how to do much of this?\n\n. . .\n\n**Maybe, but I'm feeling pretty overwhelmed...**\n\n. . .\n\nHow will you learn how do these things?\n\n. . .\n\n**With lots of practice, patience, and repetition motivated by a sense that these skills will help me learn about things I care about**\n\n## Advice on learning how to code {.smaller}\n\n-   It takes lots of practice and lots of errors\n    -   Break long blocks of code into individual steps to see what's happening\n-   Create code chunks and FAFO\n    -   Just clean up when you're done...\n-   Only dumb question is one you don't ask\n-   Google, Stack Exchange are your friends\n-   Try writing out in comments what you want to do in code\n-   Learn to recognize patterns in the questions/tasks I give you:\n    -   Copy and paste code I give\n    -   Change one thing\n    -   Fix the error\n    -   Adapt code from class to do a similar thing\n-   Learning to code is much less painful when you have a reason to do it\n    -   Let me know what interests you\n\n# {{< fa magnifying-glass>}} Descriptive Statistics {.inverse}\n\n## Descriptive Statistics {.smaller}\n\nWhen social scientists talk about descriptive inference, we're trying to summarize our data and make claims about what's *typical* of our data\n\n-   What's a typical value\n    -   [Measures of central tendency]{.blue}\n    -   mean, median, mode\n-   How do our data vary around typical values\n    -   [Measures of dispersion]{.blue}\n    -   variance, standard deviation, range, percentile ranges\n-   How does variation in one variable relate to variation in another\n    -   [Measures of association]{.blue}\n    -   covariance, correlation\n\n## Using R to Summarize Data {.smaller}\n\nHere are some common ways of summarizing data and how to calculate them with `R`\n\n\n::: {.cell}\n\n:::\n\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Description </th>\n   <th style=\"text-align:left;\"> Usage </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> sum </td>\n   <td style=\"text-align:left;\"> sum(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> minimum </td>\n   <td style=\"text-align:left;\"> min(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> maximum </td>\n   <td style=\"text-align:left;\"> max(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> range </td>\n   <td style=\"text-align:left;\"> range(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> mean </td>\n   <td style=\"text-align:left;\"> mean(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> median </td>\n   <td style=\"text-align:left;\"> median(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> percentile </td>\n   <td style=\"text-align:left;\"> quantile(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> variance </td>\n   <td style=\"text-align:left;\"> var(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> standard deviation </td>\n   <td style=\"text-align:left;\"> sd(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> rank </td>\n   <td style=\"text-align:left;\"> rank(x) </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n\n\nAll of these functions have an argument called `na.rm=F`. If your data have missing values, you'll need to set `na.rm=F` (e.g. `mean(x, na.rm=T)`)\n\n## What you need to know for POLS 1600\n\n**Measures of typical values**\n\n-   **Means** (`mean()`) all the time\n-   **Medians** (`median()`) useful for describing distributions of variables particularly those with [extreme values]{.blue}\n-   \\*\\*Mode\\* useful for characterizing [categorical]{.blue} data\n\n. . .\n\n**Measures of typical variation**\n\n-   `var()` important for quantifying uncertainty, but rarely will you be calculating this directly\n-   `sd()` a good summary of a [typical change]{.blue} in the data.\n-   `range()`, `min()`, `max()` useful for exploring data, detecting outliers and potential values that need to be recoded\n\n**Measures of association**\n\n-   Covariance (`var()`) central to describing relationships but generally not something you'll calculate or interpret directly\n-   Correlation (`cor()`) useful for describing \\[bivariate\\] relationships (positive or negative relationships).\n\n## What you don't really need to know for POLS 1600 {smaller}\n\nWe won't spend much time on the formal definitions, math, and proofs\n\n$$\n\\bar{x}=\\frac{1}{n}\\sum_{i=1}^n x_i \n$$\n\n$$\nM_x = X_i : \\int_{-\\infty}^{x_i} f_x(X)dx=\\int_{x_i}^\\infty f_x(X)dx=1/2\n$$\n\n. . .\n\nUseful eventually. Not necessary right now.\n\n# {{< fa lightbulb >}} Data Visualization: The Grammar of Graphics {.inverse}\n\n## Data visualizaiton\n\nData visualization is an incredibly valuable tool that helps us to\n\n-   Explore data, uncovering new relationships, as well as potential problems\n-   Communicate our results clearly and precisely\n\nTake a look at how the [BBC](https://medium.com/bbc-visual-and-data-journalism/how-the-bbc-visual-and-data-journalism-team-works-with-graphics-in-r-ed0b35693535) uses R to produce its graphics\n\n## Data visualization\n\nToday, we will:\n\n-   Introduce the `grammar of graphics`\n-   Learn how to apply this grammar with `ggplot()`\n-   Introduce basic plots to describe\n    -   Univariate distributions\n    -   Bivariate relations\n\n## The Grammar of Graphics\n\nInspired by [Wilkinson (2005)](https://link.springer.com/book/10.1007/0-387-28695-0)\n\n> A statistical graphic is a mapping of `data` variables to `aes` thetic attributes of `geom` etric objects.\n\nAt a minimum, a graphic contains three core components:\n\n-   `data:` the dataset containing the variables of interest.\n-   `aes`: aesthetic attributes of the geometric object. For example, x/y position, color, shape, and size. Aesthetic attributes are mapped to variables in the dataset.\n-   `geom:` the geometric object in question. This refers to the type of object we can observe in a plot For example: points, lines, and bars.\n\n[Ismay and Kim (2022)](https://moderndive.com/2-viz.html#grammarofgraphics)\n\n## Seven Layers of Graphics {background-image=\"https://miro.medium.com/max/1400/1*ZdQ9wFwaA214ABiib7AygQ.png\" background-size=\"contain\"}\n\n[Kesari (2018)](https://gkesari.medium.com/my-talk-on-grammar-of-graphics-the-secret-sauce-of-powerful-data-stories-3da618cf1bbf)\n\n## The grammar of graphics in R\n\nIn R, we'll implement this grammar of graphics using the `ggplot` package\n\n-   Let's take a look at your feedback to last week's survey and see how we can visualize some of the in formation you provided\n\n## The Grammar of Graphics\n\n# {{< fa bullhorn >}} Feedback {.inverse}\n\n## What we liked {.smaller}\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-9207b6d5df3915bd517a\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-9207b6d5df3915bd517a\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],[\"\",\"So far I appreciate the group projects more than I thought I would!\",\"I liked doing labs in class.\",\"I really liked finally beginning to understand how coding works. I find practicing in class really useful.\",\"I liked the graphs!! I love graphs\",\"Having had no background in coding, I've really enjoyed simply being introduced to R and learning the basics of what goes into it. More specifically, I liked our lesson today when we learned how to create histograms from the data.\",\"The general coding process honestly - I've never coded so it was really interesting and engaging for me!\",\"I liked learning and running new functions/commands in R Studio. I have never written code before, so I enjoyed writing it and then running it because you get instantaneous results.\",\"I liked the feeling of successfully completing the lab.\",\"I liked learning how to create graphs with R\",\"Both labs and collaborating to find solutions.\",\"I really liked the labs, and found them interesting and useful – a good way to apply the knowledge.\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>like<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"like\",\"targets\":1}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n## What we disliked {.smaller}\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-ba3a67b02901d9699755\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ba3a67b02901d9699755\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],[\"\",\"Most of my teammembers (myself included) don't have the textbook yet (we've purchased them, but are still on their way to PVD), so running the labs has been a little confusing as I still feel a little shaky on the basics. I'm optimistic this will change once Imai is delivered, though!\",\"I found it frustrating trying to figure out codes today because I had a hard time figuring out the codes I needed.\",\"The first lab on Wednesday was confusing because my partner and I were having some software difficulties, and didn't understand most of what was going on during the whole class.\",\"I didn’t find anything too confusing or difficult.\",\"This is likely due to me entering the class late, but I felt that I was not prepared for the first lab, and although I did look it over before class and attempt to understand it, I felt extremely lost in class when trying to answer the questions with my group.\",\"I'm having a hard time understanding the applications of the textbook information to lecture/labs, except for small things, which makes it difficult to motivate myself to read the textbook. Maybe future chapters will be more applicable, though! I'll definitely keep reading it and assuming that there are practical applications.\",\"I think the labs are too long, which stresses me out. We didn't finish either lab (we barely made it halfway through either), which adds stress because what if we didn't get to the randomly selected question. So maybe shorter, more manageable labs would be nice (at least at the beginning of the course).\",\"I found the first portion of Wednesday frustrating because I wasn't able to figure out how to do anything in R for the majority of the class period\",\"Not enough time to complete the labs in class\",\"I found the beginning of the labs a little chaotic when I had questions. Learning the syntax of the code can be frustrating.\",\"\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>dislike<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"dislike\",\"targets\":1}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n## \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-39-1.png){width=960}\n:::\n:::\n\n\n## Building that figure\n\n1.  Look at the raw data\n2.  Recode the raw data\n3.  Make a basic plot, telling R the `data`, `aes`thetics, `geom`etries, and `stat`istics I want it to plot\n4.  Tinker with the data and plot's scales, coordinates, labels and theme to make the figure look better\n\n## 1. Look at the raw data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$trip\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<labelled<double>[12]>: You're on a road trip with friends. Who controls the music?\n [1] NA  3  1  2  3  2  2  2  1  2  2 NA\n\nLabels:\n value\n     1\n     2\n     3\n                                                                                                                               label\n                                                                                                                    The driver, duh.\n                                                                                                           The front seat, of course\n That jerk in the back who you don't even know but seems to have really strong feelings about Billy Joel's \"Only the good die young\"\n```\n\n\n:::\n:::\n\n\n## 2. Recode the raw data\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\ndf %>%\n  mutate(\n    Playist = forcats::as_factor(trip)\n )%>%\n  select(Playist)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 1\n   Playist                                                                      \n   <fct>                                                                        \n 1  <NA>                                                                        \n 2 \"That jerk in the back who you don't even know but seems to have really stro…\n 3 \"The driver, duh.\"                                                           \n 4 \"The front seat, of course\"                                                  \n 5 \"That jerk in the back who you don't even know but seems to have really stro…\n 6 \"The front seat, of course\"                                                  \n 7 \"The front seat, of course\"                                                  \n 8 \"The front seat, of course\"                                                  \n 9 \"The driver, duh.\"                                                           \n10 \"The front seat, of course\"                                                  \n11 \"The front seat, of course\"                                                  \n12  <NA>                                                                        \n```\n\n\n:::\n:::\n\n\n## 3. Make a basic plot\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|\ndf %>% #<< Raw data\n  mutate(\n    Playlist =forcats::as_factor(trip)\n  ) %>% # Transformed data\n  ggplot(aes(x = Playlist, # Aesthetics\n             fill = Playlist))+\n  geom_bar( # Geometry\n    stat = \"count\" # Statistic\n    ) -> fig_roadtrip\n```\n:::\n\n\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_roadtrip\n```\n\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-43-1.png){width=960}\n:::\n:::\n\n:::\n\n## 4.1 Tinker with data\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2|4\"}\ndf %>%\n  filter(!is.na(trip)) %>% \n  mutate(\n    Playlist =str_wrap(forcats::as_factor(trip),20)\n  ) %>%\n  ggplot(aes(x = Playlist,\n             fill = Playlist))+\n  geom_bar(stat = \"count\") -> fig_roadtrip\n```\n:::\n\n\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-45-1.png){width=960}\n:::\n:::\n\n:::\n\n## 4.2 Tinker with `fill` aesthetic\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\ndf %>%\n  filter(!is.na(trip)) %>% \n  mutate(\n    Playlist =str_wrap(forcats::as_factor(trip),20)\n  ) %>%\n  ggplot(aes(x = Playlist,\n             fill = Playlist))+\n  geom_bar(stat = \"count\")+\n  scale_fill_brewer() -> fig_roadtrip\n```\n:::\n\n\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-47-1.png){width=960}\n:::\n:::\n\n:::\n\n## 4.3 Tinker with coordinates\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\ndf %>%\n  filter(!is.na(trip)) %>% \n  mutate(\n    Playlist =str_wrap(forcats::as_factor(trip),20)\n  ) %>%\n  ggplot(aes(x = Playlist,\n             fill = Playlist))+\n  geom_bar(stat = \"count\")+\n  scale_fill_brewer() +\n  coord_flip() -> fig_roadtrip\n```\n:::\n\n\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-49-1.png){width=960}\n:::\n:::\n\n:::\n\n## 4.4 Tinker with labels\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"9|11-13\"}\ndf %>%\n  filter(!is.na(trip)) %>% \n  mutate(\n    Playlist =str_wrap(forcats::as_factor(trip),20)\n  ) %>%\n  ggplot(aes(x = Playlist,\n             fill = Playlist))+\n  geom_bar(stat = \"count\")+\n  scale_fill_brewer(guide=\"none\")+\n  coord_flip()+\n  labs(title = \"Who controls the playlist\",\n       x= \"\",\n       y = \"\")-> fig_roadtrip\n```\n:::\n\n\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-51-1.png){width=960}\n:::\n:::\n\n:::\n\n## 4.4 Tinker with theme\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"14\"}\ndf %>%\n  filter(!is.na(trip)) %>% \n  mutate(\n    Playlist =str_wrap(forcats::as_factor(trip),20)\n  ) %>%\n  ggplot(aes(x = Playlist,\n             fill = Playlist))+\n  geom_bar(stat = \"count\")+\n   scale_fill_brewer(guide=\"none\")+\n  coord_flip()+\n  labs(title = \"Who controls the playlist\",\n       x= \"\",\n       y = \"\")+\n  theme_bw() -> fig_roadtrip\n```\n:::\n\n\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-53-1.png){width=960}\n:::\n:::\n\n:::\n\n## The final code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  filter(!is.na(trip)) %>% \n  mutate(\n    Playlist = str_wrap(forcats::as_factor(trip),20)\n  ) %>%\n  ggplot(aes(x = Playlist,\n             fill = Playlist))+\n  geom_bar(stat = \"count\")+\n  coord_flip()+\n  scale_fill_brewer()+\n  labs(title = \"Who controls the playlist on a roadtrip\")+\n  theme_bw()\n```\n:::\n\n\n# {{< fa lightbulb >}} DataViz: Describing Distributions and Associations{.inverse}\n\n## Describing Distributions and Associations\n\n- In the remaining slides, we' see how to visualize some distributions and associations in the Covid data using:\n\n    - barplots\n    - histograms\n    - density plots\n    - boxplots\n    - line plots\n    - scatter plots\n    \n## General advice for making figures\n\n- Think through conceptually how you want to figure to look\n  - Draw it out buy hand\n- Make a basic plot and iterate\n- Don't let the perfect be the enemy of the good\n- Use `summarize()` and other data wrangling skills to transform data for plotting\n- Use `factor()` and related functions to control order of labels on axis\n\n## Barplots {.smaller}\n\n::: panel-tabset\n## Question\n\nWhat was the most common face mask policy in the data?\n\n## Basic Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>% \n  ggplot(aes(x=face_masks))+\n  geom_bar(stat = \"count\")\n```\n\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-55-1.png){width=960}\n:::\n:::\n\n\n## Better Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>%\n  ungroup() %>% \n  mutate(\n    face_masks = forcats::fct_infreq(face_masks)\n  ) %>% \n  ggplot(aes(x=face_masks,\n             fill = face_masks))+\n  geom_bar()+\n  geom_text(stat='count', aes(label=..count..), \n            hjust=.5,vjust=-.5)+\n  guides(fill = \"none\")+\n  theme_bw()+\n  labs(\n    x = \"Face Mask Policy \",\n    title = \"\"\n  ) -> fig_barplot\n```\n:::\n\n\n## Figure\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-57-1.png){width=960}\n:::\n:::\n\n:::\n\n## Histogram {.smaller}\n\n::: panel-tabset\n## Question \n\nWhat does the distribution new Covid-19 cases look like in June 2021\n\n## Basic Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>% \n  filter(year_month == \"2021-06\") %>% \n  ggplot(aes(x=new_cases))+\n  geom_histogram() -> fig_hist1\n```\n:::\n\n\n## Ex 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_hist1\n```\n\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-59-1.png){width=960}\n:::\n:::\n\n\n## Better Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>%\n  filter(year_month == \"2021-06\") %>% \n  filter(new_cases > 0) %>% \n  ggplot(aes(x=new_cases))+\n  geom_histogram() +\n  labs(\n    title = \"Exclude Negative Values\"\n  ) -> fig_hist2a\n\ncovid_us %>%\n  filter(year_month == \"2021-06\") %>% \n  filter(new_cases > 0) %>% \n  ggplot(aes(x=new_cases))+\n  geom_histogram() +\n  scale_x_log10()+\n  labs(\n    title = \"Exclude Negative Values & Use log scale\"\n  ) -> fig_hist2b\n\nfig_hist2 <- ggarrange(fig_hist2a, fig_hist2b)\n```\n:::\n\n\n## Ex 2\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-61-1.png){width=960}\n:::\n:::\n\n:::\n\n## Density Plots {.smaller}\n\n::: panel-tabset\n## Question\n\nWhat does the distribution of Covid-19 deaths look like?\n\n## Basic Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>% \n  mutate(\n    new_deaths = deaths - lag(deaths),\n    new_deaths_pc = deaths - lag(deaths)\n  ) %>% \n  filter(new_deaths > 0) %>% \n  ggplot(aes(x=new_deaths_pc))+\n  geom_density() -> fig_density1\n```\n:::\n\n\n## Ex 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_hist1\n```\n\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-63-1.png){width=960}\n:::\n:::\n\n\n## Better Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>% \n  mutate(\n    new_deaths = deaths - lag(deaths),\n    new_deaths_pc = deaths - lag(deaths),\n    year_f = factor(year)\n  ) %>% \n  filter(new_deaths > 0) %>% \n  ggplot(aes(x=new_deaths_pc,\n             col = year_f))+\n  geom_density() +\n  geom_rug() +\n  scale_x_log10() +\n    facet_wrap(~month)+\n  theme(legend.position = \"bottom\")-> \n  fig_density2\n```\n:::\n\n\n## Ex 2\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-65-1.png){width=960}\n:::\n:::\n\n:::\n\n## Box plots {.smaller}\n\n::: panel-tabset\n## Question\n\nHow did the distribution of Covid-19 cases vary by face mask policy?\n\n## Basic Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>%\n  filter(new_cases_pc > 0) %>% \n  ggplot(aes(x= face_masks, y=new_cases_pc))+\n  scale_y_log10()+\n  geom_boxplot() -> fig_boxplot1\n```\n:::\n\n\n## Ex 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_boxplot1\n```\n\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-67-1.png){width=960}\n:::\n:::\n\n\n## Better Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>%\n  mutate(\n    Month = lubridate::month(date, label = T)\n  ) %>% \n  filter(new_cases_pc > 0) %>% \n  filter(year == 2020) %>% \n ggplot(aes(x= face_masks, \n            y=new_cases_pc,\n            col = face_masks))+\n  scale_y_log10()+\n  coord_flip() +\n  geom_boxplot()  +\n    facet_wrap(~Month) +\n  theme(\n    legend.position = \"bottom\"\n  )-> fig_boxplot2\n```\n:::\n\n\n## Ex 2\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-69-1.png){width=960}\n:::\n:::\n\n:::\n\n\n## Line graphs {.smaller}\n\n::: panel-tabset\n## Question\n\nHow did vaccination rates vary by state?\n\n## Basic Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>%\n  ggplot(\n    aes(x= date,\n        y=percent_vaccinated,\n        group = state\n        ))+\n  geom_line() -> fig_line1\n```\n:::\n\n\n## Ex 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_line1\n```\n\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-71-1.png){width=960}\n:::\n:::\n\n\n## Better Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>%\n  ungroup() %>%\n  mutate(\n    Label = case_when(\n      date == max(date) & percent_vaccinated == max(percent_vaccinated[date == max(date)], na.rm = T) ~ state,\n      date == max(date) & percent_vaccinated == median(percent_vaccinated[date == max(date)], na.rm = T) ~ state,\n      date == max(date) & percent_vaccinated == min(percent_vaccinated[date == max(date)], na.rm = T) ~ state,\n      TRUE ~ NA_character_\n    ),\n    line_alpha = case_when(\n      state %in% c(\"District of Columbia\", \"Nebraska\", \"Wyoming\") ~ 1,\n      T ~ .3\n    ),\n    line_col = case_when(\n      state %in% c(\"District of Columbia\", \"Nebraska\", \"Wyoming\") ~ \"black\",\n      T ~ \"grey\"\n    )\n  ) %>%\n  ggplot(\n    aes(x= date,\n        y=percent_vaccinated,\n        group = state\n        ))+\n  geom_line(\n    aes(alpha = line_alpha,\n        col =line_col)) +\n  geom_text_repel(aes(label = Label),\n                  direction = \"x\",\n                  nudge_y = 2) +\n  guides(\n    alpha = \"none\",\n    col = \"none\"\n  )+\n  xlim(ym(\"2021-01\"), ym(\"2023-01\")) +\n  labs(\n    y = \"Percent Vacinated\",\n    x = \"Date\"\n  ) +\n  theme_bw()-> fig_line2\n```\n:::\n\n\n## Ex 2\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-73-1.png){width=960}\n:::\n:::\n\n:::\n\n## Scatterplots {.smaller}\n\n::: panel-tabset\n## Question\n\nWhat's the relationship between vaccination rates and new cases of Covid-19?\n\n## Basic Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>%\n  ggplot(\n    aes(x= percent_vaccinated,\n        y=new_cases_pc,\n        ))+\n  geom_point() -> fig_scatter1\n```\n:::\n\n\n## Ex 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_scatter1\n```\n\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-75-1.png){width=960}\n:::\n:::\n\n\n## Better Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_us %>%\n  filter(year > 2020) %>%\n  filter(month == 6) %>%\n  filter(new_cases_pc > 0) %>%\n  ggplot(\n    aes(x= percent_vaccinated,\n        y=new_cases_pc,\n        ))+\n  geom_point() +\n  geom_smooth(method = \"lm\")+\n  facet_wrap(~year_month,ncol =1,\n             scales = \"free_y\")-> fig_scatter2\n```\n:::\n\n\n## Ex 2\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-slides_files/figure-revealjs/unnamed-chunk-77-1.png){width=960}\n:::\n:::\n\n:::\n\n\n\n\n# {{< fa home >}} Summary {.inverse}\n\n## Summary\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.31/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}