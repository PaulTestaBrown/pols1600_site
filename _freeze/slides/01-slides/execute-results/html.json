{
  "hash": "17539187a780a180ad7fd71994d00f7c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Week 01:\"\nsubtitle: \"Describing Data in R\"\nauthor: \"Paul Testa\"\nformat: \n  revealjs:\n    author: \"Paul Testa\"\n    height: 900\n    width: 1600\n    # css: css/brown.css\n    theme: ../files/slides.scss\n    logo: brown.png\n    footer: \"POLS 1600\"\n    multiplex: false\n    transition: fade\n    slide-number: c\n    incremental: false\n    center: false\n    menu: true\n    scrollable: true\n    highlight-style: github\n    progress: true\n    code-overflow: wrap\n    # title-slide-attributes:\n    #   data-background-image: ../../assets/stat20-hex-bg.png\n    #   data-background-size = contain\n---\n\n\n\n\n\n\n# Overview\n\n\n## General Plan\n\n- Review\n\n  - Feedback\n\n  - Questions\n\n- Lecture consists of a mix of:\n\n  - Topics and concepts\n\n  - Exercises\n\n- Summary\n\n\n## Slides\n\n- Follow along here: https://pols1600.paultesta.org/slides/01-slides.html\n\n- Type the letter `o` to get an overview to help you navigate.\n\n- We have a LOT to cover today\n  - We'll take time to focus on what you **need** to know\n  - Other things we'll cover more quicky\n  - These are things that will be **good** to know *eventually*\n\n- We'll review this material again on Thursday and our first \"lab\" will be a joint excercise\n\nSeveral slides and tables borrow heavily from notes provide by the amazing [Allison Hill](https://www.apreshill.com/)\n\n\n\n##  Waitlist\n\n- Course is currently at capacity. May be able to admit a few more if people drop...\n\n- Let me know after Thursday's lab if you're still interested in taking the course\n\n\n\n## Working in R and R Studio\n\n- Hopefully you all have installed R and R Studio: https://pols1600.paultesta.org/labs/00-software_setup.html\n\n- If you're having issues, don't worry, see me after class and we'll get it sorted.\n\n\n## Loading data from QSS\n\nOnce you've done the following:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ninstall.packages(\"devtools\")\ninstall.packages(\"remotes\")\nremotes::install_github(\"kosukeimai/qss-package\", build_vignettes = TRUE)\n```\n:::\n\n\n\n\nAnywhere the text loads data:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nafghan <- read.csv(\"afgahn.csv\")\n```\n:::\n\n\n\nYou can do \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(\"qss\")\ndata(\"afghan\")\nsummary(afghan$age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  15.00   22.00   30.00   32.39   40.00   80.00 \n```\n\n\n:::\n:::\n\n\n\n\n## Tutorials\n\nOnce you've done the following\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nremotes::install_github(\"rstudio/learnr\")\nremotes::install_github(\"rstudio-education/gradethis\")\nremotes::install_github(\"PaulTestaBrown/qsslearnr\")\n```\n:::\n\n\n\nYou can see the available problem sets by running the following code in your console:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlearnr::run_tutorial(package = \"qsslearnr\")\n```\n:::\n\n\n\n\n## Tutorials\n\n\nAnd start a specific tutorial by running:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlearnr::run_tutorial(\"00-intro\", package = \"qsslearnr\")\n```\n:::\n\n\n\n\n\n\n\nbackground-image:url(\"https://upload.wikimedia.org/wikipedia/en/thumb/0/04/How_to_Get_Away_with_Murder_season_5_poster.jpg/220px-How_to_Get_Away_with_Murder_season_5_poster.jpg\")\nbackground-size:contain\n\n\n## You've committed a murder\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-slides_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=500}\n:::\n:::\n\n\n\n\n\n## Why?\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-406950a73647dca909e8\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-406950a73647dca909e8\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\"],[\"Mom\",\"Mom\",\"Mom\",\"Dad\",\"Mom\",\"Mom\",\"Mom\",\"Mom\",\"Dad\",\"Dad\",\"Dad\",\"Mom\",\"Dad\",\"Mom\",\"Dad\",\"Mom\",\"Dad\",\"Mom\",\"Mom\",\"Dad\",null,\"Mom\",\"Mom\",\"Dad\",\"Dad\",\"Dad\",\"Mom\",\"Dad\",\"Mom\",\"Mom\"],[\"She gets shit done, would figure out how to hide a body and NOBODY would find it\",\"She'd help me out\",\"She would be more understanding (probably).\",\"While I am closer with my mother, my Dad would take a more logical approach and break things apart step-by-step to give me the best possible outcome.\",\"I don't have a relationship with my dad ðŸ™ˆ\",\"My mother is so close with me and would cover up anything for me so I would tell her to help me.\",\"Mama's boy\",\"My dad is not in the picture lol\",\"I have two dads\",\"My mom worries too much.\",\"he can help carry the body\",\"she is more resourceful\",\"I think that my dad would be better at quickly compartmentalizing the information and helping to figure out next steps. My mom would perhaps be more effective in making a plan, but she would take longer to get started.\",\"she would've been there with me! :)\",\"My dad is far more patient, and understanding however my mother's heart would break to a point where it would affect me incredibly.\",\"We are closer and loves drama so she might help with the cover-up efforts\",\"He has contacts, heâ€™s more likely to keep me out of prison\",\"Quick decision-making\",\"Easier to get dirt on if she snitches\",\"It's all about vibes.\",\"\",\"My mom would be most likely to empathize with me. Honestly my dad would hardly react\",\"She would absolutely help me bury the body. Dad might get a bit squeamish.\",\"My dad will not panic. And he's a lawyer. Both good things.\",\"My dad is a lawyer. He would definitely have a better idea of what I should do.\",\"he's coolheaded so he could help me figure out what to do\",\"My mother is a defense attorney and would help me prepare for the upcoming legal backlash.\",\"He would ask less questions and would potenitally forget.\",\"My mom provides an unconditional love, regardless of earthly action. Whereas with my dad, his view of me is more conditional. I believe a Murder would be a dealbreaker for him.\",\"I'm close with both of my parents and talk to them a lot, but as a daughter, I do talk to my mom more than my dad. I share a lot of my concerns (academic, social, etc) with my mom, which is why I feel more comfortable sharing this with mom.\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Who would you tell?<\\/th>\\n      <th>Why?<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Who would you tell?\",\"targets\":1},{\"name\":\"Why?\",\"targets\":2}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n##  Why do you ask?\n\nIt's cousin Nick's fault...\n\n--\n- I think it's a funny question that reveals interesting things about our relationships with our parents\n\n--\n\n- What assumptions are we making when we ask this question?\n\n--\n  - You're not a murderer\n\n--\n  - You don't know someone who's committed a murder or been murdered\n\n--\n  - You've got a mom and dad\n\n--\n\n- How might we make this question better?\n\n--\n\n  - Use a screener question\n      - \"Would you feel comfortable...\"\n  - \"Pipe\" in responses from a prior question\n      - \"Who are two people who raised you...\"\n\n--\n\n**What questions we ask and how we ask them matters**\n\n\n## Hopes and Dreams, Fears and Worries\n\n.pull-left[\n**What are we excited about**\n\n- Engaging with social science\n- Learning statistics and math\n- Learning to code\n]\n\n--\n.pull-right[\n**What are we worried about**\n\n- Engaging with social science\n- Learning statistics and math\n- Learning to code\n]\n\n\n### What will we do?\n\n.pull-left[\n**Me**\n\n- Try to make the material as clear as possible\n- Provide lots of opportunities for practice\n- Provide detailed and timely feedback\n- Be available through office hours and email\n]\n\n--\n.pull-right[\n**You**\n\n- Do the reading, come class, ask questions\n- Engage with labs and tutorials with a \"growth mindset\"\n- Ask questions throughout\n- Come to office hours!\n]\n\n\nclass: inverse,center, bottom\nbackground-image:url(\"https://media2.giphy.com/media/ZCNjymWszyazkph0z2/200.webp?cid=ecf05e47l0nwxqty4s1m0l4bn43cpkl6wapqcbipk1a4otyt&rid=200.webp&ct=g\")\nbackground-size: cover\n# How you doin\n\nclass: inverse,bottom,center\nbackground-image:url(\"https://media.giphy.com/media/KQER23aFnrfSU/giphy.gif\")\nbackground-size: cover\n# Menza Menz\n\n\n\n## Testa's 50-50 rule\n\n- When I was in your shoes...\n\n--\n  - **COME TO CLASS**\n--\n- When I was in grad school I often felt like I understood only 50% of what was taught\n\n--\n- As I took more classes, I realized that actually understood only about 50% of that initial 50%\n\n--\n- That's your target. \n- Don't worry about getting everything right\n- Focus on getting better each class\n\n\n\n\n\n\n## Goals\n\nToday we'll explore COVID-19 data in the U.S. We'll try to answer to one question. \n\n> On average, did states that adopted mask mandates have lower rates of new cases?\n\n--\n\nSeems simple right?\n\n\n\n\n## Topics\n\n\n- Working with R Markdown files\n\n- Basic Programming in R\n\n- Setting up your work space\n\n- Loading data into R\n\n- Looking at your data\n\n- Cleaning and transforming your data\n\n- Describing typical values and variation in your data\n\n\n## Exercises\n\n1. Create an R Markdown File\n\n2. Explore objects and functions in base `R`\n\n3. Install the `tidyverse` and `COVID19` packages and reading data in R\n\n4. Exploring Covid-19 Data\n\n5. Transforming our data with the tidyverse\n\n6. Describing our data\n\n\n\n\n\n\nclass: inverse, center, middle\n# ðŸ’¡\n# Working with R Markdown files\n\n## YAML + Markdown + R -> Render -> Output\n\n\n## R Markdown Workflow\n\n1. Open a .Rmd\n2. Choose your output\n3. Update the YAML\n3. Write text in Markdown\n4. Embed your R code in code chunks\n5. Render your document using `knitr` to knit your code and markdown into chosen output\n\nCheatsheet: https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf\n\n\n\n\nclass: inverse, center, middle\nbackground-image: url(\"https://media.giphy.com/media/fwWCuPYI6rE2jGNsrk/giphy.gif\")\nbackground-size: contain\n\n\n# ðŸ’ª  \n# 1. Create an R Markdown File\n\n\n\n## Tips for working in R Markdown\n\n- YAML controls output\n- Format text using Markdown syntax\n- Write code in chunks\n- Control output of code chunks with options.\n- Knit your documents to produce output.\n\n\nclass: inverse, center, middle\n# ðŸ’¡\n# Basic Programming in R\n\n\n## The Basics of R\n\n- R is an interpreter (>)\n\n- \"Everything that exists in R is an object\"\n\n- \"Everything that happens in R is the result of a function\"\n\n- Packages make R great\n\n\n## R is an interpreter (>)\n\n--\n\nEnter commands line-by-line in the console\n\n--\n\n* The `>` means R is a ready for a command\n\n--\n\n* The `+` means your last command isn't complete\n\n--\n\n  - If you get stuck with a `+` use your escape key!\n\n--\n\n* Send commands from your R script (.Rmd or .R file) to the console:\n\n  - `cntrl + Enter` (PC) |  `cmd + Return` (Mac) -> run current line\n  - `cntrl + shift + Enter` (PC) |  `cmd + shift  + Return` (Mac) -> run all code in current chunk\n\n\n\n## R is a Calculator\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Operator </th>\n   <th style=\"text-align:left;\"> Description </th>\n   <th style=\"text-align:left;\"> Usage </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> + </td>\n   <td style=\"text-align:left;\"> addition </td>\n   <td style=\"text-align:left;\"> x + y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> - </td>\n   <td style=\"text-align:left;\"> subtraction </td>\n   <td style=\"text-align:left;\"> x - y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> * </td>\n   <td style=\"text-align:left;\"> multiplication </td>\n   <td style=\"text-align:left;\"> x * y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> / </td>\n   <td style=\"text-align:left;\"> division </td>\n   <td style=\"text-align:left;\"> x / y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ^ </td>\n   <td style=\"text-align:left;\"> raised to the power of </td>\n   <td style=\"text-align:left;\"> x ^ y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> abs </td>\n   <td style=\"text-align:left;\"> absolute value </td>\n   <td style=\"text-align:left;\"> abs(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> %/% </td>\n   <td style=\"text-align:left;\"> integer division </td>\n   <td style=\"text-align:left;\"> x %/% y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> %% </td>\n   <td style=\"text-align:left;\"> remainder after division </td>\n   <td style=\"text-align:left;\"> x %% y </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n5 %/% 2 # 2 goes into 5 two times with...\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n\n```{.r .cell-code}\n5 %% 2 # 1 left over\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n\n\n\n## R is logical\n\n\n\n\n\n\n\n\n.pull-left[\n\n\n\n::: {.cell layout-align=\"center\"}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Operator </th>\n   <th style=\"text-align:left;\"> Description </th>\n   <th style=\"text-align:left;\"> Usage </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> &amp; </td>\n   <td style=\"text-align:left;\"> and </td>\n   <td style=\"text-align:left;\"> x &amp; y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> | </td>\n   <td style=\"text-align:left;\"> or </td>\n   <td style=\"text-align:left;\"> x | y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> xor </td>\n   <td style=\"text-align:left;\"> exactly x or y </td>\n   <td style=\"text-align:left;\"> xor(x, y) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ! </td>\n   <td style=\"text-align:left;\"> not </td>\n   <td style=\"text-align:left;\"> !x </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n\n]\n\n.pull-right[\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx <- T; y <- F\n\nx == T\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nx == T & y == T\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nx == T | y == T\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\n!x\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n\n]\n\n\n## logical vs exclusive OR\n\n- `|` is inclusive, so `x|y` means\n  - x is true or\n  - y is true or\n  - both x and y are true\n- `xor` is exclusive so `xor(x,y)` means\n  - x is true or\n  - y is true\n  - but not both\n  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx <- c(0,1,0,1)\ny <- c(0,0,1,1)\nboolean_or <- x | y # R treats 1 as T and 0 as F\nexclusive_or <- xor(x,y)\ntibble(x,y,boolean_or,exclusive_or)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 Ã— 4\n      x     y boolean_or exclusive_or\n  <dbl> <dbl> <lgl>      <lgl>       \n1     0     0 FALSE      FALSE       \n2     1     0 TRUE       TRUE        \n3     0     1 TRUE       TRUE        \n4     1     1 TRUE       FALSE       \n```\n\n\n:::\n:::\n\n\n\n\n## R can make comparisons\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Operator </th>\n   <th style=\"text-align:left;\"> Description </th>\n   <th style=\"text-align:left;\"> Usage </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> &lt; </td>\n   <td style=\"text-align:left;\"> less than </td>\n   <td style=\"text-align:left;\"> x &lt; y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> &lt;= </td>\n   <td style=\"text-align:left;\"> less than or equal to </td>\n   <td style=\"text-align:left;\"> x &lt;= y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> &gt; </td>\n   <td style=\"text-align:left;\"> greater than </td>\n   <td style=\"text-align:left;\"> x &gt; y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> &gt;= </td>\n   <td style=\"text-align:left;\"> greater than or equal to </td>\n   <td style=\"text-align:left;\"> x &gt;= y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> == </td>\n   <td style=\"text-align:left;\"> exactly equal to </td>\n   <td style=\"text-align:left;\"> x == y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> != </td>\n   <td style=\"text-align:left;\"> not equal to </td>\n   <td style=\"text-align:left;\"> x != y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> %in% </td>\n   <td style=\"text-align:left;\"> group membership* </td>\n   <td style=\"text-align:left;\"> x %in% y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> is.na </td>\n   <td style=\"text-align:left;\"> is missing </td>\n   <td style=\"text-align:left;\"> is.na(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> !is.na </td>\n   <td style=\"text-align:left;\"> is not missing </td>\n   <td style=\"text-align:left;\"> !is.na(x) </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n\n\n*(shortcut to using `|` repeatedly with `==`)\n\n\n\n## When we'll use logic and comparison in R\n\nLogic and comparisons are useful for:\n\n- Probability\n  - What's the probability that state adopts (`A==1`) a mask mandate if Biden won its Electoral College votes `Pr(A==1 | B==1)`\n- Subsetting the data\n  - We only want to look at states Biden won Electoral College vote (select only states where `A==1`)\n- Transforming data / creating new variables\n  - We want to create an indicator of states that Biden won which also adopted mask mandates (`A== 1 & B == 1`)\n\n\n\n## Everything that exists in R is an object\n\n- The number 5 is an object in R\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n:::\n\n\n\n- We can assign the object 5, the name x, using the assignment operator `<-`+\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx <- 5 # Read this as \"x gets 5\"\n```\n:::\n\n\n\n- Now if we tell R to show us x, we'll get\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n:::\n\n\n\n\n## Data come in different types\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](http://r4ds.had.co.nz/diagrams/data-structures-overview.png){fig-align='center' width=500}\n:::\n:::\n\n\n\n\n\n\n## Data come in different types\n\n.pull-left[\n* Numeric (2 subtypes)\n    - Integers (`1, 50`)\n    - Double (`1.5, 50.25`, `?double`)\n* Character (`\"hello\"`)\n* Factor (`grade = \"A\" | grade = \"B\"`)\n* Logical (`TRUE | FALSE`)\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Create some data\ny <- 6L # Integer\nonly_two_types_of_people <- TRUE # Logical\nme <- \"Paul\"\ngrades = factor(c(\"A\",\"B\",\"C\"))\n```\n:::\n\n\n\n]\n\n.pull-right[\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# What type are they\nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"integer\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(only_two_types_of_people)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"logical\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(me)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(grades)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"factor\"\n```\n\n\n:::\n:::\n\n\n]\n\n\n## Data come in different \"shapes\" and \"sizes\"\n\nName | \"Size\" | Type of Data  | R code\n--|-||--\nscalar | 1 | numeric, character, factor, logical |  `x <- 5` \nvector | N elements: `length(x)` |all the same  |` v <- c(1, 2, T, \"false\")`\nmatrix | N rows by columns K: `dim(x)` | all the same |` m <- matrix(y,2,2)`\narray |  N row by K column by J dimensions: `dim(x)` |all the same  | `a <- array(m,c(2,2,3))`\ndata frames |  N row by K column matrix | can be different | `d <-data.frame(x=x, y=y)`\ntibbles |  N row by K column matrix | can be different | `d <-tibble(x=x, y=y)`\nlists |  can vary | can be different | `l <-list(x,y,m,a,d)`\n\n--\n- We will mostly work with `data.frames` and `tibbles` (a data.frame with added bells and whistles)\n\n\n\nbackground-image: url(https://miro.medium.com/max/1400/0*MgEQsDgZZ7fJcdhZ.png)\nbackground-size: cover\nclass: top, right\n\n#### Source: [Gaurav Tiwari](https://medium.com/@tiwarigaurav2512/r-data-types-847fffb01d5b)\n\n\n\n## Why data types and structures matter\n\n- R treats different data types differently\n  - This can be a source of error and opportunity\n- For example, we can use:\n  - `vectors` to store values to select variables or label plots\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmy_vars <- c(\"variable_name1\",\"variable_name2\")\n```\n:::\n\n\n  - `matrices` to do math\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nM1 <- M2 <- matrix(1:4,2,2)\nM1 %*% M2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2]\n[1,]    7   15\n[2,]   10   22\n```\n\n\n:::\n:::\n\n\n  - `data.frames/tibbles` to store and manipulate data\n  - `lists` to store complex outputs, like say the results of estimating six slightly different models\n\nFor now, just know that these differences exist and matter.\n\n\n\n## Everything that happens in R is the result of a function\n\n- You've already seen and used some R functions\n  - the `<-` is the assignement operator that assigns a value to a name\n  - `c()` is the combine function that combines elements together\n  - `install.packages()` installs packages\n  - `library()` loads packages you've installed so you can use functions and data that are part of that package\n  \n\n## Three sources of functions\n\n- Three sources of functions:\n  - base R `<-; mean(x); library(\"package_name\")`\n  - packages `remotes::intall_github(\"user/repository\")`\n  - You `my_function <- function(x){x^2}`\n  \n\n## Functions are like recipes\n\nThey have\n\n.pull-left[\n- names\n\n- ingredients (inputs)\n\n- steps that tell you what to do with the ingredients (statements/code)\n\n- tasty results from applying those steps to given ingredients (outputs)\n]\n\n.pull-right[\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncan_x_kick_it <- function(x){\n  # Determine if x can kick it\n  # If x in A Tribe Called Quest\n  if(x %in% c(\"Q-Tip\",\"Phife Dawg\",\n              \"Ali Shaheed Muhammad\", \n              \"Jarobi White\")){\n    return(\"Yes you can\")\n  }else{\n    return(\"Before this, did you really know what live was?\")\n  }\n\n}\ncan_x_kick_it(\"Q-Tip\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Yes you can\"\n```\n\n\n:::\n\n```{.r .cell-code}\ncan_x_kick_it(\"Paul\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Before this, did you really know what live was?\"\n```\n\n\n:::\n:::\n\n\n\n\n]\n\n\n\n## When we'll use functions\n\n- All the time (\"Everything that happens in R is the result of a function\")\n- Most of the time we'll use functions that are part of `base` R or some package we've installed and loaded\n- Later, we'll start to write our own functions\n  - This is particularly useful when you find yourself copying and pasting the same code over and over.\n\n\nclass: inverse, center, middle\nbackground-image: url(\"https://media.giphy.com/media/Nf8vX5K7AHcAg/giphy.gif\")\nbackground-size: cover\n\n\n\n\n\n# ðŸ’ª \n# 2. Explore objects and functions in base `R`\n\n\n## Create some simple objects\n\nIn the .Rmd file you created for this class\n\n1. Delete the template  (everything below the YAML Header)\n2. Create a new code chunk (cmd/cntrl + shift + I)\n3. Copy the following into your code chunk and interpret the results:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Create objects\nx <- 5\ny <- T\nz <- 1:5\n\n# Look at objects\nx\ny\nz\n\n# Manipulate objects\nx*x\ny+x\nx^z\n```\n:::\n\n\n\n\n\n## Create some more complex objects\n\n\n.pull-left[\n- Run the following code\n  - If you have the slides open, there should be an icon you can hover over to copy all the code.\n- Print the objects in R's console\n]\n\n.pull-right[\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nv <- c(1, 2, T, \"false\") # Vector\nm <- matrix(y, nrow = 2, ncol = 2) # Matrix\na <- array(m, c(2, 2, 3)) # Array\nd <- data.frame(x = x, y = y) # Dataframe\nt <- tibble(x = x, y = y) # Tibble\nl <- list(x, y, m, a, d, t) # List\n```\n:::\n\n\n]\n\n\n\n\n\n## Summary Coding in R\n\n- We use functions to manipulate objects in R\n- Class/type/mode of objects matters\n- Use \\# to comment your code\n- Give objects meaningful names\n- Use consistent naming conventions:\n  - snake_case\n  - CamelCase\n  - SpONgeBObCaSE (don't do this)\n\n\n\n\n\n\nclass: inverse, center, middle\n# ðŸ’¡\n# Setting up your work space\n\n## Getting set up to work in R\n\nEach time you start a project in R, you will want to:\n\n1. Set your working directory to the source file location\n  - Session > Set Working Directory > Source File Location\n  - Make sure your document is saved in folder with the other files (e.g. data) you'll need\n\n\n## Getting set up to work in R\n\n1.  Set your working directory to the source file location\n\n--\n\n2. Load (and, if needed, install) R packages that you will be using\n  - Install packages once with `install.packages(\"package_name\")`\n  - Load packages to use during your work session with `library(\"package_name\")`\n  - Periodically check for updates in package panel on the lower right\n  \n\n## Getting set up to work in R\n\n1. Set your working directory to the source file location\n\n2. Load (and, if needed, install) R packages that you will be using\n\n--\n\n3. Change any \"global\" options you want\n  - I'll typically do this for you\n  - Useful for controlling how code or figures are displayed\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Options for these slides\nknitr::opts_chunk$set(\n  warning = FALSE,       # Don't display warnings\n  message = FALSE,       # Don't display messages\n  comment = NA,          # No prefix before line of text\n  dpi = 300,             # Figure resolution\n  fig.align = \"center\",  # Figure alignment\n  out.width = \"80%\",     # Figure width\n  cache = FALSE          # Don't cache code chunks\n  )\n```\n:::\n\n\n\n\n## Getting set up to work in R\n\n1. Set your working directory to the source file location\n\n2. Load (and, if needed, install) R packages that you will be using\n\n3. Change any \"global\" options you want\n\n--\n\n4. Load the data you're going to be using \n    \n\nclass: inverse, center, middle\n# ðŸ’¡\n# Loading data into R\n\n\n\n\n## Loading data into R\n\nThere are three ways to load data.\n\n- Load a pre-existing dataset\n  - `data(\"dataset\")` will load the dataset named \"dataset\"\n  - `data()` will list all datasets\n  - Useful for tutorials, working through examples/help\n- Load a .Rdata/.rda file using `load(\"dataset.rda\")`\n- Read data of a different format (.csv, .dta, .spss) into R using specific functions\n  - We will use functions from the `haven` and `readr` packages to read data from the web and stored locally on your computer\n  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Reading data from a webiste\ndf_web <- readr::read_csv(\"https://pols1600.paultesta.org/files/data.rda\")\n# Reading data from your computer\ndf_local <- haven::read_dta(\"~/Desktop/pols1600/lab/data.rda\")\n```\n:::\n\n\n\n\n\nclass: inverse, center, middle\nbackground-image: url(\"https://miro.medium.com/max/612/1*GS0ohg3qm14E4Ya7fljicw.jpeg\")\nbackground-size:cover\n\n# ðŸ’ª \n# 3. Installing packages and reading data in R\n\n\n## Installing the `tidyverse` and `COVID19` packages\n\nLet's install the `tidyverse` and `COVID19`.\n\n- Create a new code chunk\n- Label it `libraries`\n- Copy and paste the following into your console\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ninstall.packages(c(\"tidyverse\",\"COVID19\"))\n```\n:::\n\n\n\n## Loading the `tidyverse` and `COVID19` packages\n\n\n- Type the following into your code chunk:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(COVID19)\n```\n:::\n\n\n\n\n## Loading state-level data\n\n.pull-left[\nNow we can use the `covid19()` to read in data about COVID19 in the US\n\nTo do so we'll suppy three arguments:\n\n- `country = US` tells the function we want data for the US\n- `level = 2` tells the function we want state-level data\n- `verbose = F` tells the function not to print other stuff\n]\n.pull-right[\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncovid <- COVID19::covid19(\n  country = \"US\",\n  level = 2,\n  verbose = F\n    \n)\n```\n:::\n\n\n]\n\n\nclass: inverse, center, middle\n\n# ðŸ’¡\n# Looking at your data\n\n\n\n## High Level Overviews\n\nAnytime you load data into R, try some combination of the following to get a high-level overview of the data\n\n- `dim(data)` gives you the dimensions (\\# of rows and columns)\n- `View(data)` opens data in a separate pane\n- `print(data); data` will display a truncated view of data in your console\n- `glimpse(data)` will show a transposed (switch columns and rows) version of data with information on variable type\n- `head(data)` shows you the first 5 rows\n- `tail(data)` shows you the last 5 rows\n- `glimpse(data)`\n- `data$variable` extracts `variable` from `data`\n- `table(data$variable)` creates a frequency table\n  - Good for categorical data\n- `summary(data$variable)` summary statistics\n  - Good for numeric data\n\n\n## High Level Overview allow you to\n\nThese HLOs allow you to\n\n- Describe the structure of your data:\n  - How many observations (rows)\n  - How many variables (columns)\n- Describe the *unit of analysis*\n  - What does a row in your data correspond to\n- Indetify the class and type of variables (columns)\n  - Numeric, categorical, logical\n  - Is there missing data (`NA`s)\n\n\nclass: inverse, center, middle\nbackground-image: url(\"https://media.makeameme.org/created/data-dataeverywhere.jpg\")\nbackground-size:contain\n# ðŸ’ª \n# 4. Exploring Covid-19 Data\n\n\n## Exploring Covid-19 Data\n\n1. Create a new chunk\n2. Label it explore_data\n3. Type the following\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndim(covid)\nhead(covid)\nglimpse(covid)\ntable(covid$administrative_area_level_2)\ncovid$confirmed\nsummary(covid$confirmed)\ntable(covid$stay_home_restrictions)\n```\n:::\n\n\n\n\n## Answer the following\n\n\n- How many observations are there (rows)\n- How many variables (columns)\n- What's the unit of analysis?\n  -In words, how would you describe what a row in your data set corresponds to?\n- Are there any missing values for `confirmed`\n- Range of values can `stay_home_restrictions` take\n\n\n\n## Answer the following\n\n.pull-left[\n- How many observations are there (rows)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndim(covid)[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 80156\n```\n\n\n:::\n:::\n\n\n\n- How many variables (columns)\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndim(covid)[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 47\n```\n\n\n:::\n:::\n\n\n\n\n\n\n]\n.pull-right[\n- What's the unit of analysis? A \"'State'-Date\"\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncovid %>%\n  select(\"date\",\"administrative_area_level_2\")%>%\n  slice(1:2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        date administrative_area_level_2\n1 2020-03-16    Northern Mariana Islands\n2 2020-03-17    Northern Mariana Islands\n```\n\n\n:::\n:::\n\n\n\n]\n\n\n## Answer the following\n\n\n- Is there missing data in `confirmed`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(covid$confirmed)[7]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n NA's \n18214 \n```\n\n\n:::\n\n```{.r .cell-code}\ntable(is.na(covid$confirmed))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFALSE  TRUE \n61942 18214 \n```\n\n\n:::\n:::\n\n\n\n- What values can `stay_home_restrictions` take\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntable(covid$stay_home_restrictions)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n   -2    -1     0     1     2 \n 1437  3560 31248 15024  2409 \n```\n\n\n:::\n:::\n\n\n\n\n## Summary\n\nWe used:\n- `dim()` to get a sense of the size of our data\n- `View()/glimpse/print()` helped us describe the structure (State-Date)\n- `summary()` and `table()` to get a quick sense of some variables\n  - What's up with the negative values of `stay_home_restrictions`\n  - https://covid19datahub.io/articles/docs.html\n- The index operator `[]` to select values we wanted\n- We used the `%>%` operator to chain together functions to help us look at the data\n\n\nclass: inverse, center, middle\n# ðŸ’¡\n# Data Wrangling in the Tidyverse\n\n\nclass: inverse, middle, center\n# The Tidyverse\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](https://www.tidyverse.org/images/hex-tidyverse.png){fig-align='center' width=25%}\n:::\n:::\n\n\n\n\n*\"The tidyverse is an opinionated collection of R packages designed for data science. All packages share an underlying design philosophy, grammar, and data structures.\"*\n\n\n\n## The Tidyverse: What we'll learn today\n\n- What is tidy data\n- How to use the pipe `%>%` to make our code more intuitive\n- In our exercise we will see how to use the following from the `dplyr` package:\n  - `filter()` to filter rows in our data\n  - `mutate()` to create new columns in our data\n  - `case_when` to create new columns in our data based on existing columns\n  - `group_by` to apply functions by a grouping variable\n  - `summarize` to summarize the results of a function\n\n\n## Tidy Data\n\nTidy data is a standard way of mapping the meaning of a dataset to its structure. \n\nA dataset is messy or tidy depending on how rows, columns and tables are matched up with observations, variables and types. In tidy data:\n\n- Every column is a variable.\n\n- Every row is an observation.\n\n- Every cell is a single value.\n\n[More](https://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html)\n\n\nclass: center, middle, inverse\n\n# `%>%`\n\n## The pipe\n\n*\"dataframe first, dataframe once\"*\n\n--\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n:::\n\n\n\n\n--\n\nRStudio Keyboard Shortcuts:\n\nOSX: `CMD` + `SHIFT` + `M`\n\nElse: `CTRL` + `SHIFT` + `M`\n\n\nclass: middle\n\n*Nesting* a dataframe inside a function is hard to read.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nslice(covid, 1)\n```\n:::\n\n\n\n--\n\nHere, the \"sentence\" starts with a <font color=\"#ED1941\">verb</font>.\n\n--\n\n<hr>\n\n*Piping* a dataframe into a function lets you read L to R\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncovid %>% slice(1)\n```\n:::\n\n\n\n--\n\nNow, the \"sentence\" starts with a <font color=\"#ED1941\">noun</font>.\n\n\n\n\nclass: middle\n\nSequences of functions make you read *inside out*\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nslice(filter(covid, administrative_area_level_2 == \"Rhode Island\"), 1)\n```\n:::\n\n\n\n--\n\n<hr>\n\nChaining functions together lets you read *L to R*\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncovid %>% \n  filter(administrative_area_level_2 == \"Rhode Island\") %>% \n  slice(1)\n```\n:::\n\n\n\n\n\nclass: inverse, center, middle\nbackground-image: url(\"https://hms.harvard.edu/sites/default/files/media/DNA%20large.jpg\")\nbackground-size: cover\n# ðŸ’ª \n# Excerise 5. Wrangling with the Tidyverse\n\n\n## Tasks\n\n- Subset our Covid data to include only the 50 states + DC\n  - `filter()`\n- Create two new variables that capture the \\# of new cases and face mask policy in place\n  - `mutate()` with `case_when()`\n\n\n## Subseting our data\n\n1. Create a vector of the territories we **don't** want\n2. Use the `filter()` command to \"filter\" out these territories\n\n\n## 1. Create a vector of the territories we **don't** want\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nterritories <- c(\n  \"American Samoa\",\n  \"Guam\",\n  \"Northern Mariana Islands\",\n  \"Puerto Rico\",\n  \"Virgin Islands\"\n  )\n```\n:::\n\n\n\n\n# 2. Use the `filter()` command to \"filter\" out these territories\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncovid_us <- covid %>%\n  filter(!administrative_area_level_2 %in% territories )\n\ndim(covid)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 80156    47\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(covid_us)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 73354    47\n```\n\n\n:::\n:::\n\n\n\n\n\nThe command:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# filter(!administrative_area_level_2 %in% territories )\n```\n:::\n\n\n\nFilters data based on the logical statement:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# !administrative_area_level_2 %in% territories\n```\n:::\n\n\n\nWithout the `!`, \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# administrative_area_level_2 %in% territories\n```\n:::\n\n\n\nTells us which observations are from U.S. territories. The `!` \"negates\" this logical comparison\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# !administrative_area_level_2 %in% territories\n```\n:::\n\n\n\nSo it tells us which observations are *not* U.S. territories.\n\n\n## Creating new variables with `mutate()`\n\n.pull-left[\n- Copy `administrative_area_level_2` into new variable `state\n- Group by state\n- Calculate the number of new cases\n- Scale this number per 100,00 citizens\n]\n.pull-right[\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndim(covid_us)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 73354    47\n```\n\n\n:::\n\n```{.r .cell-code}\ncovid_us %>%\n  mutate(\n    state = administrative_area_level_2,\n  ) %>%\n  dplyr::group_by(state) %>%\n  mutate(\n    new_cases = confirmed - lag(confirmed),\n    new_cases_pc = new_cases/population *100000\n    ) -> covid_us\ndim(covid_us)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 73354    50\n```\n\n\n:::\n:::\n\n\n]\n\n\n## Creating new variables with `mutate()` and `case_when()`\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncovid_us %>%\n  mutate(\n    face_masks = case_when(\n      facial_coverings == 0 ~ \"No policy\",\n      abs(facial_coverings) == 1 ~ \"Recommended\",\n      abs(facial_coverings) == 2 ~ \"Some requirements\",\n      abs(facial_coverings) == 3 ~ \"Required shared places\",\n      abs(facial_coverings) == 4 ~ \"Required all times\",\n      \n    ) %>% factor(.,\n      levels = c(\"No policy\",\"Recommended\",\n                 \"Some requirements\",\n                 \"Required shared places\",\n                 \"Required all times\")\n    )\n  ) -> covid_us\n```\n:::\n\n\n\n\n\nclass: inverse, center, middle\n# ðŸ’¡\n# Describing typical values and variation in your data\n\n\n## Descriptive Inference\n\nWhen social scientists talk about descriptive inference, we're trying to summarize our data and make claims about what's *typical* of our data\n\n--\n- What's a typical value\n  - \"Measures of central tendency\"\n\n--\n- How do our data vary around typical values\n  - \"Measures of dispersion\"\n\n--\n- How does variation in one variable relate to variation in another\n  - \"Measures of association\"\n\n\n\n\n## Using R to Summarize Data\n\nHere are some common ways of summarizing  data and how to calculate them with `R`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Description </th>\n   <th style=\"text-align:left;\"> Usage </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> sum </td>\n   <td style=\"text-align:left;\"> sum(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> minimum </td>\n   <td style=\"text-align:left;\"> min(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> maximum </td>\n   <td style=\"text-align:left;\"> max(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> range </td>\n   <td style=\"text-align:left;\"> range(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> mean </td>\n   <td style=\"text-align:left;\"> mean(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> median </td>\n   <td style=\"text-align:left;\"> median(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> percentile </td>\n   <td style=\"text-align:left;\"> quantile(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> variance </td>\n   <td style=\"text-align:left;\"> var(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> standard deviation </td>\n   <td style=\"text-align:left;\"> sd(x) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> rank </td>\n   <td style=\"text-align:left;\"> rank(x) </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n\n\nAll of these functions have an argument called `na.rm=F`. If your data have missing values, you'll need to set `na.rm=F` (e.g. `mean(x, na.rm=T)`) \n\n\nclass:inverse,center, middle\nbackground-image:url(\"https://i.pinimg.com/originals/83/5c/33/835c33d22fd2ae61cbf0c14545524d54.jpg\")\nbackground-size:cover\n# ðŸ’ª\n# 6. Describing our data\n\n\n## Describing our data\n\nWe're finally ready to answer that simple question we began class with\n\n> On average, did states that adopted mask mandates have lower rates of new cases?\n\nTo do so use  the following functions\n\n- `filter()` and `is.na()`to only look at cases where we have data on face mask requirements\n\n- `mean()` to calculate the average number of new cases\n\n- `group_by()` to calculate this mean separately for each level of face mask policy\n\n- `summarize()` to summarize our results\n\n\n## Face Masks and New Covid-19 Cases (per 100k)\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncovid_us %>%\n  filter(!is.na(face_masks))%>%\n  group_by(face_masks)%>%\n  summarize(\n    `Average No. of New Cases` = round(mean(new_cases_pc, na.rm=T),2)\n  )%>%\n  rename(\n    \"Face Mask Policy\" = face_masks\n  ) -> face_mask_summary\n```\n:::\n\n\n\n\n## Face Masks and New Covid-19 Cases (per 100k)\n\n.pull-left[\n\n- What should we conclude?\n\n- What's wrong with this simple comparison?\n\n- What's a better comparison? (Thursday)\n\n]\n\n.pull-right[\n\n\n\n::: {.cell layout-align=\"center\"}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Face Mask Policy </th>\n   <th style=\"text-align:right;\"> Average No. of New Cases </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> No policy </td>\n   <td style=\"text-align:right;\"> 10.26 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Recommended </td>\n   <td style=\"text-align:right;\"> 16.61 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Some requirements </td>\n   <td style=\"text-align:right;\"> 36.18 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Required shared places </td>\n   <td style=\"text-align:right;\"> 29.38 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Required all times </td>\n   <td style=\"text-align:right;\"> 32.18 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n\n\n]\n\n\nbackground-image:url(https://memegenerator.net/img/instances/84491541.jpg)\nbackground-size:contain\n\n\n# Summary\n\n- We covered A LOT\n- It's ok to feel overwhelmed\n  - But please don't suffer in silence\n- Don't worry if everything didn't make sense.\n  - Eventually it will, but this takes time and practice\n\n\n# Summary\n\nHopefully you learned something about the following:\n\n- How to create .Rmd files and run code in R\n- How to install and use packages in R\n- How to load, view, and describe data\n\n\n# Next\n\n- Thursday Lab: Further explorations of COVID-19 data\n\n  - If you're on the waitlist and still want to take the class, let me know\n\n- Friday: Tutorials 1 and 3 due on Canvas\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding/datatables.js\"></script>\n<script src=\"../site_libs/jquery/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}