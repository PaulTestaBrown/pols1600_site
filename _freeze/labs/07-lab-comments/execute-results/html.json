{
  "hash": "62887005ce1ed6436cfb81daffa570df",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Lab 07 - Replicating Grumbach and Hill (2022):'\nsubtitle: \"Understanding the Data and Design \"\nauthor: \"P.F. Testa\"\ndate: \"Last Updated 2024-03-12\"\nformat:\n  html:\n    toc: true\n    toc-location: right\n    toc-float: true\n    toc-depth: 2\n    number-sections: true\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  message: false\n  cache: true\n---\n\n\n\n# Overview {.unnumbered}\n\nIn this lab, we will begin the process of replicating Grumbach and Hill (2021) \"Rock the Registration: Same Day Registration Increases Turnout of Young Voters.\"\n\nTo accomplish this we will:\n\n0. Load packages and set the working directory to **where this file is saved**. (5 minutes)\n\n1. **Summarize the study** in terms of it's research question, theory, design, and results. (10 minutes)\n\n2. Download the replication files and **save them in the same folder as this lab** (5 minutes)\n\n3. **Load the data** from your computers into R (5 minutes)\n\n4. Get a quick **HLO** of the data (10 minutes)\n\n5. **Merge** data on election policy into data on voting (5 minutes, together),\n\n6. **Recode** the covariates, key predictors, and outcome for the study (10 minutes, partly together)\n\n7. Recreate **Figure 1** (15 minutes)\n\n8. Recreate **Figure 2** (15 minutes)\n\nFinally, we'll take the weekly survey which should be a **fun** one\n\nOne of these 8 tasks will be randomly selected as the graded question for the lab.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(3142024)\ngraded_question <- sample(1:8,size = 1)\npaste(\"Question\",graded_question,\"is the graded question for this week\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Question 6 is the graded question for this week\"\n```\n\n\n:::\n:::\n\n\n\nYou will work in your assigned groups. Only one member of each group needs to submit the html file of lab.\n\nThis lab **must** contain the names of the group members in attendance.\n\nIf you are attending remotely, you will submit your labs individually.\n\nHere are your assigned groups for the semester.\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-0114b0427cd317b90518\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0114b0427cd317b90518\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"],[\"Group 1\",\"Group 2\",\"Group 3\",\"Group 4\",\"Group 5\",\"Group 6\",\"Group 7\",\"Group 8\"],[\"Maia Eng\",\"Andrew Rovinsky\",\"Serafym Rybachkivskyi\",\"Tiffany Eddy\",\"Christopher Maron\",\"Mia Hamilton\",\"Mariana Melzer\",\"Logan Szittai\"],[\"Guadalupe Herrera\",\"Spencer Lorin\",\"Rachel Kim\",\"Daniel Solomon\",\"Daniel Baker\",\"Emily Colon\",\"Kahrie Langham\",\"Keiley Thompson\"],[\"Stephen Robinson\",\"Lucinda Anderson\",\"Kai Blades\",\"Zoe Smith\",\"Neve Diaz-Carr\",\"Davis Kelly\",\"Shannon Feerick-Hillenbrand\",\"Lydell Dyer\"],[\"Jeremiah Harrington\",\"Serenity Hamilton\",\"Emma Coleman\",\"Lorena Calderon\",\"Olivia Hanley\",\"Talia Levine\",\"Jarret Fernandes\",\"Mahir Arora\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Group<\\/th>\\n      <th>1<\\/th>\\n      <th>2<\\/th>\\n      <th>3<\\/th>\\n      <th>4<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Group\",\"targets\":1},{\"name\":\"1\",\"targets\":2},{\"name\":\"2\",\"targets\":3},{\"name\":\"3\",\"targets\":4},{\"name\":\"4\",\"targets\":5}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n# Goals {.unnumbered}\n\nThis week's lab will give you practice:\n\n- Summarizing academic work (Q1)\n\n- Loading data into R from your own computer (rather than just downloading it from the web) (Q2-3)\n\n- Looking at new data and figuring out what you need to do (e.g. merging, recoding) before you can analyze it (Q4-6)\n\n- Creating and interpreting figures that summarize aspects of a study's design and data (Q7-8)\n\nNext week, we'll get into the nuts and bolts of replicating Grumbach and Hill's main results\n\n\n# Workflow {.unnumbered}\n\n## Please render this .qmd file {.unnumbered}\n\nAs with every lab, you should:\n\n-   Download the file\n-   Save it in your course folder\n-   **Update the `author:` section of the YAML header to include the names of your group members in attendance.**\n-   Render the document\n-   Open the html file in your browser (Easier to read)\n-   Write your code in the **chunks provided under each section**\n-   Comment out or delete any test code you do not need\n-   **Render the document again after completing a section or chunk** (Error checking)\n-   Upload the final lab to [Canvas](https://canvas.brown.edu/courses/1094972/assignments){target=\"_blank\"}.\n\n# Get set up to work{.unnumbered}\n\n\n## Load packages {.unnumbered}\n\n\nAs always, let's load the packages we'll need for today\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthe_packages <- c(\n  ## R Markdown\n  \"kableExtra\",\"DT\",\"texreg\",\"htmltools\",\n  ## Tidyverse\n  \"tidyverse\", \"lubridate\", \"forcats\", \"haven\", \"labelled\",\n  ## Extensions for ggplot\n  \"ggmap\",\"ggrepel\", \"ggridges\", \"ggthemes\", \"ggpubr\", \n  \"GGally\", \"scales\", \"dagitty\", \"ggdag\", \"ggforce\",\n  # Data \n  \"COVID19\",\"maps\",\"mapdata\",\"qss\",\"tidycensus\", \"dataverse\",\n  \"janitor\",\n  # Analysis\n  \"DeclareDesign\", \"easystats\", \"zoo\"\n)\n\n# Define function to load packages\nipak <- function(pkg){\n    new.pkg <- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n    if (length(new.pkg)) \n        install.packages(new.pkg, dependencies = TRUE)\n    sapply(pkg, require, character.only = TRUE)\n}\n\nipak(the_packages)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   kableExtra            DT        texreg     htmltools     tidyverse \n         TRUE          TRUE          TRUE          TRUE          TRUE \n    lubridate       forcats         haven      labelled         ggmap \n         TRUE          TRUE          TRUE          TRUE          TRUE \n      ggrepel      ggridges      ggthemes        ggpubr        GGally \n         TRUE          TRUE          TRUE          TRUE          TRUE \n       scales       dagitty         ggdag       ggforce       COVID19 \n         TRUE          TRUE          TRUE          TRUE          TRUE \n         maps       mapdata           qss    tidycensus     dataverse \n         TRUE          TRUE          TRUE          TRUE          TRUE \n      janitor DeclareDesign     easystats           zoo \n         TRUE          TRUE          TRUE          TRUE \n```\n\n\n:::\n:::\n\n\nWe will also want to **set our working directory** to where your lab is saved.\n\n## IMPORTANT: Set your working directory {.unnumbered}\n\n\n1. On the top panel of R Studio click: \n\n> Session Session > Set working directory > Source file location\n\n2. Paste the output that shows up in your console into the code chunk below\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set working directory\n# Session > Set working directory > Source file location\n# paste output here:\n```\n:::\n\n\nAll right, now let's summarize the study\n\n# Summarize the study\n\nIn a few sentences please answer the following questions about Grumbach and Hill (2021):\n\n- **What's research question?** Broadly, Grumbach and Hill (2021 p. 405) are interested in whether \"election reform improve turnout among young people?\" Specifically, Grumbach and Hill assess whether turnout is higher among younger voters in states with Same-Day-Registration (SDR) laws. \n\n- **What's the theory motivating the research question and expectations?** Grumbach and Hill (henceforth, G&H) contribute to and draw on a broad literature on voting in the field of political behavior. While past work has found that states with SDR tend to have higher turnout, Grumbach and Hill argue that SDR laws are likely to be particularly effective among younger voters, because they reduce the costs of one of the major barriers to voting: registration. These costs are particular large among younger voters, since they are more likely to move during this period of their lives and thus need to re-register to vote. They also argue that younger voters may be more likely to be targeted by political campaigns for mobilization; Allowing same day registration, ensures that these potential voters can actually cast their ballots when mobilized. Conversely, while other electoral forms like early voting and absentee voting, also reduce the costs of voting, these costs, Grumbach and Hill, are generally similar for all voters, and thus unlikely to show heterogeneous effects by age.\n\n- **What's the empirical design?** G&H draw on a variety of datasets to test their claim. Their primary data for their main analyses comes from the Current Population Survey ( CPS) Voter Supplement, a biennial survey from the US Census that includes survey questions on voting behavior. They supplement this data with information on state election laws, specifically whether respondents home state allowed SDR, as well as other electoral reforms like early and absentee voting. G&H leverage variation in the adoption of SDR registration laws across time and states to estimate a series of difference-in-differences models using linear regression. They report a variety of specifications, all of which include some version of fixed effects for state and year.^[They also estimate models using both individual and aggregate data, for reasons a bit beyond the scope of this course] To test their primary claim, they interact indicators for different age groups with indicators of whether a state had SDR.\n\n- **What's the core finding?** The main results of their analyses are presented in Figure 3. Consistent with their expectations, they find that SDR laws increase turnout particularly among younger age cohorts. The magnitude of the effect varies from  3.1 and 7.3 percentage points among 18-24 year old respondents, depending on the specifications. The effects are largest during presidential elections (Figure 4). In Figure 5, they show that younger voters are more likely to report registering at a polling place in states with SDR, which is what we would expect, if they were registering on election day. Figure 6 suggests that implementing SDR nationwide, would results in a younger electorate that, given younger voters propensity to vote Democratic, appears large enough to change the results of recent elections.\n\n\n\n# Download the replication files\n\nOk now let's download the replication files from the paper's [replication archive](https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/AW5LU8){target=\"_blank\"}\n\nPlease see the [slides](https://pols1600.paultesta.org/slides/07-slides#/go-to-the-papers-dataverse){target=\"_blank\"}\n\nMake sure the files are **unzipped and saved** in  the **SAME folder as this lab**\n\n\n\n# Load the data\n\nThere should be 11 total files in the dataverse_files folder. We're only going to use three of the data files for this replication\n\nPlease uncomment and run the code below\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load fips_codes\n# fips_codes <- read_csv(\"dataverse_files/fips_codes_website.csv\")%>%\n#   janitor::clean_names()\n# \n# # Load policy data\n# policy_data <- readRDS(\"dataverse_files/policy_data_updated.RDS\")%>%\n#   janitor::clean_names()\n# \n# # Load CPS data\n# cps <- read_csv(\"dataverse_files/cps_00021.csv\") %>%\n#   janitor::clean_names()\n```\n:::\n\n\n:::{callout-note}\nThe `janitor::clean_names()` after each `read_XXX()` function converts column names to snake case\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSys.setenv(\"DATAVERSE_SERVER\" = \"dataverse.harvard.edu\")\n\n\n# Load fips_codes\nfips_codes <- get_dataframe_by_name(\n  \"fips_codes_website.tab\",\n  \"doi:10.7910/DVN/AW5LU8\"\n) %>% janitor::clean_names()\n\n# Load policy data\npolicy_data <- get_dataframe_by_name(\n  \"policy_data_updated.RDS\",\n  \"doi:10.7910/DVN/AW5LU8\",\n  .f = readRDS\n) %>% janitor::clean_names()\n\n# Load CPS data\ncps <- get_dataframe_by_name(\n  \"cps_00021.csv\",\n  \"doi:10.7910/DVN/AW5LU8\",\n  .f = read_csv\n) %>% janitor::clean_names()\n```\n:::\n\n\n\n# Get a HLO of each dataset\n\nIn the code chunk below, please take a quick look at each dataset and answer the following for about each dataset. I'll get you started for `fips_codes`\n\n- `fips_codes`\n  - **What is the unit of analysis?** Federal Information Processing Standards (FIPS) state and county codes\n  - **How many observations** 41,787 observations\n  - **How many variables** 33 variables\n  - **What variables identify US states** `st` and `statefip`\n\n- `data`\n  - **What is the unit of analysis?** State-years\n  - **How many observations** 2,450 observations\n  - **How many variables** 33 variables\n  - **What variable describes whether a state had Same Day Registration (SDR)** `sdr`\n\n- `cps`\n  - **What is the unit of analysis?** A respondent to the CPS, a US resident\n  - **How many observations** 3,039,807 respondents\n  - **How many variables** 25 variables\n  - **What variables describe whether someone voted and how old they are** `voted`, and `age`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# HLO fips_codes\ndim(fips_codes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 41787     7\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(fips_codes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"st\"             \"statefip\"       \"county_fips\"    \"full_fips_long\"\n[5] \"ansi_code\"      \"gu_name\"        \"entity_type\"   \n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(fips_codes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 41,787\nColumns: 7\n$ st             <chr> \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"…\n$ statefip       <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ county_fips    <dbl> 67, 73, 117, 95, 123, 107, 39, 15, 43, 95, 115, 83, 53,…\n$ full_fips_long <dbl> 124, 460, 820, 988, 1132, 1228, 1708, 1852, 2116, 2116,…\n$ ansi_code      <dbl> 2403054, 2403063, 2403069, 2403074, 2403077, 2403080, 2…\n$ gu_name        <chr> \"Abbeville\", \"Adamsville\", \"Alabaster\", \"Albertville\", …\n$ entity_type    <chr> \"city\", \"city\", \"city\", \"city\", \"city\", \"city\", \"city\",…\n```\n\n\n:::\n\n```{.r .cell-code}\n# HLO policy_data\ndim(policy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2450   33\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(policy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"st\"                             \"stateno\"                       \n [3] \"state\"                          \"year\"                          \n [5] \"sdr\"                            \"absvot\"                        \n [7] \"motorvoter\"                     \"w_voterid\"                     \n [9] \"w_felon_disenfranchise\"         \"pop_annual\"                    \n[11] \"pop_black_i\"                    \"pop_white_i\"                   \n[13] \"povrate\"                        \"partycontrol\"                  \n[15] \"pct_black_i\"                    \"pct_white_i\"                   \n[17] \"icpsr_state_code\"               \"vep_total_ballots_counted\"     \n[19] \"vep_highest_office\"             \"vap_highest_office\"            \n[21] \"total_ballots_counted\"          \"highest_office\"                \n[23] \"voting_eligible_population_vep\" \"voting_age_population_vap\"     \n[25] \"x_non_citizen\"                  \"prison\"                        \n[27] \"probation\"                      \"parole\"                        \n[29] \"total_ineligible_felon\"         \"overseas_eligible\"             \n[31] \"turnout_mrp_anes\"               \"anyid2\"                        \n[33] \"anyphotoid2\"                   \n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(policy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,450\nColumns: 33\n$ st                             <fct> AL, AL, AL, AL, AL, AL, AL, AL, AL, AL,…\n$ stateno                        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ state                          <fct> Alabama, Alabama, Alabama, Alabama, Ala…\n$ year                           <dbl> 1970, 1971, 1972, 1973, 1974, 1975, 197…\n$ sdr                            <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ absvot                         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ motorvoter                     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ w_voterid                      <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ w_felon_disenfranchise         <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n$ pop_annual                     <dbl> 3400000, 3500000, 3500000, 3600000, 360…\n$ pop_black_i                    <dbl> 903467.0, 912748.6, 922030.2, 931311.8,…\n$ pop_white_i                    <dbl> 2533831, 2567777, 2601723, 2635668, 266…\n$ povrate                        <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ partycontrol                   <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n$ pct_black_i                    <dbl> 0.2657256, 0.2607853, 0.2634372, 0.2586…\n$ pct_white_i                    <dbl> 0.7452444, 0.7336505, 0.7433493, 0.7321…\n$ icpsr_state_code               <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ vep_total_ballots_counted      <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ vep_highest_office             <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ vap_highest_office             <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ total_ballots_counted          <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ highest_office                 <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ voting_eligible_population_vep <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ voting_age_population_vap      <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ x_non_citizen                  <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ prison                         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ probation                      <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ parole                         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ total_ineligible_felon         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ overseas_eligible              <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ turnout_mrp_anes               <dbl> NA, NA, 30.60475, NA, NA, NA, 58.76719,…\n$ anyid2                         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ anyphotoid2                    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n```\n\n\n:::\n\n```{.r .cell-code}\n# HLO cps\ndim(cps)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3039807      25\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(cps)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"year\"        \"serial\"      \"month\"       \"hwtfinl\"     \"cpsid\"      \n [6] \"statefip\"    \"statecensus\" \"faminc\"      \"pernum\"      \"wtfinl\"     \n[11] \"cpsidp\"      \"age\"         \"sex\"         \"race\"        \"marst\"      \n[16] \"educ\"        \"vowhynot\"    \"voynotreg\"   \"votehow\"     \"votewhen\"   \n[21] \"voreghow\"    \"voteres\"     \"voted\"       \"voreg\"       \"vosuppwt\"   \n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(cps)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3,039,807\nColumns: 25\n$ year        <dbl> 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976…\n$ serial      <dbl> 1, 1, 2, 2, 3, 3, 4, 5, 5, 5, 5, 6, 6, 7, 7, 7, 8, 9, 9, 9…\n$ month       <dbl> 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11…\n$ hwtfinl     <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ cpsid       <dbl> 1.97610e+13, 1.97610e+13, 1.97601e+13, 1.97601e+13, 1.9760…\n$ statefip    <dbl> 11, 11, 39, 39, 48, 48, 16, 42, 42, 42, 42, 12, 12, 42, 42…\n$ statecensus <dbl> 53, 53, 31, 31, 74, 74, 33, 23, 23, 23, 23, 59, 59, 23, 23…\n$ faminc      <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ pernum      <dbl> 1, 2, 1, 2, 1, 2, 1, 1, 2, 3, 4, 1, 2, 1, 2, 3, 1, 1, 2, 3…\n$ wtfinl      <dbl> 1656.59, 1756.49, 1634.81, 1601.52, 1557.49, 1489.61, 1541…\n$ cpsidp      <dbl> 1.97610e+13, 1.97610e+13, 1.97601e+13, 1.97601e+13, 1.9760…\n$ age         <dbl> 38, 35, 47, 52, 29, 27, 55, 48, 43, 19, 17, 23, 28, 57, 54…\n$ sex         <dbl> 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1…\n$ race        <dbl> 200, 200, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100…\n$ marst       <dbl> 1, 1, 1, 1, 1, 1, 7, 1, 1, 6, 6, 1, 1, 1, 1, 6, 6, 1, 1, 6…\n$ educ        <dbl> 72, 72, 50, 60, 72, 72, 80, 32, 31, 72, 50, 31, 32, 32, 72…\n$ vowhynot    <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ voynotreg   <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ votehow     <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ votewhen    <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ voreghow    <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ voteres     <dbl> 13, 13, 32, 32, 20, 20, 998, 36, 36, 36, 999, 20, 20, 36, …\n$ voted       <dbl> 2, 1, 1, 2, 1, 1, 98, 1, 1, 1, 99, 1, 1, 2, 2, 98, 2, 2, 2…\n$ voreg       <dbl> 99, 2, 2, 99, 1, 1, 98, 1, 1, 1, 99, 1, 1, 99, 99, 98, 99,…\n$ vosuppwt    <dbl> 1656.59, 1756.49, 1634.81, 1601.52, 1557.49, 1489.61, 1541…\n```\n\n\n:::\n:::\n\n\n\n\n# Merge `policy_data` into `cps` data\n\nTo replicate the paper's main results we need to merge the data on election laws in the `policy_data` dataframe into the data on voting in the `cps` data frame.\n\nTo merge `policy_data` into `cps`, we first need to merge the `st` column (State postal abbreviations of) from `fips_codes` into `cps` by the common `statefip` variable that is common to both `cps` and `state_fip`\n\nThen we can merge `policy_data` into `cps` by the common variables `st` and `year` to match the policies in a given state and year to observations in `cps` from that state in that year.\n\nTo avoid complications that from running merge code multiple times, we will save the output of  each merge into temporary dataframes (e.g. `tmp1`), and then we're confident we have done this correctly, will save the final merged data back into `cps`.\n\nFollowing Grumbach and Hill, we'll also filter out any observations before 1978 and all observations from DC and North Dakota (why?). \n\nPlease uncomment and run the following code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Merge state abbreviations (st) into CPS using statefip\ntmp1 <- cps %>% dplyr::left_join(fips_codes %>% \n                      select(st, statefip),\n                      by = \"statefip\",\n                    multiple = \"first\"\n                    )\n# tmp1 is cps with the added column \"st\" \ndim(tmp1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3039807      26\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(tmp1)[26]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"st\"\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(cps)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3039807      25\n```\n\n\n:::\n\n```{.r .cell-code}\n# Merge policy data into tmp1 using common variables `st` and `year`\ntmp2 <- tmp1 %>% dplyr:: left_join(\n  policy_data, \n  by = c(\"st\", \"year\")\n)\n\n# Check merges\ndim(tmp2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3039807      57\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(tmp1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3039807      26\n```\n\n\n:::\n\n```{.r .cell-code}\n# New variables in tmp2 not in tmp1\nnames(tmp2)[!names(tmp2) %in% names(tmp1)]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"stateno\"                        \"state\"                         \n [3] \"sdr\"                            \"absvot\"                        \n [5] \"motorvoter\"                     \"w_voterid\"                     \n [7] \"w_felon_disenfranchise\"         \"pop_annual\"                    \n [9] \"pop_black_i\"                    \"pop_white_i\"                   \n[11] \"povrate\"                        \"partycontrol\"                  \n[13] \"pct_black_i\"                    \"pct_white_i\"                   \n[15] \"icpsr_state_code\"               \"vep_total_ballots_counted\"     \n[17] \"vep_highest_office\"             \"vap_highest_office\"            \n[19] \"total_ballots_counted\"          \"highest_office\"                \n[21] \"voting_eligible_population_vep\" \"voting_age_population_vap\"     \n[23] \"x_non_citizen\"                  \"prison\"                        \n[25] \"probation\"                      \"parole\"                        \n[27] \"total_ineligible_felon\"         \"overseas_eligible\"             \n[29] \"turnout_mrp_anes\"               \"anyid2\"                        \n[31] \"anyphotoid2\"                   \n```\n\n\n:::\n\n```{.r .cell-code}\n# Filter out DC, ND, and observations before 1978\ntmp2 %>% \n  filter(!st %in% c(\"DC\",\"ND\"))%>%\n  filter(year>=1978) -> tmp3\n\n# Replace cps with merged data \ncps <- tmp3\n# Tidy up: remove temporary data frames\nrm(list=c(\"tmp1\",\"tmp2\",\"tmp3\"))\n```\n:::\n\n\n# Examine and recode the data\n\nThe **primary outcome** of interest for this paper, is whether someone said they `voted` in a given year.\n\nThe **treatment** is the effect of living in state with **same day registration** which is captured by the `sdr` variable.\n\nThe **key predictor** will be indicators of a respondent's **age_cohort** which we **need to create** from the `age` variable. \n\nNext lab we will also look at models that the control for the following covariates:  \n\n- `education` recoded from the original `educ` variable in the `cps` collapsing \n- `race_f` a factor variable recoded from the original `race` variable in the `cps`\n  - Indicators for respondents who identify as only one race (ie `is_white`)^[The CPS coding on this is not great and there's no measure of ethnicity in these data. Forgive the crude indicators, but their necessary to recreate some of Grumbach and Hill's analysis next week. ]\n- `income` recoded from the original `faminc` variable in the `cps`\n- `is_female` recoded from the original `sex` variable in the `cps`\n\n> Below we will recode the data for analysis. I will recode the covariates and the key predictors. Then **you will write code to look at and recode the outcome.**\n\n## Recode covariates\n\nThe CPS are messy data. Please run the code below to recode the covariates in the spirit of (i.e. with minor changes) what Grumbach and Hill did. ^[Note the way the recoding is described in the appendix to the paper is not how it is actually implemented in the replication code in `rock_the_reg_replication_code.R`. For example, the appendix describes income as ranging from 1 (Under \\$10k) to 16 (\\$500k and above), when their code, implemented above produces 32 unique values, in part because the way the CPS asked and coded the income question changed overtime. We're going to roll with it for now...]\n\n:::{.callout-note}\nThe file `cps_00021.cbk.txt` contains the **codebook** for the data, telling us what numeric values of each variable correspond to substantively. So if you're wondering **how I know** what should be recoded to what specific values, it comes from reading the codebook, looking at Grumbach and Hill's code, looking at the raw variable with a table, and the using `case_when()` to judiciously code the data. You'll get practice doing this in your final projects, but I don't want to spend too much time on this this lab, which is why you're only recoding the outcome `voted`\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Recode covariates\ncps %>% \n  mutate(\n    # Useful for plotting figure 2\n    SDR = ifelse(sdr == 1, \"SDR\", \"non-SDR\"),\n    education = case_when(\n      educ == 1 ~ NA, #Blank\n      educ < 40 ~ 1, # No high school\n      educ >= 40 & educ < 73 ~ 2, # Some high school\n      educ == 73 ~ 3, # High school degree\n      educ >= 80 & educ <= 110 ~ 4, # Some college\n      educ >= 111 & educ <123 ~ 5, # BA degree (And weirdly people who completed 5, 5+ and 6+ years of college)\n      educ >= 123 & educ <=125 ~ 6, # BA degree (And weirdly people who completed 5, 5+ and 6+ years of college)\n      educ == 999 ~ NA # Missing/unknown\n    ),\n    race_f = case_when(\n      race == 999 ~ NA,\n      T ~ factor(race)\n    ),\n    is_white = case_when(\n      race == 100 ~ 1,\n      race == 999 ~ NA,\n      T ~ 0\n    ),\n    is_black = case_when(\n      race == 200 ~ 1,\n      race == 999 ~ NA,\n      T ~ 0\n    ),\n    is_aapi = case_when(\n      race == 650 ~ 1,\n      race == 651 ~ 1,\n      race == 652 ~ 1,\n      race == 999 ~ NA,\n      T ~ 0\n    ),\n    is_other = case_when(\n      is_white == 1 ~ 0,\n      is_black == 1 ~ 0,\n      is_aapi ==  1 ~ 0,\n      race == 999 ~ NA,\n      T ~ 1\n    ),\n    income = case_when(\n      faminc > 843 ~ NA, # Remove Missing/Refused\n      T ~ as.numeric(factor(faminc))\n    ),\n    is_female = case_when(\n      sex == 2 ~ 1,\n      sex == 1 ~ 0,\n      T ~ NA # recode Not in Universe as NA\n    )\n    \n  ) -> cps\n```\n:::\n\n\n\n## Create `age_group` and age_group_XX_XX indicators\n\nNext we'll create an `age_group` variable and binary indicators for each age cohort of the form `age_group_XX_XX`.\n\nPlease uncomment and run the code below\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create age variables \ncps %>% \n  mutate(\n    age_group = case_when(\n      age > 18 & age <= 24 ~ \"18-24\",\n      age > 24 & age <= 34  ~ \"25-34\",\n      age > 34 & age <= 44  ~ \"35-44\",\n      age > 44 & age <= 54  ~ \"45-54\",\n      age > 54 & age <= 64  ~ \"55-64\",\n      age > 64 ~ \"65+\",\n      T ~ NA\n\n    ),\n    age_group_18_24 = ifelse(age_group == \"18-24\", 1, 0),\n    age_group_25_34 = ifelse(age_group == \"25-34\", 1, 0),\n    age_group_35_44 = ifelse(age_group == \"35-24\", 1, 0),\n    age_group_45_54 = ifelse(age_group == \"45-24\", 1, 0),\n    age_group_55_64 = ifelse(age_group == \"55-24\", 1, 0),\n    age_group_65plus = ifelse(age_group == \"65+\", 1, 0)\n  ) -> cps\n```\n:::\n\n\n## Check age recodes\n\nIt's good practice when recoding, to check the output. Please use the `table()` to create a **crosstab** of `age_group` and `age_group_18_24`. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|label: checkage\n\n# Compare age_group to age_group_18_24 using table()\ntable(cps$age_group, cps$age_group_18_24)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       \n             0      1\n  18-24      0 234226\n  25-34 416613      0\n  35-44 399527      0\n  45-54 353672      0\n  55-64 296342      0\n  65+   372517      0\n```\n\n\n:::\n:::\n\n\n**Explain in words how the variable `age_group_18_24` relates to the variable `age_group`** `age_group` is a categorical variable which describes the age cohort that respondent to the CPS belongs to. `age_group_18_24` is a **binary indicator** variable that takes a value 1 for respondents who belong to the cohort of people 18-24 years old and 0 otherwise.\n\n## Recode the outcome\n\nNow it's your turn. Please do the following:\n\n- **Look** at the variable `voted` using the `table()` function\n  - `1` corresponds to **Did not vote**\n  - `2 corresponds to **Voted**\n  - `96`,`97`,`98` to people who didn't provide and answer, or didn't remember\n  - `99` corresponds to people [who shouldn't be in the sample (\"Not in universe\")](https://cps.ipums.org/cps-action/faq){target=\"_blank\"}\n\n- Create a new variable called `dv_voted` using `case_when()` inside of `mutate()` that is:\n  - 1 when `voted == 2`\n  - 0 when `voted == 1`,\n  - 0 when `voted > 2 & voted <99`\n  - `NA` when `voted == 99`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Look at distribution of voted using table()\ntable(cps$voted)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n      1       2      96      97      98      99 \n 704510 1103606   14257   38897  127231  881162 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Create variable dv_voted using mutate(), case_when(), and voted variable\ncps %>% \n  mutate(\n    dv_voted = case_when(\n      voted == 2 ~ 1,\n      voted == 1 ~ 0,\n      voted > 2 & voted < 99 ~ 0,\n      voted == 99 ~ NA\n    )\n  ) -> cps\n```\n:::\n\n\n## Save the recoded data\n\nFinally, let's save our recoded data to file called `cps_clean.rda` that we can use for next week's lab\n\nUncomment and run the following:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# save(cps, file = \"cps_clean.rda\")\n```\n:::\n\n\n\n# Recreate Figure 1\n\nPhew, all that work, just to get set up to work. Now we can **have some fun.**\n\nLet's recreate a version of Figure 1 using the policy data from the `policy_data` data frame.\n\n## Write down aesthetic mappings from the figure:\n\nBefore we create this figure, think about the information conveyed by the figure's aesthetics (the x axis, the y axis, the color of the squares), and the corresponding columns from `policy_data` that contain this information.\n\n- x-axis: `year`\n- y-axis: `st`\n- col: `sdr`\n\n## Create a variable called `SDR`\n\nIt will be helpful to have a variable called `SDR` in `policy_data` that takes the value of \"SDR\" when `sdr == 1` and \"non-SDR\" when `sdr == 0`\n\nPlease use `case_when()` or `ifelse()` to create `SDR` in `policy_data`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a variable called SDR in policy_data\npolicy_data %>% \n  mutate(\n    SDR = ifelse(sdr == 1, \"SDR\", \"non-SDR\")\n  ) -> policy_data\n```\n:::\n\n\n## Recreate Figure 1\n\nRecall, we need three things to make a figure:\n\n- data\n- aesthetics\n- geometries\n\nUsing data from `policy_data` starting in 1978 (hint add a    `filter()`) and the aesthetic mappings identified above use `ggplot()` with the `geom_point()` geometry to make a version of Figure 1 from paper.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Recreate Figure 1\npolicy_data %>% \n  filter(year >= 1978) %>% \n  ggplot(aes(year, st,\n             col = SDR)) +\n  geom_point() -> fig1\n\nfig1\n```\n\n::: {.cell-output-display}\n![](07-lab-comments_files/figure-html/fig1-1.png){width=672}\n:::\n:::\n\n\n## Interpret Figure 1.\n\nPlease answer the following questions:\n\n- **How many states had Same Day Registration at some point in time?** 19 states\n\n- **How many states had Same Day Registration in 2018?** 18 states had SDR in 2018\n \n- **Did any states get rid of Same Day Registration? When did they get rid of this policy?** Yes, Ohio in 2014\n\n- **What's up with North Dakota?** North Dakota doesn't require registration to vote. As per footnote 5, they're excluded from the main analysis.\n\n\nUse this code chunk to write any code that might help you answer these questions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write code to help you answer the questions above (if needed)\n# 19 states had SDR at some point\nlength(unique(policy_data$state[policy_data$sdr==1]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 19\n```\n\n\n:::\n\n```{.r .cell-code}\nlength(unique(policy_data$state[policy_data$sdr==1 & policy_data$ year == 2018])) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 18\n```\n\n\n:::\n\n```{.r .cell-code}\nwith(policy_data %>% \n       filter(state==\"Ohio\"),\n     table(year,sdr))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      sdr\nyear   0 1\n  1970 1 0\n  1971 1 0\n  1972 1 0\n  1973 1 0\n  1974 1 0\n  1975 1 0\n  1976 1 0\n  1977 1 0\n  1978 1 0\n  1979 1 0\n  1980 1 0\n  1981 1 0\n  1982 1 0\n  1983 1 0\n  1984 1 0\n  1985 1 0\n  1986 1 0\n  1987 1 0\n  1988 1 0\n  1989 1 0\n  1990 1 0\n  1991 1 0\n  1992 1 0\n  1993 1 0\n  1994 1 0\n  1995 1 0\n  1996 1 0\n  1997 1 0\n  1998 1 0\n  1999 1 0\n  2000 1 0\n  2001 1 0\n  2002 1 0\n  2003 1 0\n  2004 1 0\n  2005 0 1\n  2006 0 1\n  2007 0 1\n  2008 0 1\n  2009 0 1\n  2010 0 1\n  2011 0 1\n  2012 0 1\n  2013 0 1\n  2014 1 0\n  2015 1 0\n  2016 1 0\n  2017 1 0\n  2018 1 0\n```\n\n\n:::\n:::\n\n\n# Recreate Figure 2\n\nFigure 2 shows the proportion of people voting by age group in states that did and did not have Same Day Registration. \n\nIf we take the average of a binary indicator like `dv_voted`, we get a proportion, which corresponds to what Grumbach and Hill call the `Pr(Voted)`\n\n## Calculate the proption voting by age group and SDR\n\nWith the `cps` data, use `group_by()` and `summarize()` to calculate the proportion of people voting by age group in states that did and did not have same day registration in the code chunk below.\n\nSave the results to a new object called `fig2_df`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#  Calculate the proportion of voting by age group and SDR\ncps %>% \n  group_by(age_group, SDR) %>% \n  summarise(\n    prop_vote = mean(dv_voted, na.rm=T)\n  ) -> fig2_df\nfig2_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14 × 3\n# Groups:   age_group [7]\n   age_group SDR     prop_vote\n   <chr>     <chr>       <dbl>\n 1 18-24     SDR         0.391\n 2 18-24     non-SDR     0.327\n 3 25-34     SDR         0.509\n 4 25-34     non-SDR     0.452\n 5 35-44     SDR         0.604\n 6 35-44     non-SDR     0.561\n 7 45-54     SDR         0.658\n 8 45-54     non-SDR     0.617\n 9 55-64     SDR         0.705\n10 55-64     non-SDR     0.666\n11 65+       SDR         0.715\n12 65+       non-SDR     0.660\n13 <NA>      SDR         0.332\n14 <NA>      non-SDR     0.202\n```\n\n\n:::\n:::\n\n\n## Recreate Figure 2\n\nUsing `fig2_df` recreate a Figure 2 from the paper:\n\n- filter out values of `age_group` that are `NA`\n- set the appropriate aesthetic mappings in `ggplot()`\n- use geom_bar(stat = \"identity\", position = \"dodge\")\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Recreate Figure 2\nfig2_df %>% \n  filter(!is.na(age_group)) %>% \n  ggplot(aes(age_group,prop_vote,fill = SDR))+\n  geom_bar(stat = \"identity\",\n           position = \"dodge\") -> fig2\n\nfig2\n```\n\n::: {.cell-output-display}\n![](07-lab-comments_files/figure-html/fig2-1.png){width=672}\n:::\n:::\n\n\n## Interpret Figure 2\n\n**What does Figure 2 tell us?** Figure 2 provides initial support for Grumbach and Hill's general argument. The proportion of people voting in states with SDR is higher than states with out SDR, and this gap is larger among younger age cohorts.\n\n# Take the Class Survey {.unnumbered}\n\nPlease take a few moments to complete the [class survey](https://brown.co1.qualtrics.com/jfe/form/SV_dgxOHQDv0xG1HzU){target=\"_blank\"} for this week.){target=\"_blank\"} for this week. This one's a banger.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.32/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}