{
  "hash": "6989ad6589445be9a5639746c48ac332",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Lab 03 - Replicating Broockman and Kalla (2016)'\nauthor: \"Your Group Members Names Here\"\ndate: \"Last Updated 2024-01-24\"\nformat:\n  html:\n    toc: true\n    toc-location: left\n    toc-float: true\n    toc-depth: 2\n    number-sections: true\n---\n\n\n\n```{=html}\n<style>\ndiv.blue { background-color:#e6f0ff; border-radius: 5px; padding: 20px;}\n</style>\n```\n\n# Overview {.unnumbered}\n\nToday we will explore **the logic and design** of Broockman and Kalla's 2016 study, [\"Durably reducing transphobia: A field experiment on door-to-door canvassing\"](https://www.science.org/doi/10.1126/science.aad9713){target=\"_blank\"}, from the recruitment of subjects for the study to the delivery of their interventions. Then we will explore **whether the intervention had any effect on respondents' feelings toward transgender individuals.**\n\nTo accomplish this we will:\n\n1.  Summarize the study (5 Minutes)\n2.  Set up our work space (2-3 Minutes)\n3.  Load a portion of the replication data (1-2 Minutes)\n4.  Get a high level overview of the data (5 minutes)\n5.  Describe the distribution of covariates in the full dataset (5 minutes)\n6.  Examine the difference in covariates between those who did and did not complete the survey (10 minutes)\n7.  Examine the difference in covariates between those assigned to each treatment condition in the study. (10 minutes)\n8.  Estimate the average treatment effect of the intervention (10 minutes)\n9.  Plot the results and comment on the study (10 minutes)\n10. Take the weekly survey (3-5 minutes)\n\nOne of these 9 tasks (excluding the weekly) will be randomly selected as the graded question for the lab.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(20220217)\ngraded_question <- sample(1:9,size = 1)\npaste(\"Question\",graded_question,\"is the graded question for this week\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Question 2 is the graded question for this week\"\n```\n\n\n:::\n:::\n\n\nYou will work in your assigned groups. Only one member of each group needs to submit the html file of lab.\n\nThis lab **must** contain the names of the group members in attendance.\n\nIf you are attending remotely, you will submit your labs individually.\n\nHere are your assigned groups for the semester.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-error}\n\n```\nError in `tibble::tibble()`:\n! Tibble columns must have compatible sizes.\n• Size 4: Existing data.\n• Size 5: Column `Group 7`.\nℹ Only values of size one are recycled.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-error}\n\n```\nError in eval(expr, envir, enclos): object 'groups_df' not found\n```\n\n\n:::\n:::\n\n\n# Goals {.unnumbered}\n\nConceptually, this lab will give you lots of practice calculating **means** and **conditional means**. We will use these means to\n\n-   **Describe the characteristics of the study's population.** After Question 5, you should be able to describe what a typical registered voter in Miami-Dade County looks like\n-   **Explore differences between participants in the study this population** Do people who took the baseline survey differ in systematic ways from people who did not (Question 6)\n-   **Assess the empirical implications of the identifying assumptions of this design** If treatment was randomly assigned, then participants assigned to treatment condition should on average look similar to participants in the control condition (Question 7)\n-   **Estimate the average treatment effect over multiple time periods** You'll recall from lecture that the ATE is simply a difference of conditional means:\n\n$$\n\\begin{align*}\nE \\left[ \\frac{\\sum_1^m Y_i}{m}-\\frac{\\sum_{m+1}^N Y_i}{N-m}\\right]&=\\overbrace{E \\left[ \\frac{\\sum_1^m Y_i}{m}\\right]}^{\\substack{\\text{Average outcome}\\\\\n\\text{among treated}\\\\ \\text{units}}}\n-\\overbrace{E \\left[\\frac{\\sum_{m+1}^N Y_i}{N-m}\\right]}^{\\substack{\\text{Average outcome}\\\\\n\\text{among control}\\\\ \\text{units}}}\\\\\n&= E [Y_i(1)|D_i=1] -E[Y_i(0)|D_i=0]\n\\end{align*}\n$$\n\nWe'll see that these quantities can be calculated quickly for multiple variables using the following commands:\n\n-   We will use the `group_by` and `summarise` commands to quickly calculate average values for different groups, and the `mutate` function to calculate differences between these averages\n-   We will introduce the `across()` and `starts_with()` functions to calculate summaries like a `mean` across multiple variables that start the the same pre-fixes.\n-   We will introduce the `pivot_longer()`, `pivot_wider()` and `left_join` commands to gather, spread, and merge data so that we can calculate the difference of means simply by subtracting means for one group in one column from means for another group in a different column\n-   We will use functions from the `ggplot` package to graphically display our results.\n\n# Please knit this .Rmd file {.unnumbered}\n\nAs with every lab, you should:\n\n-   Download the file\n-   Save it in your course folder\n-   **Update the `author:` section of the YAML header to include the names of your group members in attendance.**\n-   Knit the document\n-   Open the html file in your browser (Easier to read)\n-   Knit the document again after completing a section or chunk (Error checking)\n-   Upload the final lab to \\[Canvas\\]https://canvas.brown.edu/courses/1091286/assignments/7925686?module_item_id=10882030){target=\"\\_blank\"}.\n\n# Summarize the study\n\nBefore we get started working with the data, please provide some brief answers (1-3 sentences) to the following questions\n\n-   **What's the research question?** Broadly the Broockman and Kalla (2016) is interested in questions about persuasion. How do we change peoples minds about controversial political topics. Specifically, they are interested in whether a brief conversation in which participants are given information transgender rights and encouraged to engage in **analogic perspective** taking can lead to lasting changes in attitudes on these issues.\n-   **What's the theoretical framework?** I would argue the paper draws on research from social psychology that suggests encouraging active processing and perspective taking can lead to durable changes in attitudes\n-   **What's the empirical design?** The authors conducted a randomized placebo controlled design. Participants who were registered voters in Miami-Dade County were recruited to take a baseline survey. Among those who completed the baseline survey, subjects were randomly assigned either the treatment or the placebo control condition. In the treatment condition, canvassers from a local organization would knock on subjects doors and deliver a script that provided information about transgender issues and encouraged respondents to try to look at these issues from the perspective of a transgendered person. In the placebo control condition, subjects received a message about recycling. Including a \"placebo\" control condition allows the authors to make comparisons between more similar groups (i.e. people who would actually answer their door when a canvasser knocked). The study also contained a number of post-treatment interventions (See figure 2)\n-   **What's are the main results?** Broockman and Kalla find that these brief 10-minute conversations increased tolerance toward transgendered indviduals by roughly a third of standard deviation and these effects persisted long after the intervention. These changes in general attitudes appear to in turn increase support for non-discrimination laws.\n\n# Set up your workspace\n\nHere is some minimal code so that your lab will compile when you first knit it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\n1.  **In the code chunk below, please set up your work space by loading more packages, following the steps outlined in the slides [here](https://pols1600.paultesta.org/slides/03-slides.html#13){target=\"_blank\"}**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set working directory\nwd <- \".\" # Change to file path on your computer\nsetwd(wd)\n\n# Load additional packages\nthe_packages <- c(\n  ## R Markdown\n  \"kableExtra\",\"DT\",\n  ## Tidyverse\n  \"tidyverse\", \"lubridate\", \"forcats\", \n  \"haven\", \"labelled\",\n  ## Extensions for ggplot\n  \"ggmap\",\"ggrepel\", \"ggridges\", \n  \"ggthemes\", \"ggpubr\", \"GGally\",\n  \"scales\", \"dagitty\", \"ggdag\",\n  # Data \n  \"COVID19\",\"maps\",\"mapdata\",\n  \"qss\"\n)\n\n# Define function to load packages\nipak <- function(pkg){\n    new.pkg <- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n    if (length(new.pkg)) \n        install.packages(new.pkg, dependencies = TRUE)\n    sapply(pkg, require, character.only = TRUE)\n}\n\nipak(the_packages)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in contrib.url(repos, \"source\"): trying to use CRAN without setting a mirror\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n# Load the replication data\n\nNext we'll load the data for today, which is a subset of Broockman and Kalla's full data set[^1]\n\n[^1]: You can find the full set of replication files [here](https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/WKR39N){target=\"_blank\"}\n\n1.  **Please run the code chunk below to load the data** That's it. That's the task for this question\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(url(\"https://pols1600.paultesta.org/files/data/03_lab.rda\"))\n```\n:::\n\n\nThe will load a data frame called `df` containing the following variables:\n\n-   `completed_baseline` whether someone completed the baseline survey (\"Survey\") or not (\"No Survey\")\n-   `treatment_assigned` what intervention someone who completed the baseline survey was assigned two (treatment= \"Trans-Equality\", placebo = \"Recycling\")\n-   `answered_door` whether someone answered the door (\"Yes\") or not (\"No\") when a canvasser came to their door\n-   `treatment_group` the treatment assignments of those who answered the door and the received the treatment or placebo (treatment= \"Trans-Equality\", placebo = \"Recycling\")\n-   `vf_age` the age of the person in years\n-   `vf_female` the respondent's sex (female = 1, male = 0)\n-   `vf_democrat` whether the person was a registered Democract (Democrat=1, 0 otherwise)\n-   `vf_white` whether the person was white (White=1, 0 otherwise)\n-   `vf_vg_12` whether the person voted in the 2012 general election (voted = 1, 0 otherwise)\n-   `therm_trans_tX` a feeling thermometer[^2], where respondents are asked to rate how warmly they feel toward transgender people on a scale of 0 (Very Cold) to 100 (Very Warm), with 50 corresponding to neither warm nor cold. The `_tX` corresponds to the time the measure was taken:\n    -   `_t0` pre-treatment measure from baseline survey\n    -   `_t1` post-treatment measure 3-days after intervention\n    -   `_t2` post-treatment measure 3-weeks after intervention\n    -   `_t3` post-treatment measure 6-weeks after intervention\n    -   `_t4` post-treatment measure 3-months after intervention\n\n[^2]: The actual study contains a number of measures about transgender attitudes and policies which are scaled together to produce a single measure of subjects latent tolerance. For simplicity, we'll focus on this single survey item.\n\n# Provide a high level overview of the data\n\nIn the code chunk below, please write code to provide a *high level overview* of the data that allows you to answer the following questions.\n\nPlease interpret the results of your code by writing brief answers in Markdown after each question.\n\n1.  **How many observations are there in `df`?** There are 68,378 observations in `df`\n2.  **How many variables are there in the `df`?** There are 14 variables in `df`\n3.  **What's the unit of analysis?** Each row corresponds to a registered voter from Miami Dade County who was invited to take the baseline survey.\n4.  **How many registered voters completed the baseline survey?** 1,825 registered voters took the baseline survey or 3% of the registered voters who were invited to take the survey\n5.  **How many treatment conditions are there?** There are two treatment conditions, an intervention in which canvassers\n\n> informed voters that they might face a decision about the issue (whether to vote to repeal the law protecting transgender people); can- vassers asked voters to explain their views; and canvassers showed a video that presented arguments on both sides. Canvassers also defined the term “transgender” at this point and, if they were trans- gender themselves, noted this. The canvassers next attempted to encourage “analogic perspective- taking” (16). Canvassers first asked each voter to talk about a time when they themselves were judged negatively for being different. The can- vassers then encouraged voters to see how their own experience offered a window into transgen- der people’s experiences, hoping to facilitate voters’ ability to take transgender people’s perspectives. The intervention ended with another attempt to encourage active processing by asking voters to describe if and how the exercise changed their mind. (Broockman and Kalla 2016, p. 221)\n\nAnd a placebo condition in which canvassers instead delivered a message about recycling.\n\n6.  **How many participants were assigned to each condition?** 912 participants who completed the baseline survey were randomly assigned to receive the intervention about Trans Equality and 913 received the placebo message about Recycling.\n7.  **How many participants answered the door when a canvasser came?** 501 registered voters actually answered the door when canvassers knocked and 1,324 did not.\n8.  **How many participants actually received each treatment condition?** 246 registered voters received the Trans-Equality treatment and 255 received the placebo message about recycling.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. How many observations are there in `df`?\ndim(df)[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 68378\n```\n\n\n:::\n\n```{.r .cell-code}\n# 2. How many variables are there in the `df`?\ndim(df)[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 14\n```\n\n\n:::\n\n```{.r .cell-code}\n# 3. What's the unit of analysis?\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  completed_baseline treatment_assigned answered_door treatment_group   vf_age\n1          No Survey               <NA>          <NA>            <NA> 23.00000\n2          No Survey               <NA>          <NA>            <NA> 38.00000\n3          No Survey               <NA>          <NA>            <NA> 48.00000\n4          No Survey               <NA>          <NA>            <NA> 49.20192\n5          No Survey               <NA>          <NA>            <NA> 49.20192\n6          No Survey               <NA>          <NA>            <NA> 49.20192\n  vf_female vf_democrat vf_white vf_vg_12 therm_trans_t0 therm_trans_t1\n1         0           1        0        0             NA             NA\n2         1           0        0        0             NA             NA\n3         0           0        0        1             NA             NA\n4         1           0        0        0             NA             NA\n5         0           0        1        0             NA             NA\n6         1           0        0        1             NA             NA\n  therm_trans_t2 therm_trans_t3 therm_trans_t4\n1             NA             NA             NA\n2             NA             NA             NA\n3             NA             NA             NA\n4             NA             NA             NA\n5             NA             NA             NA\n6             NA             NA             NA\n```\n\n\n:::\n\n```{.r .cell-code}\n# 4. How many registered voters completed the baseline survey?\ntable(df$completed_baseline)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nNo Survey    Survey \n    66553      1825 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 5. How many treatment conditions are there? \nlength(unique(na.omit(df$treatment_assigned)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n\n```{.r .cell-code}\n# OR\ntable(df$treatment_assigned)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n     Recycling Trans-Equality \n           913            912 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 6. How many participants were assigned to each condition?\ntable(df$treatment_assigned)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n     Recycling Trans-Equality \n           913            912 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 7. How many participants answered the door when a canvasser came?\ntable(df$answered_door)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  No  Yes \n1324  501 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 8. How many participants actually received the treatment?\ntable(df$treatment_group)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n     Recycling Trans-Equality \n           255            246 \n```\n\n\n:::\n:::\n\n\n# Describe the distribution of covariates in the full dataset\n\nNow let's look at the distribution of pre-treatment covariates in the full data set.\n\nThe variables that start with `vf_` contain information about registered voters from the voter file for Miami-Dade County:\n\n-   `vf_age` the age of the person in years\n-   `vf_female` the respondent's sex (female = 1, male = 0)\n-   `vf_democrat` whether the person was a registered Democract (Democrat=1, 0 otherwise)\n-   `vf_white` whether the person was white (White=1, 0 otherwise)\n-   `vf_vg_12` whether the person voted in the 2012 general election (voted = 1, 0 otherwise)\n\nThe code below quickly calculates the mean for each of these voter file variables, by [applying a the mean function across multiple columns](https://dplyr.tidyverse.org/articles/colwise.html){target=\"_blank\"} that all start with `vf_`\n\n-   `df%>%` pipes the `df` data frame into the `summarise()` function\n-   `across()` tells `summarise()` to calculate the `mean` for every column in `df` that `starts_with()` `vf_`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  # Calculate means for voter file variables\n  summarise(across(starts_with(\"vf_\"), mean))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    vf_age vf_female vf_democrat  vf_white  vf_vg_12\n1 49.20192 0.5639679   0.4522069 0.1352628 0.6727895\n```\n\n\n:::\n:::\n\n\nNext I [**gather**](https://r4ds.had.co.nz/tidy-data.html?q=gather%20#pivoting){target=\"_blank\"} the columns together using the `pivot_longer()` command which pivots the columns which `starts_with(\"vf\")` into a column named `Covariates` and puts their associated values into a column named `Voter File Means`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  # Calculate means for voter file variables\n  summarise(across(starts_with(\"vf_\"), mean))%>%\n  # Gather covariate means into `Voter File Means` column\n  pivot_longer(\n    cols = starts_with(\"vf_\"),\n    names_to = \"Covariate\",\n    values_to = \"Voter File Means\"\n  ) -> cov_vf\n\ncov_vf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  Covariate   `Voter File Means`\n  <chr>                    <dbl>\n1 vf_age                  49.2  \n2 vf_female                0.564\n3 vf_democrat              0.452\n4 vf_white                 0.135\n5 vf_vg_12                 0.673\n```\n\n\n:::\n:::\n\n\n1.  **Using `cov_vf` please describe the demographics of the `df` data set** In the `df` data set, a typical registered voter has an average age just over 49 years. Fifty-six percent of the registered voters are female, 45 percent are registered as democrats, 13.5 percent identify as white, and 67 percent voted in the 2012 general election.\n\n# Examine the difference in covariate balance between those who did and did not take the baseline survey\n\nNow let's examine the difference in these covariates between registered voters who did and did not take the baseline survey.\n\nThe code below uses `group_by(completed_baseline)` to adapt the code from the previous section to calculate the covariate averages **separately** for respondents who did and did not complete the baseline survey.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  # Calculate difference between Survey and Non-Survey Takers\n  group_by(completed_baseline) %>%\n  # Calculate means for voter file variables\n  summarise(across(starts_with(\"vf_\"), mean))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 6\n  completed_baseline vf_age vf_female vf_democrat vf_white vf_vg_12\n  <chr>               <dbl>     <dbl>       <dbl>    <dbl>    <dbl>\n1 No Survey            49.3     0.563       0.452    0.133    0.671\n2 Survey               47.0     0.587       0.476    0.213    0.738\n```\n\n\n:::\n:::\n\n\nNext we **reshape the data** gathering the values for all the columns **except** the `completed_baseline` column\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  # Calculate difference between Survey and Non-Survey Takers\n  group_by(completed_baseline) %>%\n  # Calculate means for voter file variables\n  summarise(across(starts_with(\"vf_\"), mean))%>%\n  # Gather columns containing means, exclude column for groups\n  pivot_longer(\n    cols = starts_with(\"vf_\"),\n    names_to = \"Covariate\",\n    values_to = \"Means\"\n  ) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 3\n   completed_baseline Covariate    Means\n   <chr>              <chr>        <dbl>\n 1 No Survey          vf_age      49.3  \n 2 No Survey          vf_female    0.563\n 3 No Survey          vf_democrat  0.452\n 4 No Survey          vf_white     0.133\n 5 No Survey          vf_vg_12     0.671\n 6 Survey             vf_age      47.0  \n 7 Survey             vf_female    0.587\n 8 Survey             vf_democrat  0.476\n 9 Survey             vf_white     0.213\n10 Survey             vf_vg_12     0.738\n```\n\n\n:::\n:::\n\n\nThen we spread the values of the `completed_baseline` into separate columns using the `pivot_wider()` command\n\nThe column `No Survey` contains the mean value of each covariate for registered voters who did not complete the survey, and the `Survey` column contains averages for registered voters who completed the baseline.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  # Calculate difference between Survey and Non-Survey Takers\n  group_by(completed_baseline) %>%\n  # Calculate means for voter file variables\n  summarise(across(starts_with(\"vf_\"), mean))%>%\n  # Gather columns containing means, exclude column for groups\n  pivot_longer(\n    cols = starts_with(\"vf_\"),\n    names_to = \"Covariate\",\n    values_to = \"Means\"\n  ) %>%\n  pivot_wider(\n    names_from = completed_baseline,\n    values_from = Means\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  Covariate   `No Survey` Survey\n  <chr>             <dbl>  <dbl>\n1 vf_age           49.3   47.0  \n2 vf_female         0.563  0.587\n3 vf_democrat       0.452  0.476\n4 vf_white          0.133  0.213\n5 vf_vg_12          0.671  0.738\n```\n\n\n:::\n:::\n\n\nNext we calculate the difference in means between Non Survey takers and survey takers using the `mutate()` function to create a column called `Difference` and save this output to an an object called `cov_baseline`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  # Calculate difference between Survey and Non-Survey Takers\n  group_by(completed_baseline) %>%\n  # Calculate means for voter file variables\n  summarise(across(starts_with(\"vf_\"), mean))%>%\n  # Gather columns containing means, exclude column for groups\n  pivot_longer(\n    cols = starts_with(\"vf_\"),\n    names_to = \"Covariate\",\n    values_to = \"Means\"\n  ) %>%\n  pivot_wider(\n    names_from = completed_baseline,\n    values_from = Means\n  )%>%\n  # Calculate difference\n  mutate(\n    Diff_Survey = `No Survey` - Survey\n  ) -> cov_baseline\n\n# Display differences\ncov_baseline\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  Covariate   `No Survey` Survey Diff_Survey\n  <chr>             <dbl>  <dbl>       <dbl>\n1 vf_age           49.3   47.0        2.29  \n2 vf_female         0.563  0.587     -0.0241\n3 vf_democrat       0.452  0.476     -0.0241\n4 vf_white          0.133  0.213     -0.0800\n5 vf_vg_12          0.671  0.738     -0.0671\n```\n\n\n:::\n:::\n\n\nFinally, I [**join**](https://r4ds.had.co.nz/relational-data.html#outer-join){target=\"blank\"} the values from `cov_baseline` into `cov_vf` using the shared column `Covariate`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncov_balance <- cov_vf %>% \n  left_join(cov_baseline,\n            by = c(\"Covariate\" = \"Covariate\")\n            ) %>%\n  mutate_if(is.numeric,round,2)\ncov_balance\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 5\n  Covariate   `Voter File Means` `No Survey` Survey Diff_Survey\n  <chr>                    <dbl>       <dbl>  <dbl>       <dbl>\n1 vf_age                   49.2        49.3   47.0         2.29\n2 vf_female                 0.56        0.56   0.59       -0.02\n3 vf_democrat               0.45        0.45   0.48       -0.02\n4 vf_white                  0.14        0.13   0.21       -0.08\n5 vf_vg_12                  0.67        0.67   0.74       -0.07\n```\n\n\n:::\n:::\n\n\n1.  **Please describe the differences between those who completed the baseline survey and those who did not. Do these differences seem large or small?**\n\nRegistered voters who took the survey tended to be younger by about 2.3 years. They were a little more likely to be female and registered Democrats by about 2 percentage points. They were 8 percentage points more likely to be White and 7 percentage points more likely to have voted in the 2012 general election than registered to voters who did not complete the baseline survey. It's hard to say if these differences are large or small, or at least it's hard to say with the tools you currently have.\n\nLater in the course we'll learn how to formally test these differences.\n\nThe code below calculate these differences in means (`Estimate`), and standardizes thes differences by their `standard error` which is a measure of how much we'd expect these differences to vary if we were to repeat this study.\n\nAgain, we'll talk about this later, but the `Estimate` divided by its standard error produces what's called a `test statistic` (`t value`) below. Again, more on this to come, but a test statistic greater than 2 for a simple difference of means is generally seen as evidence that it is unlikely this difference could have arrisen by chance.\n\nWe quantify this evidence with a `p value` (`Pr(>|t|)`) which is a conditional probablity (again more to come) of observing the test statistic we did, if some claim about the world (here a null hypotesis that there's no difference between survey takers and non survey takers) was true. Again by convention, we take a `p value` less than 0.05 has evidence that the difference we observed was unlikely to happen by chance. The p-values for all of these differences are below that threshold, suggesting a substantive difference between people who did and did not take the survey.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# If needed install the estimator package\nif(!require(estimatr)){install.packages(\"estimatr\")}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: estimatr\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(estimatr)\ndifference_in_means(vf_age ~ completed_baseline, df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDesign:  Standard \n                          Estimate Std. Error   t value     Pr(>|t|)  CI Lower\ncompleted_baselineSurvey -2.294609  0.4231856 -5.422229 6.644116e-08 -3.124571\n                          CI Upper       DF\ncompleted_baselineSurvey -1.464647 1884.227\n```\n\n\n:::\n\n```{.r .cell-code}\ndifference_in_means(vf_female ~ completed_baseline, df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDesign:  Standard \n                           Estimate Std. Error  t value  Pr(>|t|)    CI Lower\ncompleted_baselineSurvey 0.02407179 0.01168631 2.059827 0.0395491 0.001152637\n                           CI Upper       DF\ncompleted_baselineSurvey 0.04699094 1926.849\n```\n\n\n:::\n\n```{.r .cell-code}\ndifference_in_means(vf_democrat ~ completed_baseline, df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDesign:  Standard \n                           Estimate Std. Error  t value   Pr(>|t|)     CI Lower\ncompleted_baselineSurvey 0.02405152 0.01185144 2.029417 0.04255315 0.0008085056\n                           CI Upper       DF\ncompleted_baselineSurvey 0.04729453 1924.591\n```\n\n\n:::\n\n```{.r .cell-code}\ndifference_in_means(vf_white ~ completed_baseline, df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDesign:  Standard \n                          Estimate  Std. Error  t value     Pr(>|t|)   CI Lower\ncompleted_baselineSurvey 0.0800237 0.009679071 8.267705 2.538799e-16 0.06104094\n                           CI Upper       DF\ncompleted_baselineSurvey 0.09900647 1893.426\n```\n\n\n:::\n\n```{.r .cell-code}\ndifference_in_means(vf_vg_12 ~ completed_baseline, df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDesign:  Standard \n                           Estimate Std. Error t value     Pr(>|t|)   CI Lower\ncompleted_baselineSurvey 0.06708314 0.01045477 6.41651 1.747561e-10 0.04657937\n                          CI Upper       DF\ncompleted_baselineSurvey 0.0875869 1939.909\n```\n\n\n:::\n:::\n\n\nJust for *fun* here's some code to calculate lots of differences in means programatically.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# If you don't have the purrr package, install it\nif(!require(purrr)){install.packages(\"purrr\")}\n# Load the purr package\nlibrary(purrr)\n\n# From the df data frame\ndf %>%\n  # Get the select the columns whose names start with vf_\n  select(starts_with(\"vf_\"))%>%\n  # Extract the column names\n  names()%>%\n  # Create the formulas to calculate the diff in means for\n  # Each variable\n  purrr::map(~ formula(paste0(.,\" ~ completed_baseline\"))) %>%\n  # Caclulate the difference in means for each variable\n  purrr::map(~difference_in_means(., data = df)) %>%\n  # Put the output into a tidy data frame.\n  map_df(tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                      term    estimate   std.error statistic      p.value\n1 completed_baselineSurvey -2.29460913 0.423185606 -5.422229 6.644116e-08\n2 completed_baselineSurvey  0.02407179 0.011686315  2.059827 3.954910e-02\n3 completed_baselineSurvey  0.02405152 0.011851441  2.029417 4.255315e-02\n4 completed_baselineSurvey  0.08002370 0.009679071  8.267705 2.538799e-16\n5 completed_baselineSurvey  0.06708314 0.010454770  6.416510 1.747561e-10\n       conf.low   conf.high       df     outcome\n1 -3.1245708127 -1.46464745 1884.227      vf_age\n2  0.0011526374  0.04699094 1926.849   vf_female\n3  0.0008085056  0.04729453 1924.591 vf_democrat\n4  0.0610409386  0.09900647 1893.426    vf_white\n5  0.0465793725  0.08758690 1939.909    vf_vg_12\n```\n\n\n:::\n:::\n\n\n# Examine the difference in covariates between those assigned to each treatment condition in the study.\n\nOne of the identifying assumptions of an experimental design like Broockman and Kalla's is that treatment is independent of potential outcomes and covariates.\n\nOne of the empirical implications of this assumption is that, that the differences in observable covariates between treatment and control should be small.\n\nTo the extent the groups are comparable on observable covariates, we are more confident that the random assignment of treatment conditions has created a credible counterfactual comparison.\n\nUsing the code from the previous section as a guide, calculate the difference in average covariate values between those subjects who completed the baseline survey and were randomly **assigned** to receive the `Trans-Equality` treatment, and those who were randomly assigned to receive the `Recyclying` placebo.\n\nTo accomplish this you will need to do the following:\n\n-   add a `filter(!is.na(treatment_assigned))%>%` after `df%>%` to filter out subjects who didn't not complete the baseline.\n-   Replace `completed_baseline` with `treatment_assigned` in the code\n-   In the `mutate()` function, change:\n    -   `Diff_Survey` to `Diff_Treatment`\n    -   the values `Survey` to `Recycling` and `No Survey` to `Trans-Equality`\n-   Change `-> cov_baseline` to `-> cov_treatment`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  # Calculate difference between Survey and Non-Survey Takers\n  group_by(treatment_assigned) %>%\n  filter(!is.na(treatment_assigned)) %>%\n  # Calculate means for voter file variables\n  summarise(across(starts_with(\"vf_\"), mean))%>%\n  pivot_longer(\n    cols = starts_with(\"vf_\"),\n    names_to = \"Covariate\",\n    values_to = \"Means\"\n  ) %>%\n  pivot_wider(\n    names_from = treatment_assigned,\n    values_from = Means\n  )%>%\n  # Calculate difference\n  mutate(\n    Diff_Treat = `Trans-Equality` - Recycling\n    )-> cov_treat\n\ncov_balance <- cov_balance %>% \n  left_join(cov_treat,\n            by = c(\"Covariate\" = \"Covariate\")\n            ) %>%\n  mutate_if(is.numeric,round,2)\ncov_balance\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 8\n  Covariate   `Voter File Means` `No Survey` Survey Diff_Survey Recycling\n  <chr>                    <dbl>       <dbl>  <dbl>       <dbl>     <dbl>\n1 vf_age                   49.2        49.3   47.0         2.29     46.3 \n2 vf_female                 0.56        0.56   0.59       -0.02      0.59\n3 vf_democrat               0.45        0.45   0.48       -0.02      0.46\n4 vf_white                  0.14        0.13   0.21       -0.08      0.21\n5 vf_vg_12                  0.67        0.67   0.74       -0.07      0.76\n# ℹ 2 more variables: `Trans-Equality` <dbl>, Diff_Treat <dbl>\n```\n\n\n:::\n:::\n\n\n1.  **Please describe the covariate differences between each treatment condition. Are these differences larger or smaller than those between who completed the survey and those who did not?**\n\nSubjects assigned to the treatment condition tended to be a little older (by about 1.3 years), were a little less likely to be women (by 1 percentage point) and have voted in the 2012 election (by about 3.7 percentage points) and a little more likely to be Democrats (by 2.4 percentage points) and white (0.7 percentage points).\n\nThese differences are smaller than the differences we saw between those who did and did not complete the baseline survey.\n\nA more formal test of these differences show none rise to conventional levels of signficance (although some are close).\n\nIn short, randomization appears to have succeeded in creating groups that are balanced on observable covariates\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  # Get the select the columns whose names start with vf_\n  select(starts_with(\"vf_\"))%>%\n  # Extract the column names\n  names()%>%\n  # Create the formulas to calculate the diff in means for\n  # Each variable\n  purrr::map(~ formula(paste0(.,\" ~ treatment_assigned\"))) %>%\n  # Caclulate the difference in means for each variable\n  purrr::map(~difference_in_means(., data = df)) %>%\n  # Put the output into a tidy data frame.\n  map_df(tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                              term     estimate  std.error  statistic\n1 treatment_assignedTrans-Equality  1.396351618 0.83909954  1.6641072\n2 treatment_assignedTrans-Equality -0.010315184 0.02305928 -0.4473333\n3 treatment_assignedTrans-Equality  0.024630820 0.02338612  1.0532239\n4 treatment_assignedTrans-Equality  0.007904825 0.01918266  0.4120818\n5 treatment_assignedTrans-Equality -0.037547318 0.02057720 -1.8247045\n     p.value    conf.low   conf.high       df     outcome\n1 0.09626310 -0.24934739 3.042050625 1820.500      vf_age\n2 0.65468760 -0.05554057 0.034910206 1822.958   vf_female\n3 0.29237797 -0.02123559 0.070497225 1822.978 vf_democrat\n4 0.68032796 -0.02971749 0.045527135 1822.611    vf_white\n5 0.06820959 -0.07790475 0.002810116 1818.910    vf_vg_12\n```\n\n\n:::\n:::\n\n\nAmong those who actually answered the door when canvassers came, we see that that those who received the Trans Equality treatment tended to be less likely to have voted in the 2012 election and this difference seems unlikely to have occurred just by chance (p \\< 0.05).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  # Get the select the columns whose names start with vf_\n  select(starts_with(\"vf_\"))%>%\n  # Extract the column names\n  names()%>%\n  # Create the formulas to calculate the diff in means for\n  # Each variable\n  purrr::map(~ formula(paste0(.,\" ~ treatment_group\"))) %>%\n  # Caclulate the difference in means for each variable\n  purrr::map(~difference_in_means(., data = df)) %>%\n  # Put the output into a tidy data frame.\n  map_df(tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                           term     estimate  std.error  statistic    p.value\n1 treatment_groupTrans-Equality  1.394452415 1.55307925  0.8978630 0.36969337\n2 treatment_groupTrans-Equality -0.051506456 0.04432244 -1.1620853 0.24575773\n3 treatment_groupTrans-Equality  0.049450024 0.04470558  1.1061265 0.26920556\n4 treatment_groupTrans-Equality  0.005117169 0.03895784  0.1313514 0.89555033\n5 treatment_groupTrans-Equality -0.070636059 0.03490806 -2.0234886 0.04357276\n     conf.low    conf.high       df     outcome\n1 -1.65695859  4.445863421 496.9527      vf_age\n2 -0.13858859  0.035575678 497.7538   vf_female\n3 -0.03838466  0.137284707 498.2590 vf_democrat\n4 -0.07142479  0.081659126 498.0901    vf_white\n5 -0.13922641 -0.002045711 483.1785    vf_vg_12\n```\n\n\n:::\n:::\n\n\nIf there there large differences across multiple covariates, we might worry that something systematic was going on with the canvassers that made participants more or less likely to answer the door.\n\nEven if we're confident these differences aren't something systematic, we can, as Broockman and Kalla do, adjust our estimates to control for these small differences to ensure that we're isolating the effect of the treatment and not conflating this with other chance variations the voting histories or demographics of the subjects in the treatment and the control.\n\nStatistically significant differences happen do happen by chance: 1 time out of 20 we'd expect a p-value below 0.05 even when there was no real difference.\n\nThe probablity of a false positive (i.e. of detecting a difference that isn't there) increases as we make more comparisons (test multiple differences)\n\nWe can [adjust our p values for these multiple](https://benwhalley.github.io/just-enough-r/multiple-comparisons.html){target=\"_blank\"} to control for this increased probablity of making false discoveries. When we do, the differences in voting rates are no longer statistically significant.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  # Get the select the columns whose names start with vf_\n  select(starts_with(\"vf_\"))%>%\n  # Extract the column names\n  names()%>%\n  # Create the formulas to calculate the diff in means for\n  # Each variable\n  purrr::map(~ formula(paste0(.,\" ~ treatment_group\"))) %>%\n  # Caclulate the difference in means for each variable\n  purrr::map(~difference_in_means(., data = df)) %>%\n  # Put the output into a tidy data frame.\n  map_df(tidy)%>%\n  mutate(\n    p.value = p.adjust(p.value, method = \"BH\")\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                           term     estimate  std.error  statistic   p.value\n1 treatment_groupTrans-Equality  1.394452415 1.55307925  0.8978630 0.4621167\n2 treatment_groupTrans-Equality -0.051506456 0.04432244 -1.1620853 0.4486759\n3 treatment_groupTrans-Equality  0.049450024 0.04470558  1.1061265 0.4486759\n4 treatment_groupTrans-Equality  0.005117169 0.03895784  0.1313514 0.8955503\n5 treatment_groupTrans-Equality -0.070636059 0.03490806 -2.0234886 0.2178638\n     conf.low    conf.high       df     outcome\n1 -1.65695859  4.445863421 496.9527      vf_age\n2 -0.13858859  0.035575678 497.7538   vf_female\n3 -0.03838466  0.137284707 498.2590 vf_democrat\n4 -0.07142479  0.081659126 498.0901    vf_white\n5 -0.13922641 -0.002045711 483.1785    vf_vg_12\n```\n\n\n:::\n:::\n\n\n# Calculate the Average Treatment Effect\n\nNow let's take the same approach to calculate the Average Treatment Effect (ATE) for each time period.\n\nUsing the code from the previous sections as a template,\n\n-   Add a `filter(!is.na(treatment_group))%>%` after `df%>%` to filter out subjects who didn't receive the treatment.[^3]\n-   Change `summarise(across(starts_with(\"vf_\"), mean))%>%` code to select variables that start with `therm_trans`\n-   Change the `cols` argument in `pivot_longer()` to select the columns that start with `therm_trans`\n-   Everywhere you see `treatment_assigned` in the code replace it with `treatement_group`\n-   In the `mutate()` function, change:\n    -   `Diff_Treatment` to `ATE`\n    -   Add the following line `Days = c(0,3,21,42,90)` to create a column called Days (\\*make sure to put a comma after `ATE =`Trans-Equality`- Recycling,` ). Be sure to wrap `Trans-Equality` in backticks \\` before and after the phrase\n-   Change `-> cov_treatment` to `ate_df`\n\n[^3]: Recall that only some people who completed the baseline and were assigned to receive the treatment actually answered the door when canvassers came knocking.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  # Calculate difference between Survey and Non-Survey Takers\n  group_by(treatment_assigned) %>%\n  filter(!is.na(treatment_assigned)) %>%\n  # Calculate means for voter file variables\n  summarise(across(starts_with(\"therm_trans\"), mean, na.rm=T))%>%\n  pivot_longer(\n    cols = starts_with(\"therm_trans\"),\n    names_to = \"Covariate\",\n    values_to = \"Means\"\n  ) %>%\n  pivot_wider(\n    names_from = treatment_assigned,\n    values_from = Means\n  )%>%\n  # Calculate difference\n  mutate(\n    ATE = `Trans-Equality` - Recycling,\n    Days = c(0,3,21,42,90)\n    )-> ate_df\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `across(starts_with(\"therm_trans\"), mean, na.rm = T)`.\nℹ In group 1: `treatment_assigned = \"Recycling\"`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n```\n\n\n:::\n\n```{.r .cell-code}\nate_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 5\n  Covariate      Recycling `Trans-Equality`   ATE  Days\n  <chr>              <dbl>            <dbl> <dbl> <dbl>\n1 therm_trans_t0      52.9             53.6 0.664     0\n2 therm_trans_t1      54.1             60.8 6.76      3\n3 therm_trans_t2      54.6             59.1 4.49     21\n4 therm_trans_t3      52.5             58.7 6.23     42\n5 therm_trans_t4      53.4             58.7 5.30     90\n```\n\n\n:::\n:::\n\n\n1.  **Did the treatment seem to effect respondents feelings toward transgender people?** The treatment appears to increase respondents favorable feelings toward transgender individuals by about 4 to 6 points\n2.  **Does this effect appear to last?** The effects appear relatively stable and persistent, as 90 days after the intervention, respondents who got the Trans-Equality treatment still rated transgender individuals more about 5.3 points higher than subjects who got the Recycling Placebo.\n\n# Plot the results and comment on the study\n\nUsing `ate_df` with commands from the `ggplot` package please produce a figure that displays these differences\n\n-   You'll need to provide\n    -   `data`\n    -   `aes`\n    -   `geom`\n\nHere's a simple plot visualzing the ATE's\n\n\n::: {.cell}\n\n```{.r .cell-code}\nate_df %>%\n  ggplot(aes(Days, ATE))+\n  geom_point()+\n  geom_hline(yintercept = 0,linetype=2)+\n  theme_bw()+\n  labs(x=\"Days Since Treatment\",\n       y = \"ATE on Feeling Thermometers\\n toward Transgender People\")\n```\n\n::: {.cell-output-display}\n![](03-lab-comments_files/figure-html/plotate-1.png){width=672}\n:::\n:::\n\n\nIf we wanted to produce something more simlar to Figure 1, we'd need to calculate **confidence intervals** around our estimate. Again, getting ahead of ourselves, a confidence interval is a coverage interval with the property that some $\\alpha$ percent of intervals constructed in this manner will contain the true value of quantitantity of interest. When we construct a 95% confidence interval, we are saying that 95 percent of the time this interval contains the \"truth\" (5 percent of the time the truth lies outside this interval). So we think of confidence intervals as conveying a *range of plausible* values for what the true difference between people who got the treatment and people who got the placebo might be. When 0 lies within this range, we conclude that the difference is \"non-significant\" since the estimate could have been negative or could have been positive (both are equally likely in a [Frequentist](https://en.wikipedia.org/wiki/Frequentist_inference) view of confidence intervals).\n\nBelow we see that the ATE appears non significant 21 days and 90 days after the intervention. The confidence intervals reported by Broockman and Kalla in figure 1 are generally much farther from 0. They're using multiple measures to capture a more general measure of transgender tolerance. In general, using multiple measures of a complex concept [reduces measurement error](https://www.cambridge.org/core/journals/american-political-science-review/article/abs/strength-of-issues-using-multiple-measures-to-gauge-preference-stability-ideological-constraint-and-issue-voting/16F6AF97F7B71AA0112EC9ADF78B553A){target=\"_blank\"}, resulting in more precise estimates.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  # Get the select the columns whose names start with vf_\n  select(starts_with(\"therm_trans\"))%>%\n  # Extract the column names\n  names()%>%\n  # Create the formulas to calculate the diff in means for\n  # Each variable\n  purrr::map(~ formula(paste0(.,\" ~ treatment_group\"))) %>%\n  # Caclulate the difference in means for each variable\n  purrr::map(~difference_in_means(., data = df)) %>%\n  # Put the output into a tidy data frame.\n  map_df(tidy)%>%\n  mutate(\n    ATE = estimate,\n    Days = c(0,3,21,42,90)\n  ) -> ate_df\n\nate_df %>%\n  ggplot(aes(Days, ATE))+\n  geom_point()+\n  geom_linerange(aes(ymin=conf.low, ymax=conf.high))+\n  geom_hline(yintercept = 0,linetype=2)+\n  theme_bw()+\n  labs(x=\"Days Since Treatment\",\n       y = \"ATE on Feeling Thermometers\\n toward Transgender People\")\n```\n\n::: {.cell-output-display}\n![](03-lab-comments_files/figure-html/atecis-1.png){width=672}\n:::\n:::\n\n\n1.  **Finally, use this space to share some thoughts on the study**\n\n-   **Do you find it convincing?** I do.\n-   **What makes the design credible?** Random assignment paired with a placebo control.\n-   **Are there things you would do differently?** I do wonder a bit about attrition across multiple waves (some people who completed the baseline survey don't respond to future surveys), and what the proper way scale their multiple measures into a single outcome measure is. There aren't huge differences on our observable covariates between those who participated in the baseline and those who participated in the final wave, so maybe it doesn't make a huge difference, but in theory, you could try and bound the results, imputing extreme values to those who drop out, to get a sense of how much attrition might change the conclusions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(df$therm_trans_t0[!is.na(df$treatment_group)]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(is.na(df$therm_trans_t1[!is.na(df$treatment_group)]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 72\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(is.na(df$therm_trans_t2[!is.na(df$treatment_group)]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 102\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(is.na(df$therm_trans_t3[!is.na(df$treatment_group)]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 100\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(is.na(df$therm_trans_t4[!is.na(df$treatment_group)]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 116\n```\n\n\n:::\n\n```{.r .cell-code}\ndf %>%\n  filter(!is.na(treatment_group))%>%\n  filter(!is.na(therm_trans_t0))%>%\n  group_by(treatment_group)%>%\n   # Calculate means for voter file variables\n  summarise(across(starts_with(\"vf_\"), mean))%>%\n  # Gather columns containing means, exclude column for groups\n  pivot_longer(\n    cols = starts_with(\"vf_\"),\n    names_to = \"Covariate\",\n    values_to = \"Means\"\n  ) %>%\n  pivot_wider(\n    names_from = treatment_group,\n    values_from = Means\n  )%>%\n  # Calculate difference\n  mutate(\n    Diff_t0 = `Trans-Equality` - Recycling\n  ) -> cov_bal_t0\n\ndf %>%\n  filter(!is.na(treatment_group))%>%\n  filter(!is.na(therm_trans_t4))%>%\n  group_by(treatment_group)%>%\n   # Calculate means for voter file variables\n  summarise(across(starts_with(\"vf_\"), mean))%>%\n  # Gather columns containing means, exclude column for groups\n  pivot_longer(\n    cols = starts_with(\"vf_\"),\n    names_to = \"Covariate\",\n    values_to = \"Means\"\n  ) %>%\n  pivot_wider(\n    names_from = treatment_group,\n    values_from = Means\n  )%>%\n  # Calculate difference\n  mutate(\n    Diff_t4 = `Trans-Equality` - Recycling\n  ) -> cov_bal_t4\n\ncov_bal_t0\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  Covariate   Recycling `Trans-Equality`  Diff_t0\n  <chr>           <dbl>            <dbl>    <dbl>\n1 vf_age         48.7             50.1    1.39   \n2 vf_female       0.592            0.541 -0.0515 \n3 vf_democrat     0.463            0.512  0.0495 \n4 vf_white        0.251            0.256  0.00512\n5 vf_vg_12        0.847            0.776 -0.0706 \n```\n\n\n:::\n\n```{.r .cell-code}\ncov_bal_t4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  Covariate   Recycling `Trans-Equality`  Diff_t4\n  <chr>           <dbl>            <dbl>    <dbl>\n1 vf_age         49.6             50.3    0.734  \n2 vf_female       0.597            0.575 -0.0217 \n3 vf_democrat     0.476            0.525  0.0494 \n4 vf_white        0.267            0.274  0.00675\n5 vf_vg_12        0.864            0.765 -0.0987 \n```\n\n\n:::\n:::\n\n\n-   **Do you think the results would \"travel\" to other topics and issues?** I think it would be interesting to apply this approach to questions of racial justice or partisan polarization.\n\n# Take the Class Survey\n\nPlease take a few moments to complete the [class survey](https://brown.co1.qualtrics.com/jfe/form/SV_3n0J3Rb8I7LjoSW){target=\"_blank\"} for this week.\n\nIf you're interested, the intellectual history of this study is quite the tail:\n\n-   [The Case of the Amazing Gay-Marriage Data: How a Graduate Student Reluctantly Uncovered a Huge Scientific Fraud](https://www.thecut.com/2015/05/how-a-grad-student-uncovered-a-huge-fraud.html)\n-   [How a Gay-Marriage Study Went Wrong](https://www.newyorker.com/science/maria-konnikova/how-a-gay-marriage-study-went-wrong)\n-   [How Two Grad Students Uncovered An Apparent Fraud — And A Way To Change Opinions On Transgender Rights](https://fivethirtyeight.com/features/how-two-grad-students-uncovered-michael-lacour-fraud-and-a-way-to-change-opinions-on-transgender-rights/)\n-   [How to talk someone out of bigotry](https://www.vox.com/2020/1/29/21065620/broockman-kalla-deep-canvassing)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}